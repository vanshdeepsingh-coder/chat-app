{"version":3,"file":"tinode.dev.js","mappings":"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","sources":["webpack://tinode/webpack/universalModuleDefinition","webpack://tinode/./src/access-mode.js","webpack://tinode/./src/cbuffer.js","webpack://tinode/./src/comm-error.js","webpack://tinode/./src/config.js","webpack://tinode/./src/connection.js","webpack://tinode/./src/db.js","webpack://tinode/./src/drafty.js","webpack://tinode/./src/large-file.js","webpack://tinode/./src/meta-builder.js","webpack://tinode/./src/topic.js","webpack://tinode/./src/utils.js","webpack://tinode/./version.js","webpack://tinode/webpack/bootstrap","webpack://tinode/webpack/runtime/compat get default export","webpack://tinode/webpack/runtime/define property getters","webpack://tinode/webpack/runtime/global","webpack://tinode/webpack/runtime/hasOwnProperty shorthand","webpack://tinode/webpack/runtime/make namespace object","webpack://tinode/./src/tinode.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tinode\"] = factory();\n\telse\n\t\troot[\"tinode\"] = factory();\n})(this, () => {\nreturn ","/**\n * @file Access control model.\n *\n * @copyright 2015-2022 Tinode LLC.\n */\n'use strict';\n\n// NOTE TO DEVELOPERS:\n// Localizable strings should be double quoted \"строка на другом языке\",\n// non-localizable strings should be single quoted 'non-localized'.\n\n/**\n * Helper class for handling access mode.\n *\n * @class AccessMode\n * @memberof Tinode\n *\n * @param {AccessMode|Object=} acs - AccessMode to copy or access mode object received from the server.\n */\nexport default class AccessMode {\n  constructor(acs) {\n    if (acs) {\n      this.given = typeof acs.given == 'number' ? acs.given : AccessMode.decode(acs.given);\n      this.want = typeof acs.want == 'number' ? acs.want : AccessMode.decode(acs.want);\n      this.mode = acs.mode ? (typeof acs.mode == 'number' ? acs.mode : AccessMode.decode(acs.mode)) :\n        (this.given & this.want);\n    }\n  }\n\n  static #checkFlag(val, side, flag) {\n    side = side || 'mode';\n    if (['given', 'want', 'mode'].includes(side)) {\n      return ((val[side] & flag) != 0);\n    }\n    throw new Error(`Invalid AccessMode component '${side}'`);\n  }\n  /**\n   * Parse string into an access mode value.\n   * @memberof Tinode.AccessMode\n   * @static\n   *\n   * @param {string | Number} mode - either a String representation of the access mode to parse or a set of bits to assign.\n   * @returns {number} - Access mode as a numeric value.\n   */\n  static decode(str) {\n    if (!str) {\n      return null;\n    } else if (typeof str == 'number') {\n      return str & AccessMode._BITMASK;\n    } else if (str === 'N' || str === 'n') {\n      return AccessMode._NONE;\n    }\n\n    const bitmask = {\n      'J': AccessMode._JOIN,\n      'R': AccessMode._READ,\n      'W': AccessMode._WRITE,\n      'P': AccessMode._PRES,\n      'A': AccessMode._APPROVE,\n      'S': AccessMode._SHARE,\n      'D': AccessMode._DELETE,\n      'O': AccessMode._OWNER\n    };\n\n    let m0 = AccessMode._NONE;\n\n    for (let i = 0; i < str.length; i++) {\n      const bit = bitmask[str.charAt(i).toUpperCase()];\n      if (!bit) {\n        // Unrecognized bit, skip.\n        continue;\n      }\n      m0 |= bit;\n    }\n    return m0;\n  }\n  /**\n   * Convert numeric representation of the access mode into a string.\n   *\n   * @memberof Tinode.AccessMode\n   * @static\n   *\n   * @param {number} val - access mode value to convert to a string.\n   * @returns {string} - Access mode as a string.\n   */\n  static encode(val) {\n    if (val === null || val === AccessMode._INVALID) {\n      return null;\n    } else if (val === AccessMode._NONE) {\n      return 'N';\n    }\n\n    const bitmask = ['J', 'R', 'W', 'P', 'A', 'S', 'D', 'O'];\n    let res = '';\n    for (let i = 0; i < bitmask.length; i++) {\n      if ((val & (1 << i)) != 0) {\n        res = res + bitmask[i];\n      }\n    }\n    return res;\n  }\n  /**\n   * Update numeric representation of access mode with the new value. The value\n   * is one of the following:\n   *  - a string starting with <code>'+'</code> or <code>'-'</code> then the bits to add or remove, e.g. <code>'+R-W'</code> or <code>'-PS'</code>.\n   *  - a new value of access mode\n   *\n   * @memberof Tinode.AccessMode\n   * @static\n   *\n   * @param {number} val - access mode value to update.\n   * @param {string} upd - update to apply to val.\n   * @returns {number} - updated access mode.\n   */\n  static update(val, upd) {\n    if (!upd || typeof upd != 'string') {\n      return val;\n    }\n\n    let action = upd.charAt(0);\n    if (action == '+' || action == '-') {\n      let val0 = val;\n      // Split delta-string like '+ABC-DEF+Z' into an array of parts including + and -.\n      const parts = upd.split(/([-+])/);\n      // Starting iteration from 1 because String.split() creates an array with the first empty element.\n      // Iterating by 2 because we parse pairs +/- then data.\n      for (let i = 1; i < parts.length - 1; i += 2) {\n        action = parts[i];\n        const m0 = AccessMode.decode(parts[i + 1]);\n        if (m0 == AccessMode._INVALID) {\n          return val;\n        }\n        if (m0 == null) {\n          continue;\n        }\n        if (action === '+') {\n          val0 |= m0;\n        } else if (action === '-') {\n          val0 &= ~m0;\n        }\n      }\n      val = val0;\n    } else {\n      // The string is an explicit new value 'ABC' rather than delta.\n      const val0 = AccessMode.decode(upd);\n      if (val0 != AccessMode._INVALID) {\n        val = val0;\n      }\n    }\n\n    return val;\n  }\n  /**\n   * Bits present in a1 but missing in a2.\n   *\n   * @static\n   * @memberof Tinode\n   *\n   * @param {number | string} a1 - access mode to subtract from.\n   * @param {number | string} a2 - access mode to subtract.\n   * @returns {number} access mode with bits present in <code>a1</code> but missing in <code>a2</code>.\n   */\n  static diff(a1, a2) {\n    a1 = AccessMode.decode(a1);\n    a2 = AccessMode.decode(a2);\n\n    if (a1 == AccessMode._INVALID || a2 == AccessMode._INVALID) {\n      return AccessMode._INVALID;\n    }\n    return a1 & ~a2;\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Custom formatter\n   */\n  toString() {\n    return '{\"mode\": \"' + AccessMode.encode(this.mode) +\n      '\", \"given\": \"' + AccessMode.encode(this.given) +\n      '\", \"want\": \"' + AccessMode.encode(this.want) + '\"}';\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Converts numeric values to strings.\n   */\n  jsonHelper() {\n    return {\n      mode: AccessMode.encode(this.mode),\n      given: AccessMode.encode(this.given),\n      want: AccessMode.encode(this.want)\n    };\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Assign value to 'mode'.\n   * @memberof Tinode.AccessMode\n   *\n   * @param {string | Number} m - either a string representation of the access mode or a set of bits.\n   * @returns {AccessMode} - <code>this</code> AccessMode.\n   */\n  setMode(m) {\n    this.mode = AccessMode.decode(m);\n    return this;\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Update <code>mode</code> value.\n   * @memberof Tinode.AccessMode\n   *\n   * @param {string} u - string representation of the changes to apply to access mode.\n   * @returns {AccessMode} - <code>this</code> AccessMode.\n   */\n  updateMode(u) {\n    this.mode = AccessMode.update(this.mode, u);\n    return this;\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Get <code>mode</code> value as a string.\n   * @memberof Tinode.AccessMode\n   *\n   * @returns {string} - <code>mode</code> value.\n   */\n  getMode() {\n    return AccessMode.encode(this.mode);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Assign <code>given</code>  value.\n   * @memberof Tinode.AccessMode\n   *\n   * @param {string | Number} g - either a string representation of the access mode or a set of bits.\n   * @returns {AccessMode} - <code>this</code> AccessMode.\n   */\n  setGiven(g) {\n    this.given = AccessMode.decode(g);\n    return this;\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Update 'given' value.\n   * @memberof Tinode.AccessMode\n   *\n   * @param {string} u - string representation of the changes to apply to access mode.\n   * @returns {AccessMode} - <code>this</code> AccessMode.\n   */\n  updateGiven(u) {\n    this.given = AccessMode.update(this.given, u);\n    return this;\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Get 'given' value as a string.\n   * @memberof Tinode.AccessMode\n   *\n   * @returns {string} - <b>given</b> value.\n   */\n  getGiven() {\n    return AccessMode.encode(this.given);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Assign 'want' value.\n   * @memberof Tinode.AccessMode\n   *\n   * @param {string | Number} w - either a string representation of the access mode or a set of bits.\n   * @returns {AccessMode} - <code>this</code> AccessMode.\n   */\n  setWant(w) {\n    this.want = AccessMode.decode(w);\n    return this;\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Update 'want' value.\n   * @memberof Tinode.AccessMode\n   *\n   * @param {string} u - string representation of the changes to apply to access mode.\n   * @returns {AccessMode} - <code>this</code> AccessMode.\n   */\n  updateWant(u) {\n    this.want = AccessMode.update(this.want, u);\n    return this;\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Get 'want' value as a string.\n   * @memberof Tinode.AccessMode\n   *\n   * @returns {string} - <b>want</b> value.\n   */\n  getWant() {\n    return AccessMode.encode(this.want);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Get permissions present in 'want' but missing in 'given'.\n   * Inverse of {@link Tinode.AccessMode#getExcessive}\n   *\n   * @memberof Tinode.AccessMode\n   *\n   * @returns {string} permissions present in <b>want</b> but missing in <b>given</b>.\n   */\n  getMissing() {\n    return AccessMode.encode(this.want & ~this.given);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Get permissions present in 'given' but missing in 'want'.\n   * Inverse of {@link Tinode.AccessMode#getMissing}\n   * @memberof Tinode.AccessMode\n   *\n   * @returns {string} permissions present in <b>given</b> but missing in <b>want</b>.\n   */\n  getExcessive() {\n    return AccessMode.encode(this.given & ~this.want);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Update 'want', 'give', and 'mode' values.\n   * @memberof Tinode.AccessMode\n   *\n   * @param {AccessMode} val - new access mode value.\n   * @returns {AccessMode} - <code>this</code> AccessMode.\n   */\n  updateAll(val) {\n    if (val) {\n      this.updateGiven(val.given);\n      this.updateWant(val.want);\n      this.mode = this.given & this.want;\n    }\n    return this;\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if Owner (O) flag is set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isOwner(side) {\n    return AccessMode.#checkFlag(this, side, AccessMode._OWNER);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if Presence (P) flag is set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isPresencer(side) {\n    return AccessMode.#checkFlag(this, side, AccessMode._PRES);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if Presence (P) flag is NOT set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isMuted(side) {\n    return !this.isPresencer(side);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if Join (J) flag is set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isJoiner(side) {\n    return AccessMode.#checkFlag(this, side, AccessMode._JOIN);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if Reader (R) flag is set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isReader(side) {\n    return AccessMode.#checkFlag(this, side, AccessMode._READ);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if Writer (W) flag is set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isWriter(side) {\n    return AccessMode.#checkFlag(this, side, AccessMode._WRITE);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if Approver (A) flag is set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isApprover(side) {\n    return AccessMode.#checkFlag(this, side, AccessMode._APPROVE);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if either one of Owner (O) or Approver (A) flags is set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isAdmin(side) {\n    return this.isOwner(side) || this.isApprover(side);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if either one of Owner (O), Approver (A), or Sharer (S) flags is set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isSharer(side) {\n    return this.isAdmin(side) || AccessMode.#checkFlag(this, side, AccessMode._SHARE);\n  }\n  /**\n   * AccessMode is a class representing topic access mode.\n   *\n   * @memberof Tinode\n   * @class AccessMode\n   */\n  /**\n   * Check if Deleter (D) flag is set.\n   * @memberof Tinode.AccessMode\n   * @param {string=} side - which permission to check: given, want, mode; default: mode.\n   * @returns {boolean} - <code>true</code> if flag is set.\n   */\n  isDeleter(side) {\n    return AccessMode.#checkFlag(this, side, AccessMode._DELETE);\n  }\n}\n\nAccessMode._NONE = 0x00;\nAccessMode._JOIN = 0x01;\nAccessMode._READ = 0x02;\nAccessMode._WRITE = 0x04;\nAccessMode._PRES = 0x08;\nAccessMode._APPROVE = 0x10;\nAccessMode._SHARE = 0x20;\nAccessMode._DELETE = 0x40;\nAccessMode._OWNER = 0x80;\n\nAccessMode._BITMASK = AccessMode._JOIN | AccessMode._READ | AccessMode._WRITE | AccessMode._PRES |\n  AccessMode._APPROVE | AccessMode._SHARE | AccessMode._DELETE | AccessMode._OWNER;\nAccessMode._INVALID = 0x100000;\n","/**\n * @file In-memory sorted cache of objects.\n *\n * @copyright 2015-2022 Tinode LLC.\n */\n'use strict';\n\n/**\n * In-memory sorted cache of objects.\n *\n * @class CBuffer\n * @memberof Tinode\n * @protected\n *\n * @param {function} compare custom comparator of objects. Takes two parameters <code>a</code> and <code>b</code>;\n *    returns <code>-1</code> if <code>a < b</code>, <code>0</code> if <code>a == b</code>, <code>1</code> otherwise.\n * @param {boolean} unique enforce element uniqueness: when <code>true</code> replace existing element with a new\n *    one on conflict; when <code>false</code> keep both elements.\n */\nexport default class CBuffer {\n  #comparator = undefined;\n  #unique = false;\n  buffer = [];\n\n  constructor(compare_, unique_) {\n    this.#comparator = compare_ || ((a, b) => {\n      return a === b ? 0 : a < b ? -1 : 1;\n    });\n    this.#unique = unique_;\n  }\n\n  #findNearest(elem, arr, exact) {\n    let start = 0;\n    let end = arr.length - 1;\n    let pivot = 0;\n    let diff = 0;\n    let found = false;\n\n    while (start <= end) {\n      pivot = (start + end) / 2 | 0;\n      diff = this.#comparator(arr[pivot], elem);\n      if (diff < 0) {\n        start = pivot + 1;\n      } else if (diff > 0) {\n        end = pivot - 1;\n      } else {\n        found = true;\n        break;\n      }\n    }\n    if (found) {\n      return {\n        idx: pivot,\n        exact: true\n      };\n    }\n    if (exact) {\n      return {\n        idx: -1\n      };\n    }\n    // Not exact - insertion point\n    return {\n      idx: diff < 0 ? pivot + 1 : pivot\n    };\n  }\n\n  // Insert element into a sorted array.\n  #insertSorted(elem, arr) {\n    const found = this.#findNearest(elem, arr, false);\n    const count = (found.exact && this.#unique) ? 1 : 0;\n    arr.splice(found.idx, count, elem);\n    return arr;\n  }\n\n  /**\n   * Get an element at the given position.\n   * @memberof Tinode.CBuffer#\n   * @param {number} at - Position to fetch from.\n   * @returns {Object} Element at the given position or <code>undefined</code>.\n   */\n  getAt(at) {\n    return this.buffer[at];\n  }\n\n  /**\n   * Convenience method for getting the element from the end of the buffer.\n   * @memberof Tinode.CBuffer#\n   * @param {number} at - position to fetch from, counting from the end;\n   *    <code>undefined</code> or <code>null</code>  mean \"last\".\n   * @returns {Object} The last element in the buffer or <code>undefined</code> if buffer is empty.\n   */\n  getLast(at) {\n    at |= 0;\n    return this.buffer.length > at ? this.buffer[this.buffer.length - 1 - at] : undefined;\n  }\n\n  /**\n   * Add new element(s) to the buffer. Variadic: takes one or more arguments. If an array is passed as a single\n   * argument, its elements are inserted individually.\n   * @memberof Tinode.CBuffer#\n   *\n   * @param {...Object|Array} - One or more objects to insert.\n   */\n  put() {\n    let insert;\n    // inspect arguments: if array, insert its elements, if one or more non-array arguments, insert them one by one\n    if (arguments.length == 1 && Array.isArray(arguments[0])) {\n      insert = arguments[0];\n    } else {\n      insert = arguments;\n    }\n    for (let idx in insert) {\n      this.#insertSorted(insert[idx], this.buffer);\n    }\n  }\n\n  /**\n   * Remove element at the given position.\n   * @memberof Tinode.CBuffer#\n   * @param {number} at - Position to delete at.\n   * @returns {Object} Element at the given position or <code>undefined</code>.\n   */\n  delAt(at) {\n    at |= 0;\n    let r = this.buffer.splice(at, 1);\n    if (r && r.length > 0) {\n      return r[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove elements between two positions.\n   * @memberof Tinode.CBuffer#\n   * @param {number} since - Position to delete from (inclusive).\n   * @param {number} before - Position to delete to (exclusive).\n   *\n   * @returns {Array} array of removed elements (could be zero length).\n   */\n  delRange(since, before) {\n    return this.buffer.splice(since, before - since);\n  }\n\n  /**\n   * Return the number of elements the buffer holds.\n   * @memberof Tinode.CBuffer#\n   * @return {number} Number of elements in the buffer.\n   */\n  length() {\n    return this.buffer.length;\n  }\n\n  /**\n   * Reset the buffer discarding all elements\n   * @memberof Tinode.CBuffer#\n   */\n  reset() {\n    this.buffer = [];\n  }\n\n  /**\n   * Callback for iterating contents of buffer. See {@link Tinode.CBuffer#forEach}.\n   * @callback ForEachCallbackType\n   * @memberof Tinode.CBuffer#\n   * @param {Object} elem - Current element of the buffer.\n   * @param {Object} prev - Previous element of the buffer.\n   * @param {Object} next - Next element of the buffer.\n   * @param {number} index - Index of the current element.\n   */\n\n  /**\n   * Apply given <code>callback</code> to all elements of the buffer.\n   * @memberof Tinode.CBuffer#\n   *\n   * @param {Tinode.ForEachCallbackType} callback - Function to call for each element.\n   * @param {number} startIdx - Optional index to start iterating from (inclusive).\n   * @param {number} beforeIdx - Optional index to stop iterating before (exclusive).\n   * @param {Object} context - calling context (i.e. value of <code>this</code> in callback)\n   */\n  forEach(callback, startIdx, beforeIdx, context) {\n    startIdx = startIdx | 0;\n    beforeIdx = beforeIdx || this.buffer.length;\n\n    for (let i = startIdx; i < beforeIdx; i++) {\n      callback.call(context, this.buffer[i],\n        (i > startIdx ? this.buffer[i - 1] : undefined),\n        (i < beforeIdx - 1 ? this.buffer[i + 1] : undefined), i);\n    }\n  }\n\n  /**\n   * Find element in buffer using buffer's comparison function.\n   * @memberof Tinode.CBuffer#\n   *\n   * @param {Object} elem - element to find.\n   * @param {boolean=} nearest - when true and exact match is not found, return the nearest element (insertion point).\n   * @returns {number} index of the element in the buffer or -1.\n   */\n  find(elem, nearest) {\n    const {\n      idx\n    } = this.#findNearest(elem, this.buffer, !nearest);\n    return idx;\n  }\n\n  /**\n   * Callback for filtering the buffer. See {@link Tinode.CBuffer#filter}.\n   * @callback FilterCallbackType\n   * @memberof Tinode.CBuffer#\n   * @param {Object} elem - Current element of the buffer.\n   * @param {number} index - Index of the current element.\n   * @returns {boolen} <code>true</code> to keep the element, <code>false</code> to remove.\n   */\n\n  /**\n   * Remove all elements that do not pass the test implemented by the provided callback function.\n   * @memberof Tinode.CBuffer#\n   *\n   * @param {Tinode.FilterCallbackType} callback - Function to call for each element.\n   * @param {Object} context - calling context (i.e. value of <code>this</code> in the callback)\n   */\n  filter(callback, context) {\n    let count = 0;\n    for (let i = 0; i < this.buffer.length; i++) {\n      if (callback.call(context, this.buffer[i], i)) {\n        this.buffer[count] = this.buffer[i];\n        count++;\n      }\n    }\n\n    this.buffer.splice(count);\n  }\n\n  /**\n   * Check if buffer is empty.\n   * @returns {boolean} <code>true</code> if the buffer is empty, <code>false</code> otherwise.\n   */\n  isEmpty() {\n    return this.buffer.length == 0;\n  }\n}\n","/**\n * @file Throwable error with numeric error code.\n *\n * @copyright 2015-2023 Tinode LLC.\n */\n'use strict';\n\nexport default class CommError extends Error {\n  constructor(message, code) {\n    super(`${message} (${code})`);\n    this.name = 'CommError';\n    this.code = code;\n  }\n}\n","/**\n * @file Global constants and configuration parameters.\n *\n * @copyright 2015-2023 Tinode LLC\n */\n'use strict';\n\nimport {\n  PACKAGE_VERSION\n} from '../version.js';\n\n// Global constants\nexport const PROTOCOL_VERSION = '0'; // Major component of the version, e.g. '0' in '0.17.1'.\nexport const VERSION = PACKAGE_VERSION || '0.21';\nexport const LIBRARY = 'tinodejs/' + VERSION;\n\n// Topic name prefixes.\nexport const TOPIC_NEW = 'new';\nexport const TOPIC_NEW_CHAN = 'nch';\nexport const TOPIC_ME = 'me';\nexport const TOPIC_FND = 'fnd';\nexport const TOPIC_SYS = 'sys';\nexport const TOPIC_CHAN = 'chn';\nexport const TOPIC_GRP = 'grp';\nexport const TOPIC_P2P = 'p2p';\nexport const USER_NEW = 'new';\n\n// Starting value of a locally-generated seqId used for pending messages.\nexport const LOCAL_SEQID = 0xFFFFFFF;\n\n// Status codes.\nexport const MESSAGE_STATUS_NONE = 0; // Status not assigned.\nexport const MESSAGE_STATUS_QUEUED = 10; // Local ID assigned, in progress to be sent.\nexport const MESSAGE_STATUS_SENDING = 20; // Transmission started.\nexport const MESSAGE_STATUS_FAILED = 30; // At least one attempt was made to send the message.\nexport const MESSAGE_STATUS_FATAL = 40; // Message sending failed and it should not be retried.\nexport const MESSAGE_STATUS_SENT = 50; // Delivered to the server.\nexport const MESSAGE_STATUS_RECEIVED = 60; // Received by the client.\nexport const MESSAGE_STATUS_READ = 70; // Read by the user.\nexport const MESSAGE_STATUS_TO_ME = 80; // The message is received from another user.\n\n// Reject unresolved futures after this many milliseconds.\nexport const EXPIRE_PROMISES_TIMEOUT = 5_000;\n// Periodicity of garbage collection of unresolved futures.\nexport const EXPIRE_PROMISES_PERIOD = 1_000;\n\n// Delay before acknowledging that a message was recived.\nexport const RECV_TIMEOUT = 100;\n\n// Default number of messages to pull into memory from persistent cache.\nexport const DEFAULT_MESSAGES_PAGE = 24;\n\n// Unicode DEL character indicating data was deleted.\nexport const DEL_CHAR = '\\u2421';\n","/**\n * @file Abstraction layer for websocket and long polling connections.\n *\n * @copyright 2015-2022 Tinode LLC.\n */\n'use strict';\n\nimport CommError from './comm-error.js';\nimport {\n  jsonParseHelper\n} from './utils.js';\n\nlet WebSocketProvider;\nlet XHRProvider;\n\n// Error code to return in case of a network problem.\nconst NETWORK_ERROR = 503;\nconst NETWORK_ERROR_TEXT = \"Connection failed\";\n\n// Error code to return when user disconnected from server.\nconst NETWORK_USER = 418;\nconst NETWORK_USER_TEXT = \"Disconnected by client\";\n\n// Settings for exponential backoff\nconst _BOFF_BASE = 2000; // 2000 milliseconds, minimum delay between reconnects\nconst _BOFF_MAX_ITER = 10; // Maximum delay between reconnects 2^10 * 2000 ~ 34 minutes\nconst _BOFF_JITTER = 0.3; // Add random delay\n\n// Helper function for creating an endpoint URL.\nfunction makeBaseUrl(host, protocol, version, apiKey) {\n  let url = null;\n\n  if (['http', 'https', 'ws', 'wss'].includes(protocol)) {\n    url = `${protocol}://${host}`;\n    if (url.charAt(url.length - 1) !== '/') {\n      url += '/';\n    }\n    url += 'v' + version + '/channels';\n    if (['http', 'https'].includes(protocol)) {\n      // Long polling endpoint ends with \"lp\", i.e.\n      // '/v0/channels/lp' vs just '/v0/channels' for ws\n      url += '/lp';\n    }\n    url += '?apikey=' + apiKey;\n  }\n  return url;\n}\n\n/**\n * An abstraction for a websocket or a long polling connection.\n *\n * @class Connection\n * @memberof Tinode\n\n * @param {Object} config - configuration parameters.\n * @param {string} config.host - Host name and optional port number to connect to.\n * @param {string} config.apiKey - API key generated by <code>keygen</code>.\n * @param {string} config.transport - Network transport to use, either <code>\"ws\"<code>/<code>\"wss\"</code> for websocket or\n *      <code>lp</code> for long polling.\n * @param {boolean} config.secure - Use Secure WebSocket if <code>true</code>.\n * @param {string} version_ - Major value of the protocol version, e.g. '0' in '0.17.1'.\n * @param {boolean} autoreconnect_ - If connection is lost, try to reconnect automatically.\n */\nexport default class Connection {\n  // Logger, does nothing by default.\n  static #log = _ => {};\n\n  #boffTimer = null;\n  #boffIteration = 0;\n  #boffClosed = false; // Indicator if the socket was manually closed - don't autoreconnect if true.\n\n  // Websocket.\n  #socket = null;\n\n  host;\n  secure;\n  apiKey;\n\n  version;\n  autoreconnect;\n\n  initialized;\n\n  // (config.host, config.apiKey, config.transport, config.secure), PROTOCOL_VERSION, true\n  constructor(config, version_, autoreconnect_) {\n    this.host = config.host;\n    this.secure = config.secure;\n    this.apiKey = config.apiKey;\n\n    this.version = version_;\n    this.autoreconnect = autoreconnect_;\n\n    if (config.transport === 'lp') {\n      // explicit request to use long polling\n      this.#init_lp();\n      this.initialized = 'lp';\n    } else if (config.transport === 'ws') {\n      // explicit request to use web socket\n      // if websockets are not available, horrible things will happen\n      this.#init_ws();\n      this.initialized = 'ws';\n    }\n\n    if (!this.initialized) {\n      // Invalid or undefined network transport.\n      Connection.#log(\"Unknown or invalid network transport. Running under Node? Call 'Tinode.setNetworkProviders()'.\");\n      throw new Error(\"Unknown or invalid network transport. Running under Node? Call 'Tinode.setNetworkProviders()'.\");\n    }\n  }\n\n  /**\n   * To use Connection in a non browser context, supply WebSocket and XMLHttpRequest providers.\n   * @static\n   * @memberof Connection\n   * @param wsProvider WebSocket provider, e.g. for nodeJS , <code>require('ws')</code>.\n   * @param xhrProvider XMLHttpRequest provider, e.g. for node <code>require('xhr')</code>.\n   */\n  static setNetworkProviders(wsProvider, xhrProvider) {\n    WebSocketProvider = wsProvider;\n    XHRProvider = xhrProvider;\n  }\n\n  /**\n   * Assign a non-default logger.\n   * @static\n   * @memberof Connection\n   * @param {function} l variadic logging function.\n   */\n  static set logger(l) {\n    Connection.#log = l;\n  }\n\n  /**\n   * Initiate a new connection\n   * @memberof Tinode.Connection#\n   * @param {string} host_ Host name to connect to; if <code>null</code> the old host name will be used.\n   * @param {boolean} force Force new connection even if one already exists.\n   * @return {Promise} Promise resolved/rejected when the connection call completes, resolution is called without\n   *  parameters, rejection passes the {Error} as parameter.\n   */\n  connect(host_, force) {\n    return Promise.reject(null);\n  }\n\n  /**\n   * Try to restore a network connection, also reset backoff.\n   * @memberof Tinode.Connection#\n   *\n   * @param {boolean} force - reconnect even if there is a live connection already.\n   */\n  reconnect(force) {}\n\n  /**\n   * Terminate the network connection\n   * @memberof Tinode.Connection#\n   */\n  disconnect() {}\n\n  /**\n   * Send a string to the server.\n   * @memberof Tinode.Connection#\n   *\n   * @param {string} msg - String to send.\n   * @throws Throws an exception if the underlying connection is not live.\n   */\n  sendText(msg) {}\n\n  /**\n   * Check if connection is alive.\n   * @memberof Tinode.Connection#\n   * @returns {boolean} <code>true</code> if connection is live, <code>false</code> otherwise.\n   */\n  isConnected() {\n    return false;\n  }\n\n  /**\n   * Get the name of the current network transport.\n   * @memberof Tinode.Connection#\n   * @returns {string} name of the transport such as <code>\"ws\"</code> or <code>\"lp\"</code>.\n   */\n  transport() {\n    return this.initialized;\n  }\n\n  /**\n   * Send network probe to check if connection is indeed live.\n   * @memberof Tinode.Connection#\n   */\n  probe() {\n    this.sendText('1');\n  }\n\n  /**\n   * Reset autoreconnect counter to zero.\n   * @memberof Tinode.Connection#\n   */\n  backoffReset() {\n    this.#boffReset();\n  }\n\n  // Backoff implementation - reconnect after a timeout.\n  #boffReconnect() {\n    // Clear timer\n    clearTimeout(this.#boffTimer);\n    // Calculate when to fire the reconnect attempt\n    const timeout = _BOFF_BASE * (Math.pow(2, this.#boffIteration) * (1.0 + _BOFF_JITTER * Math.random()));\n    // Update iteration counter for future use\n    this.#boffIteration = (this.#boffIteration >= _BOFF_MAX_ITER ? this.#boffIteration : this.#boffIteration + 1);\n    if (this.onAutoreconnectIteration) {\n      this.onAutoreconnectIteration(timeout);\n    }\n\n    this.#boffTimer = setTimeout(_ => {\n      Connection.#log(`Reconnecting, iter=${this.#boffIteration}, timeout=${timeout}`);\n      // Maybe the socket was closed while we waited for the timer?\n      if (!this.#boffClosed) {\n        const prom = this.connect();\n        if (this.onAutoreconnectIteration) {\n          this.onAutoreconnectIteration(0, prom);\n        } else {\n          // Suppress error if it's not used.\n          prom.catch(_ => {\n            /* do nothing */\n          });\n        }\n      } else if (this.onAutoreconnectIteration) {\n        this.onAutoreconnectIteration(-1);\n      }\n    }, timeout);\n  }\n\n  // Terminate auto-reconnect process.\n  #boffStop() {\n    clearTimeout(this.#boffTimer);\n    this.#boffTimer = null;\n  }\n\n  // Reset auto-reconnect iteration counter.\n  #boffReset() {\n    this.#boffIteration = 0;\n  }\n\n  // Initialization for long polling.\n  #init_lp() {\n    const XDR_UNSENT = 0; // Client has been created. open() not called yet.\n    const XDR_OPENED = 1; // open() has been called.\n    const XDR_HEADERS_RECEIVED = 2; // send() has been called, and headers and status are available.\n    const XDR_LOADING = 3; // Downloading; responseText holds partial data.\n    const XDR_DONE = 4; // The operation is complete.\n\n    // Fully composed endpoint URL, with API key & SID\n    let _lpURL = null;\n\n    let _poller = null;\n    let _sender = null;\n\n    let lp_sender = (url_) => {\n      const sender = new XHRProvider();\n      sender.onreadystatechange = (evt) => {\n        if (sender.readyState == XDR_DONE && sender.status >= 400) {\n          // Some sort of error response\n          throw new CommError(\"LP sender failed\", sender.status);\n        }\n      };\n\n      sender.open('POST', url_, true);\n      return sender;\n    }\n\n    let lp_poller = (url_, resolve, reject) => {\n      let poller = new XHRProvider();\n      let promiseCompleted = false;\n\n      poller.onreadystatechange = evt => {\n        if (poller.readyState == XDR_DONE) {\n          if (poller.status == 201) { // 201 == HTTP.Created, get SID\n            let pkt = JSON.parse(poller.responseText, jsonParseHelper);\n            _lpURL = url_ + '&sid=' + pkt.ctrl.params.sid;\n            poller = lp_poller(_lpURL);\n            poller.send(null);\n            if (this.onOpen) {\n              this.onOpen();\n            }\n\n            if (resolve) {\n              promiseCompleted = true;\n              resolve();\n            }\n\n            if (this.autoreconnect) {\n              this.#boffStop();\n            }\n          } else if (poller.status > 0 && poller.status < 400) { // 0 = network error; 400 = HTTP.BadRequest\n            if (this.onMessage) {\n              this.onMessage(poller.responseText);\n            }\n            poller = lp_poller(_lpURL);\n            poller.send(null);\n          } else {\n            // Don't throw an error here, gracefully handle server errors\n            if (reject && !promiseCompleted) {\n              promiseCompleted = true;\n              reject(poller.responseText);\n            }\n            if (this.onMessage && poller.responseText) {\n              this.onMessage(poller.responseText);\n            }\n            if (this.onDisconnect) {\n              const code = poller.status || (this.#boffClosed ? NETWORK_USER : NETWORK_ERROR);\n              const text = poller.responseText || (this.#boffClosed ? NETWORK_USER_TEXT : NETWORK_ERROR_TEXT);\n              this.onDisconnect(new CommError(text, code), code);\n            }\n\n            // Polling has stopped. Indicate it by setting poller to null.\n            poller = null;\n            if (!this.#boffClosed && this.autoreconnect) {\n              this.#boffReconnect();\n            }\n          }\n        }\n      };\n      // Using POST to avoid caching response by service worker.\n      poller.open('POST', url_, true);\n      return poller;\n    }\n\n    this.connect = (host_, force) => {\n      this.#boffClosed = false;\n\n      if (_poller) {\n        if (!force) {\n          return Promise.resolve();\n        }\n        _poller.onreadystatechange = undefined;\n        _poller.abort();\n        _poller = null;\n      }\n\n      if (host_) {\n        this.host = host_;\n      }\n\n      return new Promise((resolve, reject) => {\n        const url = makeBaseUrl(this.host, this.secure ? 'https' : 'http', this.version, this.apiKey);\n        Connection.#log(\"LP connecting to:\", url);\n        _poller = lp_poller(url, resolve, reject);\n        _poller.send(null);\n      }).catch(err => {\n        Connection.#log(\"LP connection failed:\", err);\n      });\n    };\n\n    this.reconnect = force => {\n      this.#boffStop();\n      this.connect(null, force);\n    };\n\n    this.disconnect = _ => {\n      this.#boffClosed = true;\n      this.#boffStop();\n\n      if (_sender) {\n        _sender.onreadystatechange = undefined;\n        _sender.abort();\n        _sender = null;\n      }\n      if (_poller) {\n        _poller.onreadystatechange = undefined;\n        _poller.abort();\n        _poller = null;\n      }\n\n      if (this.onDisconnect) {\n        this.onDisconnect(new CommError(NETWORK_USER_TEXT, NETWORK_USER), NETWORK_USER);\n      }\n      // Ensure it's reconstructed\n      _lpURL = null;\n    };\n\n    this.sendText = (msg) => {\n      _sender = lp_sender(_lpURL);\n      if (_sender && (_sender.readyState == XDR_OPENED)) { // 1 == OPENED\n        _sender.send(msg);\n      } else {\n        throw new Error(\"Long poller failed to connect\");\n      }\n    };\n\n    this.isConnected = _ => {\n      return (_poller && true);\n    };\n  }\n\n  // Initialization for Websocket\n  #init_ws() {\n    this.connect = (host_, force) => {\n      this.#boffClosed = false;\n\n      if (this.#socket) {\n        if (!force && this.#socket.readyState == this.#socket.OPEN) {\n          return Promise.resolve();\n        }\n        this.#socket.close();\n        this.#socket = null;\n      }\n\n      if (host_) {\n        this.host = host_;\n      }\n\n      return new Promise((resolve, reject) => {\n        const url = makeBaseUrl(this.host, this.secure ? 'wss' : 'ws', this.version, this.apiKey);\n\n        Connection.#log(\"WS connecting to: \", url);\n\n        // It throws when the server is not accessible but the exception cannot be caught:\n        // https://stackoverflow.com/questions/31002592/javascript-doesnt-catch-error-in-websocket-instantiation/31003057\n        const conn = new WebSocketProvider(url);\n\n        conn.onerror = err => {\n          reject(err);\n        };\n\n        conn.onopen = _ => {\n          if (this.autoreconnect) {\n            this.#boffStop();\n          }\n\n          if (this.onOpen) {\n            this.onOpen();\n          }\n\n          resolve();\n        };\n\n        conn.onclose = _ => {\n          this.#socket = null;\n\n          if (this.onDisconnect) {\n            const code = this.#boffClosed ? NETWORK_USER : NETWORK_ERROR;\n            this.onDisconnect(new CommError(this.#boffClosed ? NETWORK_USER_TEXT : NETWORK_ERROR_TEXT, code), code);\n          }\n\n          if (!this.#boffClosed && this.autoreconnect) {\n            this.#boffReconnect();\n          }\n        };\n\n        conn.onmessage = evt => {\n          if (this.onMessage) {\n            this.onMessage(evt.data);\n          }\n        };\n\n        this.#socket = conn;\n      });\n    }\n\n    this.reconnect = force => {\n      this.#boffStop();\n      this.connect(null, force);\n    };\n\n    this.disconnect = _ => {\n      this.#boffClosed = true;\n      this.#boffStop();\n\n      if (!this.#socket) {\n        return;\n      }\n      this.#socket.close();\n      this.#socket = null;\n    };\n\n    this.sendText = msg => {\n      if (this.#socket && (this.#socket.readyState == this.#socket.OPEN)) {\n        this.#socket.send(msg);\n      } else {\n        throw new Error(\"Websocket is not connected\");\n      }\n    };\n\n    this.isConnected = _ => {\n      return (this.#socket && (this.#socket.readyState == this.#socket.OPEN));\n    };\n  }\n\n  // Callbacks:\n\n  /**\n   * A callback to pass incoming messages to. See {@link Tinode.Connection#onMessage}.\n   * @callback Tinode.Connection.OnMessage\n   * @memberof Tinode.Connection\n   * @param {string} message - Message to process.\n   */\n  onMessage = undefined;\n\n  /**\n   * A callback for reporting a dropped connection.\n   * @type {function}\n   * @memberof Tinode.Connection#\n   */\n  onDisconnect = undefined;\n\n  /**\n   * A callback called when the connection is ready to be used for sending. For websockets it's socket open,\n   * for long polling it's <code>readyState=1</code> (OPENED)\n   * @type {function}\n   * @memberof Tinode.Connection#\n   */\n  onOpen = undefined;\n\n  /**\n   * A callback to notify of reconnection attempts. See {@link Tinode.Connection#onAutoreconnectIteration}.\n   * @memberof Tinode.Connection\n   * @callback AutoreconnectIterationType\n   * @param {string} timeout - time till the next reconnect attempt in milliseconds. <code>-1</code> means reconnect was skipped.\n   * @param {Promise} promise resolved or rejected when the reconnect attemp completes.\n   *\n   */\n  /**\n   * A callback to inform when the next attampt to reconnect will happen and to receive connection promise.\n   * @memberof Tinode.Connection#\n   * @type {Tinode.Connection.AutoreconnectIterationType}\n   */\n  onAutoreconnectIteration = undefined;\n}\n\nConnection.NETWORK_ERROR = NETWORK_ERROR;\nConnection.NETWORK_ERROR_TEXT = NETWORK_ERROR_TEXT;\nConnection.NETWORK_USER = NETWORK_USER;\nConnection.NETWORK_USER_TEXT = NETWORK_USER_TEXT;\n","/**\n * @file Helper methods for dealing with IndexedDB cache of messages, users, and topics.\n *\n * @copyright 2015-2022 Tinode LLC.\n */\n'use strict';\n\n// NOTE TO DEVELOPERS:\n// Localizable strings should be double quoted \"строка на другом языке\",\n// non-localizable strings should be single quoted 'non-localized'.\n\nconst DB_VERSION = 1;\nconst DB_NAME = 'tinode-web';\n\nlet IDBProvider;\n\nexport default class DB {\n  #onError = _ => {};\n  #logger = _ => {};\n\n  // Instance of IndexDB.\n  db = null;\n  // Indicator that the cache is disabled.\n  disabled = true;\n\n  constructor(onError, logger) {\n    this.#onError = onError || this.#onError;\n    this.#logger = logger || this.#logger;\n  }\n\n  #mapObjects(source, callback, context) {\n    if (!this.db) {\n      return disabled ?\n        Promise.resolve([]) :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction([source]);\n      trx.onerror = event => {\n        this.#logger('PCache', 'mapObjects', source, event.target.error);\n        reject(event.target.error);\n      };\n      trx.objectStore(source).getAll().onsuccess = event => {\n        if (callback) {\n          event.target.result.forEach(topic => {\n            callback.call(context, topic);\n          });\n        }\n        resolve(event.target.result);\n      };\n    });\n  }\n\n  /**\n   * Initialize persistent cache: open or create/upgrade if needed.\n   * @returns {Promise} promise to be resolved/rejected when the DB is initialized.\n   */\n  initDatabase() {\n    return new Promise((resolve, reject) => {\n      // Open the database and initialize callbacks.\n      const req = IDBProvider.open(DB_NAME, DB_VERSION);\n      req.onsuccess = event => {\n        this.db = event.target.result;\n        this.disabled = false;\n        resolve(this.db);\n      };\n      req.onerror = event => {\n        this.#logger('PCache', \"failed to initialize\", event);\n        reject(event.target.error);\n        this.#onError(event.target.error);\n      };\n      req.onupgradeneeded = event => {\n        this.db = event.target.result;\n\n        this.db.onerror = event => {\n          this.#logger('PCache', \"failed to create storage\", event);\n          this.#onError(event.target.error);\n        };\n\n        // Individual object stores.\n        // Object store (table) for topics. The primary key is topic name.\n        this.db.createObjectStore('topic', {\n          keyPath: 'name'\n        });\n\n        // Users object store. UID is the primary key.\n        this.db.createObjectStore('user', {\n          keyPath: 'uid'\n        });\n\n        // Subscriptions object store topic <-> user. Topic name + UID is the primary key.\n        this.db.createObjectStore('subscription', {\n          keyPath: ['topic', 'uid']\n        });\n\n        // Messages object store. The primary key is topic name + seq.\n        this.db.createObjectStore('message', {\n          keyPath: ['topic', 'seq']\n        });\n      };\n    });\n  }\n\n  /**\n   * Delete persistent cache.\n   */\n  deleteDatabase() {\n    // Close connection, otherwise operations will fail with 'onblocked'.\n    if (this.db) {\n      this.db.close();\n      this.db = null;\n    }\n    return new Promise((resolve, reject) => {\n      const req = IDBProvider.deleteDatabase(DB_NAME);\n      req.onblocked = _ => {\n        if (this.db) {\n          this.db.close();\n        }\n        const err = new Error(\"blocked\");\n        this.#logger('PCache', 'deleteDatabase', err);\n        reject(err);\n      };\n      req.onsuccess = _ => {\n        this.db = null;\n        this.disabled = true;\n        resolve(true);\n      };\n      req.onerror = event => {\n        this.#logger('PCache', 'deleteDatabase', event.target.error);\n        reject(event.target.error);\n      };\n    });\n  }\n\n  /**\n   * Check if persistent cache is ready for use.\n   * @memberOf DB\n   * @returns {boolean} <code>true</code> if cache is ready, <code>false</code> otherwise.\n   */\n  isReady() {\n    return !!this.db;\n  }\n\n  // Topics.\n\n  /**\n   * Save to cache or update topic in persistent cache.\n   * @memberOf DB\n   * @param {Topic} topic - topic to be added or updated.\n   * @returns {Promise} promise resolved/rejected on operation completion.\n   */\n  updTopic(topic) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['topic'], 'readwrite');\n      trx.oncomplete = event => {\n        resolve(event.target.result);\n      };\n      trx.onerror = event => {\n        this.#logger('PCache', 'updTopic', event.target.error);\n        reject(event.target.error);\n      };\n      const req = trx.objectStore('topic').get(topic.name);\n      req.onsuccess = _ => {\n        trx.objectStore('topic').put(DB.#serializeTopic(req.result, topic));\n        trx.commit();\n      };\n    });\n  }\n\n  /**\n   * Mark or unmark topic as deleted.\n   * @memberOf DB\n   * @param {string} name - name of the topic to mark or unmark.\n   * @param {boolean} deleted - status\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  markTopicAsDeleted(name, deleted) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['topic'], 'readwrite');\n      trx.oncomplete = event => {\n        resolve(event.target.result);\n      };\n      trx.onerror = event => {\n        this.#logger('PCache', 'markTopicAsDeleted', event.target.error);\n        reject(event.target.error);\n      };\n      const req = trx.objectStore('topic').get(name);\n      req.onsuccess = event => {\n        const topic = event.target.result;\n        if (topic && topic._deleted != deleted) {\n          topic._deleted = deleted;\n          trx.objectStore('topic').put(topic);\n        }\n        trx.commit();\n      };\n    });\n  }\n\n  /**\n   * Remove topic from persistent cache.\n   * @memberOf DB\n   * @param {string} name - name of the topic to remove from database.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  remTopic(name) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['topic', 'subscription', 'message'], 'readwrite');\n      trx.oncomplete = event => {\n        resolve(event.target.result);\n      };\n      trx.onerror = event => {\n        this.#logger('PCache', 'remTopic', event.target.error);\n        reject(event.target.error);\n      };\n      trx.objectStore('topic').delete(IDBKeyRange.only(name));\n      trx.objectStore('subscription').delete(IDBKeyRange.bound([name, '-'], [name, '~']));\n      trx.objectStore('message').delete(IDBKeyRange.bound([name, 0], [name, Number.MAX_SAFE_INTEGER]));\n      trx.commit();\n    });\n  }\n\n  /**\n   * Execute a callback for each stored topic.\n   * @memberOf DB\n   * @param {function} callback - function to call for each topic.\n   * @param {Object} context - the value or <code>this</code> inside the callback.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  mapTopics(callback, context) {\n    return this.#mapObjects('topic', callback, context);\n  }\n\n  /**\n   * Copy data from serialized object to topic.\n   * @memberOf DB\n   * @param {Topic} topic - target to deserialize to.\n   * @param {Object} src - serialized data to copy from.\n   */\n  deserializeTopic(topic, src) {\n    DB.#deserializeTopic(topic, src);\n  }\n\n  // Users.\n  /**\n   * Add or update user object in the persistent cache.\n   * @memberOf DB\n   * @param {string} uid - ID of the user to save or update.\n   * @param {Object} pub - user's <code>public</code> information.\n   * @returns {Promise} promise resolved/rejected on operation completion.\n   */\n  updUser(uid, pub) {\n    if (arguments.length < 2 || pub === undefined) {\n      // No point inupdating user with invalid data.\n      return;\n    }\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['user'], 'readwrite');\n      trx.oncomplete = event => {\n        resolve(event.target.result);\n      };\n      trx.onerror = event => {\n        this.#logger('PCache', 'updUser', event.target.error);\n        reject(event.target.error);\n      };\n      trx.objectStore('user').put({\n        uid: uid,\n        public: pub\n      });\n      trx.commit();\n    });\n  }\n\n  /**\n   * Remove user from persistent cache.\n   * @memberOf DB\n   * @param {string} uid - ID of the user to remove from the cache.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  remUser(uid) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['user'], 'readwrite');\n      trx.oncomplete = event => {\n        resolve(event.target.result);\n      };\n      trx.onerror = event => {\n        this.#logger('PCache', 'remUser', event.target.error);\n        reject(event.target.error);\n      };\n      trx.objectStore('user').delete(IDBKeyRange.only(uid));\n      trx.commit();\n    });\n  }\n\n  /**\n   * Execute a callback for each stored user.\n   * @memberOf DB\n   * @param {function} callback - function to call for each topic.\n   * @param {Object} context - the value or <code>this</code> inside the callback.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  mapUsers(callback, context) {\n    return this.#mapObjects('user', callback, context);\n  }\n\n  /**\n   * Read a single user from persistent cache.\n   * @memberOf DB\n   * @param {string} uid - ID of the user to fetch from cache.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  getUser(uid) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['user']);\n      trx.oncomplete = event => {\n        const user = event.target.result;\n        resolve({\n          user: user.uid,\n          public: user.public\n        });\n      };\n      trx.onerror = event => {\n        this.#logger('PCache', 'getUser', event.target.error);\n        reject(event.target.error);\n      };\n      trx.objectStore('user').get(uid);\n    });\n  }\n\n  // Subscriptions.\n  /**\n   * Add or update subscription in persistent cache.\n   * @memberOf DB\n   * @param {string} topicName - name of the topic which owns the message.\n   * @param {string} uid - ID of the subscribed user.\n   * @param {Object} sub - subscription to save.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  updSubscription(topicName, uid, sub) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['subscription'], 'readwrite');\n      trx.oncomplete = event => {\n        resolve(event.target.result);\n      };\n      trx.onerror = event => {\n        this.#logger('PCache', 'updSubscription', event.target.error);\n        reject(event.target.error);\n      };\n      trx.objectStore('subscription').get([topicName, uid]).onsuccess = (event) => {\n        trx.objectStore('subscription').put(DB.#serializeSubscription(event.target.result, topicName, uid, sub));\n        trx.commit();\n      };\n    });\n  }\n\n  /**\n   * Execute a callback for each cached subscription in a given topic.\n   * @memberOf DB\n   * @param {string} topicName - name of the topic which owns the subscriptions.\n   * @param {function} callback - function to call for each subscription.\n   * @param {Object} context - the value or <code>this</code> inside the callback.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  mapSubscriptions(topicName, callback, context) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve([]) :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['subscription']);\n      trx.onerror = (event) => {\n        this.#logger('PCache', 'mapSubscriptions', event.target.error);\n        reject(event.target.error);\n      };\n      trx.objectStore('subscription').getAll(IDBKeyRange.bound([topicName, '-'], [topicName, '~'])).onsuccess = (event) => {\n        if (callback) {\n          event.target.result.forEach((topic) => {\n            callback.call(context, topic);\n          });\n        }\n        resolve(event.target.result);\n      };\n    });\n  }\n\n  // Messages.\n\n  /**\n   * Save message to persistent cache.\n   * @memberOf DB\n   * @param {string} topicName - name of the topic which owns the message.\n   * @param {Object} msg - message to save.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  addMessage(msg) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['message'], 'readwrite');\n      trx.onsuccess = event => {\n        resolve(event.target.result);\n      };\n      trx.onerror = event => {\n        this.#logger('PCache', 'addMessage', event.target.error);\n        reject(event.target.error);\n      };\n      trx.objectStore('message').add(DB.#serializeMessage(null, msg));\n      trx.commit();\n    });\n  }\n\n  /**\n   * Update delivery status of a message stored in persistent cache.\n   * @memberOf DB\n   * @param {string} topicName - name of the topic which owns the message.\n   * @param {number} seq - ID of the message to update\n   * @param {number} status - new delivery status of the message.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  updMessageStatus(topicName, seq, status) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      const trx = this.db.transaction(['message'], 'readwrite');\n      trx.onsuccess = event => {\n        resolve(event.target.result);\n      };\n      trx.onerror = event => {\n        this.#logger('PCache', 'updMessageStatus', event.target.error);\n        reject(event.target.error);\n      };\n      const req = trx.objectStore('message').get(IDBKeyRange.only([topicName, seq]));\n      req.onsuccess = event => {\n        const src = req.result || event.target.result;\n        if (!src || src._status == status) {\n          trx.commit();\n          return;\n        }\n        trx.objectStore('message').put(DB.#serializeMessage(src, {\n          topic: topicName,\n          seq: seq,\n          _status: status\n        }));\n        trx.commit();\n      };\n    });\n  }\n\n  /**\n   * Remove one or more messages from persistent cache.\n   * @memberOf DB\n   * @param {string} topicName - name of the topic which owns the message.\n   * @param {number} from - id of the message to remove or lower boundary when removing range (inclusive).\n   * @param {number=} to - upper boundary (exclusive) when removing a range of messages.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  remMessages(topicName, from, to) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve() :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      if (!from && !to) {\n        from = 0;\n        to = Number.MAX_SAFE_INTEGER;\n      }\n      const range = to > 0 ? IDBKeyRange.bound([topicName, from], [topicName, to], false, true) :\n        IDBKeyRange.only([topicName, from]);\n      const trx = this.db.transaction(['message'], 'readwrite');\n      trx.onsuccess = (event) => {\n        resolve(event.target.result);\n      };\n      trx.onerror = (event) => {\n        this.#logger('PCache', 'remMessages', event.target.error);\n        reject(event.target.error);\n      };\n      trx.objectStore('message').delete(range);\n      trx.commit();\n    });\n  }\n\n  /**\n   * Retrieve messages from persistent store.\n   * @memberOf DB\n   * @param {string} topicName - name of the topic to retrieve messages from.\n   * @param {function} callback to call for each retrieved message.\n   * @param {Object} query - parameters of the message range to retrieve.\n   * @param {number=} query.since - the least message ID to retrieve (inclusive).\n   * @param {number=} query.before - the greatest message ID to retrieve (exclusive).\n   * @param {number=} query.limit - the maximum number of messages to retrieve.\n   * @return {Promise} promise resolved/rejected on operation completion.\n   */\n  readMessages(topicName, query, callback, context) {\n    if (!this.isReady()) {\n      return this.disabled ?\n        Promise.resolve([]) :\n        Promise.reject(new Error(\"not initialized\"));\n    }\n    return new Promise((resolve, reject) => {\n      query = query || {};\n      const since = query.since > 0 ? query.since : 0;\n      const before = query.before > 0 ? query.before : Number.MAX_SAFE_INTEGER;\n      const limit = query.limit | 0;\n\n      const result = [];\n      const range = IDBKeyRange.bound([topicName, since], [topicName, before], false, true);\n      const trx = this.db.transaction(['message']);\n      trx.onerror = (event) => {\n        this.#logger('PCache', 'readMessages', event.target.error);\n        reject(event.target.error);\n      };\n      // Iterate in descending order.\n      trx.objectStore('message').openCursor(range, 'prev').onsuccess = (event) => {\n        const cursor = event.target.result;\n        if (cursor) {\n          if (callback) {\n            callback.call(context, cursor.value);\n          }\n          result.push(cursor.value);\n          if (limit <= 0 || result.length < limit) {\n            cursor.continue();\n          } else {\n            resolve(result);\n          }\n        } else {\n          resolve(result);\n        }\n      };\n    });\n  }\n\n  // Private methods.\n\n  // Serializable topic fields.\n  static #topic_fields = ['created', 'updated', 'deleted', 'read', 'recv', 'seq', 'clear', 'defacs',\n    'creds', 'public', 'trusted', 'private', 'touched', '_deleted'\n  ];\n\n  // Copy data from src to Topic object.\n  static #deserializeTopic(topic, src) {\n    DB.#topic_fields.forEach((f) => {\n      if (src.hasOwnProperty(f)) {\n        topic[f] = src[f];\n      }\n    });\n    if (Array.isArray(src.tags)) {\n      topic._tags = src.tags;\n    }\n    if (src.acs) {\n      topic.setAccessMode(src.acs);\n    }\n    topic.seq |= 0;\n    topic.read |= 0;\n    topic.unread = Math.max(0, topic.seq - topic.read);\n  }\n\n  // Copy values from 'src' to 'dst'. Allocate dst if it's null or undefined.\n  static #serializeTopic(dst, src) {\n    const res = dst || {\n      name: src.name\n    };\n    DB.#topic_fields.forEach((f) => {\n      if (src.hasOwnProperty(f)) {\n        res[f] = src[f];\n      }\n    });\n    if (Array.isArray(src._tags)) {\n      res.tags = src._tags;\n    }\n    if (src.acs) {\n      res.acs = src.getAccessMode().jsonHelper();\n    }\n    return res;\n  }\n\n  static #serializeSubscription(dst, topicName, uid, sub) {\n    const fields = ['updated', 'mode', 'read', 'recv', 'clear', 'lastSeen', 'userAgent'];\n    const res = dst || {\n      topic: topicName,\n      uid: uid\n    };\n\n    fields.forEach((f) => {\n      if (sub.hasOwnProperty(f)) {\n        res[f] = sub[f];\n      }\n    });\n\n    return res;\n  }\n\n  static #serializeMessage(dst, msg) {\n    // Serializable fields.\n    const fields = ['topic', 'seq', 'ts', '_status', 'from', 'head', 'content'];\n    const res = dst || {};\n    fields.forEach((f) => {\n      if (msg.hasOwnProperty(f)) {\n        res[f] = msg[f];\n      }\n    });\n    return res;\n  }\n\n  /**\n   * To use DB in a non browser context, supply indexedDB provider.\n   * @static\n   * @memberof DB\n   * @param idbProvider indexedDB provider, e.g. for node <code>require('fake-indexeddb')</code>.\n   */\n  static setDatabaseProvider(idbProvider) {\n    IDBProvider = idbProvider;\n  }\n}\n","/**\n * @copyright 2015-2022 Tinode LLC.\n * @summary Minimally rich text representation and formatting for Tinode.\n * @license Apache 2.0\n *\n * @file Basic parser and formatter for very simple text markup. Mostly targeted at\n * mobile use cases similar to Telegram, WhatsApp, and FB Messenger.\n *\n * <p>Supports conversion of user keyboard input to formatted text:</p>\n * <ul>\n *   <li>*abc* &rarr; <b>abc</b></li>\n *   <li>_abc_ &rarr; <i>abc</i></li>\n *   <li>~abc~ &rarr; <del>abc</del></li>\n *   <li>`abc` &rarr; <tt>abc</tt></li>\n * </ul>\n * Also supports forms and buttons.\n *\n * Nested formatting is supported, e.g. *abc _def_* -> <b>abc <i>def</i></b>\n * URLs, @mentions, and #hashtags are extracted and converted into links.\n * Forms and buttons can be added procedurally.\n * JSON data representation is inspired by Draft.js raw formatting.\n *\n *\n * @example\n * Text:\n * <pre>\n *     this is *bold*, `code` and _italic_, ~strike~\n *     combined *bold and _italic_*\n *     an url: https://www.example.com/abc#fragment and another _www.tinode.co_\n *     this is a @mention and a #hashtag in a string\n *     second #hashtag\n * </pre>\n *\n *  Sample JSON representation of the text above:\n *  {\n *     \"txt\": \"this is bold, code and italic, strike combined bold and italic an url: https://www.example.com/abc#fragment \" +\n *             \"and another www.tinode.co this is a @mention and a #hashtag in a string second #hashtag\",\n *     \"fmt\": [\n *         { \"at\":8, \"len\":4,\"tp\":\"ST\" },{ \"at\":14, \"len\":4, \"tp\":\"CO\" },{ \"at\":23, \"len\":6, \"tp\":\"EM\"},\n *         { \"at\":31, \"len\":6, \"tp\":\"DL\" },{ \"tp\":\"BR\", \"len\":1, \"at\":37 },{ \"at\":56, \"len\":6, \"tp\":\"EM\" },\n *         { \"at\":47, \"len\":15, \"tp\":\"ST\" },{ \"tp\":\"BR\", \"len\":1, \"at\":62 },{ \"at\":120, \"len\":13, \"tp\":\"EM\" },\n *         { \"at\":71, \"len\":36, \"key\":0 },{ \"at\":120, \"len\":13, \"key\":1 },{ \"tp\":\"BR\", \"len\":1, \"at\":133 },\n *         { \"at\":144, \"len\":8, \"key\":2 },{ \"at\":159, \"len\":8, \"key\":3 },{ \"tp\":\"BR\", \"len\":1, \"at\":179 },\n *         { \"at\":187, \"len\":8, \"key\":3 },{ \"tp\":\"BR\", \"len\":1, \"at\":195 }\n *     ],\n *     \"ent\": [\n *         { \"tp\":\"LN\", \"data\":{ \"url\":\"https://www.example.com/abc#fragment\" } },\n *         { \"tp\":\"LN\", \"data\":{ \"url\":\"http://www.tinode.co\" } },\n *         { \"tp\":\"MN\", \"data\":{ \"val\":\"mention\" } },\n *         { \"tp\":\"HT\", \"data\":{ \"val\":\"hashtag\" } }\n *     ]\n *  }\n */\n\n'use strict';\n\n// NOTE TO DEVELOPERS:\n// Localizable strings should be double quoted \"строка на другом языке\",\n// non-localizable strings should be single quoted 'non-localized'.\n\nconst MAX_FORM_ELEMENTS = 8;\nconst MAX_PREVIEW_ATTACHMENTS = 3;\nconst MAX_PREVIEW_DATA_SIZE = 64;\nconst JSON_MIME_TYPE = 'application/json';\nconst DRAFTY_MIME_TYPE = 'text/x-drafty';\nconst ALLOWED_ENT_FIELDS = ['act', 'height', 'duration', 'incoming', 'mime', 'name', 'premime', 'preref', 'preview',\n  'ref', 'size', 'state', 'url', 'val', 'width'\n];\n\n// Regular expressions for parsing inline formats. Javascript does not support lookbehind,\n// so it's a bit messy.\nconst INLINE_STYLES = [\n  // Strong = bold, *bold text*\n  {\n    name: 'ST',\n    start: /(?:^|[\\W_])(\\*)[^\\s*]/,\n    end: /[^\\s*](\\*)(?=$|[\\W_])/\n  },\n  // Emphesized = italic, _italic text_\n  {\n    name: 'EM',\n    start: /(?:^|\\W)(_)[^\\s_]/,\n    end: /[^\\s_](_)(?=$|\\W)/\n  },\n  // Deleted, ~strike this though~\n  {\n    name: 'DL',\n    start: /(?:^|[\\W_])(~)[^\\s~]/,\n    end: /[^\\s~](~)(?=$|[\\W_])/\n  },\n  // Code block `this is monospace`\n  {\n    name: 'CO',\n    start: /(?:^|\\W)(`)[^`]/,\n    end: /[^`](`)(?=$|\\W)/\n  }\n];\n\n// Relative weights of formatting spans. Greater index in array means greater weight.\nconst FMT_WEIGHT = ['QQ'];\n\n// RegExps for entity extraction (RF = reference)\nconst ENTITY_TYPES = [\n  // URLs\n  {\n    name: 'LN',\n    dataName: 'url',\n    pack: function(val) {\n      // Check if the protocol is specified, if not use http\n      if (!/^[a-z]+:\\/\\//i.test(val)) {\n        val = 'http://' + val;\n      }\n      return {\n        url: val\n      };\n    },\n    re: /(?:(?:https?|ftp):\\/\\/|www\\.|ftp\\.)[-A-Z0-9+&@#\\/%=~_|$?!:,.]*[A-Z0-9+&@#\\/%=~_|$]/ig\n  },\n  // Mentions @user (must be 2 or more characters)\n  {\n    name: 'MN',\n    dataName: 'val',\n    pack: function(val) {\n      return {\n        val: val.slice(1)\n      };\n    },\n    re: /\\B@([\\p{L}\\p{N}][._\\p{L}\\p{N}]*[\\p{L}\\p{N}])/ug\n  },\n  // Hashtags #hashtag, like metion 2 or more characters.\n  {\n    name: 'HT',\n    dataName: 'val',\n    pack: function(val) {\n      return {\n        val: val.slice(1)\n      };\n    },\n    re: /\\B#([\\p{L}\\p{N}][._\\p{L}\\p{N}]*[\\p{L}\\p{N}])/ug\n  }\n];\n\n// HTML tag name suggestions\nconst FORMAT_TAGS = {\n  AU: {\n    html_tag: 'audio',\n    md_tag: undefined,\n    isVoid: false\n  },\n  BN: {\n    html_tag: 'button',\n    md_tag: undefined,\n    isVoid: false\n  },\n  BR: {\n    html_tag: 'br',\n    md_tag: '\\n',\n    isVoid: true\n  },\n  CO: {\n    html_tag: 'tt',\n    md_tag: '`',\n    isVoid: false\n  },\n  DL: {\n    html_tag: 'del',\n    md_tag: '~',\n    isVoid: false\n  },\n  EM: {\n    html_tag: 'i',\n    md_tag: '_',\n    isVoid: false\n  },\n  EX: {\n    html_tag: '',\n    md_tag: undefined,\n    isVoid: true\n  },\n  FM: {\n    html_tag: 'div',\n    md_tag: undefined,\n    isVoid: false\n  },\n  HD: {\n    html_tag: '',\n    md_tag: undefined,\n    isVoid: false\n  },\n  HL: {\n    html_tag: 'span',\n    md_tag: undefined,\n    isVoid: false\n  },\n  HT: {\n    html_tag: 'a',\n    md_tag: undefined,\n    isVoid: false\n  },\n  IM: {\n    html_tag: 'img',\n    md_tag: undefined,\n    isVoid: false\n  },\n  LN: {\n    html_tag: 'a',\n    md_tag: undefined,\n    isVoid: false\n  },\n  MN: {\n    html_tag: 'a',\n    md_tag: undefined,\n    isVoid: false\n  },\n  RW: {\n    html_tag: 'div',\n    md_tag: undefined,\n    isVoid: false,\n  },\n  QQ: {\n    html_tag: 'div',\n    md_tag: undefined,\n    isVoid: false\n  },\n  ST: {\n    html_tag: 'b',\n    md_tag: '*',\n    isVoid: false\n  },\n  VC: {\n    html_tag: 'div',\n    md_tag: undefined,\n    isVoid: false\n  },\n  VD: {\n    html_tag: 'video',\n    md_tag: undefined,\n    isVoid: false\n  }\n};\n\n// Convert base64-encoded string into Blob.\nfunction base64toObjectUrl(b64, contentType, logger) {\n  if (!b64) {\n    return null;\n  }\n\n  try {\n    const bin = atob(b64);\n    const length = bin.length;\n    const buf = new ArrayBuffer(length);\n    const arr = new Uint8Array(buf);\n    for (let i = 0; i < length; i++) {\n      arr[i] = bin.charCodeAt(i);\n    }\n\n    return URL.createObjectURL(new Blob([buf], {\n      type: contentType\n    }));\n  } catch (err) {\n    if (logger) {\n      logger(\"Drafty: failed to convert object.\", err.message);\n    }\n  }\n\n  return null;\n}\n\nfunction base64toDataUrl(b64, contentType) {\n  if (!b64) {\n    return null;\n  }\n  contentType = contentType || 'image/jpeg';\n  return 'data:' + contentType + ';base64,' + b64;\n}\n\n// Helpers for converting Drafty to HTML.\nconst DECORATORS = {\n  // Visial styles\n  ST: {\n    open: _ => '<b>',\n    close: _ => '</b>'\n  },\n  EM: {\n    open: _ => '<i>',\n    close: _ => '</i>'\n  },\n  DL: {\n    open: _ => '<del>',\n    close: _ => '</del>'\n  },\n  CO: {\n    open: _ => '<tt>',\n    close: _ => '</tt>'\n  },\n  // Line break\n  BR: {\n    open: _ => '<br/>',\n    close: _ => ''\n  },\n  // Hidden element\n  HD: {\n    open: _ => '',\n    close: _ => ''\n  },\n  // Highlighted element.\n  HL: {\n    open: _ => '<span style=\"color:teal\">',\n    close: _ => '</span>'\n  },\n  // Link (URL)\n  LN: {\n    open: (data) => {\n      return '<a href=\"' + data.url + '\">';\n    },\n    close: _ => '</a>',\n    props: (data) => {\n      return data ? {\n        href: data.url,\n        target: '_blank'\n      } : null;\n    },\n  },\n  // Mention\n  MN: {\n    open: (data) => {\n      return '<a href=\"#' + data.val + '\">';\n    },\n    close: _ => '</a>',\n    props: (data) => {\n      return data ? {\n        id: data.val\n      } : null;\n    },\n  },\n  // Hashtag\n  HT: {\n    open: (data) => {\n      return '<a href=\"#' + data.val + '\">';\n    },\n    close: _ => '</a>',\n    props: (data) => {\n      return data ? {\n        id: data.val\n      } : null;\n    },\n  },\n  // Button\n  BN: {\n    open: _ => '<button>',\n    close: _ => '</button>',\n    props: (data) => {\n      return data ? {\n        'data-act': data.act,\n        'data-val': data.val,\n        'data-name': data.name,\n        'data-ref': data.ref\n      } : null;\n    },\n  },\n  // Audio recording\n  AU: {\n    open: (data) => {\n      const url = data.ref || base64toObjectUrl(data.val, data.mime, Drafty.logger);\n      return '<audio controls src=\"' + url + '\">';\n    },\n    close: _ => '</audio>',\n    props: (data) => {\n      if (!data) return null;\n      return {\n        // Embedded data or external link.\n        src: data.ref || base64toObjectUrl(data.val, data.mime, Drafty.logger),\n        'data-preload': data.ref ? 'metadata' : 'auto',\n        'data-duration': data.duration,\n        'data-name': data.name,\n        'data-size': data.val ? ((data.val.length * 0.75) | 0) : (data.size | 0),\n        'data-mime': data.mime,\n      };\n    }\n  },\n  // Image\n  IM: {\n    open: data => {\n      // Don't use data.ref for preview: it's a security risk.\n      const tmpPreviewUrl = base64toDataUrl(data._tempPreview, data.mime);\n      const previewUrl = base64toObjectUrl(data.val, data.mime, Drafty.logger);\n      const downloadUrl = data.ref || previewUrl;\n      return (data.name ? '<a href=\"' + downloadUrl + '\" download=\"' + data.name + '\">' : '') +\n        '<img src=\"' + (tmpPreviewUrl || previewUrl) + '\"' +\n        (data.width ? ' width=\"' + data.width + '\"' : '') +\n        (data.height ? ' height=\"' + data.height + '\"' : '') + ' border=\"0\" />';\n    },\n    close: data => {\n      return (data.name ? '</a>' : '');\n    },\n    props: data => {\n      if (!data) return null;\n      return {\n        // Temporary preview, or permanent preview, or external link.\n        src: base64toDataUrl(data._tempPreview, data.mime) ||\n          data.ref || base64toObjectUrl(data.val, data.mime, Drafty.logger),\n        title: data.name,\n        alt: data.name,\n        'data-width': data.width,\n        'data-height': data.height,\n        'data-name': data.name,\n        'data-size': data.ref ? (data.size | 0) : (data.val ? ((data.val.length * 0.75) | 0) : (data.size | 0)),\n        'data-mime': data.mime,\n      };\n    },\n  },\n  // Form - structured layout of elements.\n  FM: {\n    open: _ => '<div>',\n    close: _ => '</div>'\n  },\n  // Row: logic grouping of elements\n  RW: {\n    open: _ => '<div>',\n    close: _ => '</div>'\n  },\n  // Quoted block.\n  QQ: {\n    open: _ => '<div>',\n    close: _ => '</div>',\n    props: (data) => {\n      return data ? {} : null;\n    },\n  },\n  // Video call\n  VC: {\n    open: _ => '<div>',\n    close: _ => '</div>',\n    props: data => {\n      if (!data) return {};\n      return {\n        'data-duration': data.duration,\n        'data-state': data.state,\n      };\n    }\n  },\n  // Video.\n  VD: {\n    open: data => {\n      const tmpPreviewUrl = base64toDataUrl(data._tempPreview, data.mime);\n      const previewUrl = data.ref || base64toObjectUrl(data.preview, data.premime || 'image/jpeg', Drafty.logger);\n      return '<img src=\"' + (tmpPreviewUrl || previewUrl) + '\"' +\n        (data.width ? ' width=\"' + data.width + '\"' : '') +\n        (data.height ? ' height=\"' + data.height + '\"' : '') + ' border=\"0\" />';\n    },\n    close: _ => '',\n    props: data => {\n      if (!data) return null;\n      const poster = data.preref || base64toObjectUrl(data.preview, data.premime || 'image/jpeg', Drafty.logger);\n      return {\n        // Embedded data or external link.\n        src: poster,\n        'data-src': data.ref || base64toObjectUrl(data.val, data.mime, Drafty.logger),\n        'data-width': data.width,\n        'data-height': data.height,\n        'data-preload': data.ref ? 'metadata' : 'auto',\n        'data-preview': poster,\n        'data-duration': data.duration | 0,\n        'data-name': data.name,\n        'data-size': data.ref ? (data.size | 0) : (data.val ? ((data.val.length * 0.75) | 0) : (data.size | 0)),\n        'data-mime': data.mime,\n      };\n    }\n  },\n};\n\n/**\n * The main object which performs all the formatting actions.\n * @class Drafty\n * @constructor\n */\nconst Drafty = function() {\n  this.txt = '';\n  this.fmt = [];\n  this.ent = [];\n}\n\n/**\n * Initialize Drafty document to a plain text string.\n *\n * @param {string} plainText - string to use as Drafty content.\n *\n * @returns new Drafty document or null is plainText is not a string or undefined.\n */\nDrafty.init = function(plainText) {\n  if (typeof plainText == 'undefined') {\n    plainText = '';\n  } else if (typeof plainText != 'string') {\n    return null;\n  }\n\n  return {\n    txt: plainText\n  };\n}\n\n/**\n * Parse plain text into Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {string} content - plain-text content to parse.\n * @return {Drafty} parsed document or null if the source is not plain text.\n */\nDrafty.parse = function(content) {\n  // Make sure we are parsing strings only.\n  if (typeof content != 'string') {\n    return null;\n  }\n\n  // Split text into lines. It makes further processing easier.\n  const lines = content.split(/\\r?\\n/);\n\n  // Holds entities referenced from text\n  const entityMap = [];\n  const entityIndex = {};\n\n  // Processing lines one by one, hold intermediate result in blx.\n  const blx = [];\n  lines.forEach((line) => {\n    let spans = [];\n    let entities;\n\n    // Find formatted spans in the string.\n    // Try to match each style.\n    INLINE_STYLES.forEach((tag) => {\n      // Each style could be matched multiple times.\n      spans = spans.concat(spannify(line, tag.start, tag.end, tag.name));\n    });\n\n    let block;\n    if (spans.length == 0) {\n      block = {\n        txt: line\n      };\n    } else {\n      // Sort spans by style occurence early -> late, then by length: first long then short.\n      spans.sort((a, b) => {\n        const diff = a.at - b.at;\n        return diff != 0 ? diff : b.end - a.end;\n      });\n\n      // Convert an array of possibly overlapping spans into a tree.\n      spans = toSpanTree(spans);\n\n      // Build a tree representation of the entire string, not\n      // just the formatted parts.\n      const chunks = chunkify(line, 0, line.length, spans);\n\n      const drafty = draftify(chunks, 0);\n\n      block = {\n        txt: drafty.txt,\n        fmt: drafty.fmt\n      };\n    }\n\n    // Extract entities from the cleaned up string.\n    entities = extractEntities(block.txt);\n    if (entities.length > 0) {\n      const ranges = [];\n      for (let i in entities) {\n        // {offset: match['index'], unique: match[0], len: match[0].length, data: ent.packer(), type: ent.name}\n        const entity = entities[i];\n        let index = entityIndex[entity.unique];\n        if (!index) {\n          index = entityMap.length;\n          entityIndex[entity.unique] = index;\n          entityMap.push({\n            tp: entity.type,\n            data: entity.data\n          });\n        }\n        ranges.push({\n          at: entity.offset,\n          len: entity.len,\n          key: index\n        });\n      }\n      block.ent = ranges;\n    }\n\n    blx.push(block);\n  });\n\n  const result = {\n    txt: ''\n  };\n\n  // Merge lines and save line breaks as BR inline formatting.\n  if (blx.length > 0) {\n    result.txt = blx[0].txt;\n    result.fmt = (blx[0].fmt || []).concat(blx[0].ent || []);\n\n    for (let i = 1; i < blx.length; i++) {\n      const block = blx[i];\n      const offset = result.txt.length + 1;\n\n      result.fmt.push({\n        tp: 'BR',\n        len: 1,\n        at: offset - 1\n      });\n\n      result.txt += ' ' + block.txt;\n      if (block.fmt) {\n        result.fmt = result.fmt.concat(block.fmt.map((s) => {\n          s.at += offset;\n          return s;\n        }));\n      }\n      if (block.ent) {\n        result.fmt = result.fmt.concat(block.ent.map((s) => {\n          s.at += offset;\n          return s;\n        }));\n      }\n    }\n\n    if (result.fmt.length == 0) {\n      delete result.fmt;\n    }\n\n    if (entityMap.length > 0) {\n      result.ent = entityMap;\n    }\n  }\n  return result;\n}\n\n/**\n * Append one Drafty document to another.\n *\n * @param {Drafty} first - Drafty document to append to.\n * @param {Drafty|string} second - Drafty document or string being appended.\n *\n * @return {Drafty} first document with the second appended to it.\n */\nDrafty.append = function(first, second) {\n  if (!first) {\n    return second;\n  }\n  if (!second) {\n    return first;\n  }\n\n  first.txt = first.txt || '';\n  const len = first.txt.length;\n\n  if (typeof second == 'string') {\n    first.txt += second;\n  } else if (second.txt) {\n    first.txt += second.txt;\n  }\n\n  if (Array.isArray(second.fmt)) {\n    first.fmt = first.fmt || [];\n    if (Array.isArray(second.ent)) {\n      first.ent = first.ent || [];\n    }\n    second.fmt.forEach(src => {\n      const fmt = {\n        at: (src.at | 0) + len,\n        len: src.len | 0\n      };\n      // Special case for the outside of the normal rendering flow styles.\n      if (src.at == -1) {\n        fmt.at = -1;\n        fmt.len = 0;\n      }\n      if (src.tp) {\n        fmt.tp = src.tp;\n      } else {\n        fmt.key = first.ent.length;\n        first.ent.push(second.ent[src.key || 0]);\n      }\n      first.fmt.push(fmt);\n    });\n  }\n\n  return first;\n}\n\n/**\n * Description of an image to attach.\n * @typedef {Object} ImageDesc\n * @memberof Drafty\n *\n * @property {string} mime - mime-type of the image, e.g. \"image/png\".\n * @property {string} refurl - reference to the content. Could be null/undefined.\n * @property {string} bits - base64-encoded image content. Could be null/undefined.\n * @property {string} preview - base64-encoded thumbnail of the image.\n * @property {integer} width - width of the image.\n * @property {integer} height - height of the image.\n * @property {string} filename - file name suggestion for downloading the image.\n * @property {integer} size - size of the image in bytes. Treat is as an untrusted hint.\n * @property {string} _tempPreview - base64-encoded image preview used during upload process; not serializable.\n * @property {Promise} urlPromise - Promise which returns content URL when resolved.\n */\n\n/**\n * Insert inline image into Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to add image to.\n * @param {integer} at - index where the object is inserted. The length of the image is always 1.\n * @param {ImageDesc} imageDesc - object with image paramenets and data.\n *\n * @return {Drafty} updated document.\n */\nDrafty.insertImage = function(content, at, imageDesc) {\n  content = content || {\n    txt: ' '\n  };\n  content.ent = content.ent || [];\n  content.fmt = content.fmt || [];\n\n  content.fmt.push({\n    at: at | 0,\n    len: 1,\n    key: content.ent.length\n  });\n\n  const ex = {\n    tp: 'IM',\n    data: {\n      mime: imageDesc.mime,\n      ref: imageDesc.refurl,\n      val: imageDesc.bits || imageDesc.preview,\n      width: imageDesc.width,\n      height: imageDesc.height,\n      name: imageDesc.filename,\n      size: imageDesc.size | 0,\n    }\n  };\n\n  if (imageDesc.urlPromise) {\n    ex.data._tempPreview = imageDesc._tempPreview;\n    ex.data._processing = true;\n    imageDesc.urlPromise.then(\n      url => {\n        ex.data.ref = url;\n        ex.data._tempPreview = undefined;\n        ex.data._processing = undefined;\n      },\n      _ => {\n        // Catch the error, otherwise it will appear in the console.\n        ex.data._processing = undefined;\n      }\n    );\n  }\n\n  content.ent.push(ex);\n\n  return content;\n}\n\n/**\n * Description of a video to attach.\n * @typedef {Object} VideoDesc\n * @memberof Drafty\n *\n * @property {string} mime - mime-type of the video, e.g. \"video/mpeg\".\n * @property {string} refurl - reference to the content. Could be null/undefined.\n * @property {string} bits - in-band base64-encoded image data. Could be null/undefined.\n * @property {string} preview - base64-encoded screencapture from the video. Could be null/undefined.\n * @property {string} preref - reference to screencapture from the video. Could be null/undefined.\n * @property {integer} width - width of the video.\n * @property {integer} height - height of the video.\n * @property {integer} duration - duration of the video.\n * @property {string} filename - file name suggestion for downloading the video.\n * @property {integer} size - size of the video in bytes. Treat is as an untrusted hint.\n * @property {string} _tempPreview - base64-encoded screencapture used during upload process; not serializable.\n * @property {Promise} urlPromise - array of two promises, which return URLs of video and preview uploads correspondingly\n *        (either could be null).\n */\n\n/**\n * Insert inline image into Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to add video to.\n * @param {integer} at - index where the object is inserted. The length of the video is always 1.\n * @param {VideoDesc} videoDesc - object with video paramenets and data.\n *\n * @return {Drafty} updated document.\n */\nDrafty.insertVideo = function(content, at, videoDesc) {\n  content = content || {\n    txt: ' '\n  };\n  content.ent = content.ent || [];\n  content.fmt = content.fmt || [];\n\n  content.fmt.push({\n    at: at | 0,\n    len: 1,\n    key: content.ent.length\n  });\n\n  const ex = {\n    tp: 'VD',\n    data: {\n      mime: videoDesc.mime,\n      ref: videoDesc.refurl,\n      val: videoDesc.bits,\n      preref: videoDesc.preref,\n      preview: videoDesc.preview,\n      width: videoDesc.width,\n      height: videoDesc.height,\n      duration: videoDesc.duration | 0,\n      name: videoDesc.filename,\n      size: videoDesc.size | 0,\n    }\n  };\n\n  if (videoDesc.urlPromise) {\n    ex.data._tempPreview = videoDesc._tempPreview;\n    ex.data._processing = true;\n    videoDesc.urlPromise.then(\n      urls => {\n        ex.data.ref = urls[0];\n        ex.data.preref = urls[1];\n        ex.data._tempPreview = undefined;\n        ex.data._processing = undefined;\n      },\n      _ => {\n        // Catch the error, otherwise it will appear in the console.\n        ex.data._processing = undefined;\n      }\n    );\n  }\n\n  content.ent.push(ex);\n\n  return content;\n}\n\n/**\n * Description of an audio recording to attach.\n * @typedef {Object} AudioDesc\n * @memberof Drafty\n *\n * @property {string} mime - mime-type of the audio, e.g. \"audio/ogg\".\n * @property {string} refurl - reference to the content. Could be null/undefined.\n * @property {string} bits - base64-encoded audio content. Could be null/undefined.\n * @property {integer} duration - duration of the record in milliseconds.\n * @property {string} preview - base64 encoded short array of amplitude values 0..100.\n * @property {string} filename - file name suggestion for downloading the audio.\n * @property {integer} size - size of the recording in bytes. Treat is as an untrusted hint.\n * @property {Promise} urlPromise - Promise which returns content URL when resolved.\n */\n\n/**\n * Insert audio recording into Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to add audio record to.\n * @param {integer} at - index where the object is inserted. The length of the record is always 1.\n * @param {AudioDesc} audioDesc - object with the audio paramenets and data.\n *\n * @return {Drafty} updated document.\n */\nDrafty.insertAudio = function(content, at, audioDesc) {\n  content = content || {\n    txt: ' '\n  };\n  content.ent = content.ent || [];\n  content.fmt = content.fmt || [];\n\n  content.fmt.push({\n    at: at | 0,\n    len: 1,\n    key: content.ent.length\n  });\n\n  const ex = {\n    tp: 'AU',\n    data: {\n      mime: audioDesc.mime,\n      val: audioDesc.bits,\n      duration: audioDesc.duration | 0,\n      preview: audioDesc.preview,\n      name: audioDesc.filename,\n      size: audioDesc.size | 0,\n      ref: audioDesc.refurl\n    }\n  };\n\n  if (audioDesc.urlPromise) {\n    ex.data._processing = true;\n    audioDesc.urlPromise.then(\n      url => {\n        ex.data.ref = url;\n        ex.data._processing = undefined;\n      },\n      _ => {\n        // Catch the error, otherwise it will appear in the console.\n        ex.data._processing = undefined;\n      }\n    );\n  }\n\n  content.ent.push(ex);\n\n  return content;\n}\n\n/**\n * Create a (self-contained) video call Drafty document.\n * @memberof Drafty\n * @static\n * @param {boolean} audioOnly <code>true</code> if the call is initially audio-only.\n * @returns Video Call drafty document.\n */\nDrafty.videoCall = function(audioOnly) {\n  const content = {\n    txt: ' ',\n    fmt: [{\n      at: 0,\n      len: 1,\n      key: 0\n    }],\n    ent: [{\n      tp: 'VC',\n      data: {\n        aonly: audioOnly\n      },\n    }]\n  };\n  return content;\n}\n\n/**\n * Update video call (VC) entity with the new status and duration.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - VC document to update.\n * @param {object} params - new video call parameters.\n * @param {string} params.state - state of video call.\n * @param {number} params.duration - duration of the video call in milliseconds.\n *\n * @returns the same document with update applied.\n */\nDrafty.updateVideoCall = function(content, params) {\n  // The video element could be just a format or a format + entity.\n  // Must ensure it's the latter first.\n  const fmt = ((content || {}).fmt || [])[0];\n  if (!fmt) {\n    // Unrecognized content.\n    return content;\n  }\n\n  let ent;\n  if (fmt.tp == 'VC') {\n    // Just a format, convert to format + entity.\n    delete fmt.tp;\n    fmt.key = 0;\n    ent = {\n      tp: 'VC'\n    };\n    content.ent = [ent];\n  } else {\n    ent = (content.ent || [])[fmt.key | 0];\n    if (!ent || ent.tp != 'VC') {\n      // Not a VC entity.\n      return content;\n    }\n  }\n  ent.data = ent.data || {};\n  Object.assign(ent.data, params);\n  return content;\n}\n\n/**\n * Create a quote to Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {string} header - Quote header (title, etc.).\n * @param {string} uid - UID of the author to mention.\n * @param {Drafty} body - Body of the quoted message.\n *\n * @returns Reply quote Drafty doc with the quote formatting.\n */\nDrafty.quote = function(header, uid, body) {\n  const quote = Drafty.append(Drafty.appendLineBreak(Drafty.mention(header, uid)), body);\n\n  // Wrap into a quote.\n  quote.fmt.push({\n    at: 0,\n    len: quote.txt.length,\n    tp: 'QQ'\n  });\n\n  return quote;\n}\n\n/**\n * Create a Drafty document with a mention.\n *\n * @param {string} name - mentioned name.\n * @param {string} uid - mentioned user ID.\n *\n * @returns {Drafty} document with the mention.\n */\nDrafty.mention = function(name, uid) {\n  return {\n    txt: name || '',\n    fmt: [{\n      at: 0,\n      len: (name || '').length,\n      key: 0\n    }],\n    ent: [{\n      tp: 'MN',\n      data: {\n        val: uid\n      }\n    }]\n  };\n}\n\n/**\n * Append a link to a Drafty document.\n *\n * @param {Drafty} content - Drafty document to append link to.\n * @param {Object} linkData - Link info in format <code>{txt: 'ankor text', url: 'http://...'}</code>.\n *\n * @returns {Drafty} the same document as <code>content</code>.\n */\nDrafty.appendLink = function(content, linkData) {\n  content = content || {\n    txt: ''\n  };\n\n  content.ent = content.ent || [];\n  content.fmt = content.fmt || [];\n\n  content.fmt.push({\n    at: content.txt.length,\n    len: linkData.txt.length,\n    key: content.ent.length\n  });\n  content.txt += linkData.txt;\n\n  const ex = {\n    tp: 'LN',\n    data: {\n      url: linkData.url\n    }\n  }\n  content.ent.push(ex);\n\n  return content;\n}\n\n/**\n * Append image to Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to add image to.\n * @param {ImageDesc} imageDesc - object with image paramenets.\n *\n * @return {Drafty} updated document.\n */\nDrafty.appendImage = function(content, imageDesc) {\n  content = content || {\n    txt: ''\n  };\n  content.txt += ' ';\n  return Drafty.insertImage(content, content.txt.length - 1, imageDesc);\n}\n\n/**\n * Append audio recodring to Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to add recording to.\n * @param {AudioDesc} audioDesc - object with audio data.\n *\n * @return {Drafty} updated document.\n */\nDrafty.appendAudio = function(content, audioDesc) {\n  content = content || {\n    txt: ''\n  };\n  content.txt += ' ';\n  return Drafty.insertAudio(content, content.txt.length - 1, audioDesc);\n}\n\n/**\n * Description of a file to attach.\n * @typedef {Object} AttachmentDesc\n * @memberof Drafty\n *\n * @property {string} mime - mime-type of the attachment, e.g. \"application/octet-stream\"\n * @property {string} data - base64-encoded in-band content of small attachments. Could be null/undefined.\n * @property {string} filename - file name suggestion for downloading the attachment.\n * @property {integer} size - size of the file in bytes. Treat is as an untrusted hint.\n * @property {string} refurl - reference to the out-of-band content. Could be null/undefined.\n * @property {Promise} urlPromise - Promise which returns content URL when resolved.\n */\n\n/**\n * Attach file to Drafty content. Either as a blob or as a reference.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to attach file to.\n * @param {AttachmentDesc} object - containing attachment description and data.\n *\n * @return {Drafty} updated document.\n */\nDrafty.attachFile = function(content, attachmentDesc) {\n  content = content || {\n    txt: ''\n  };\n\n  content.ent = content.ent || [];\n  content.fmt = content.fmt || [];\n\n  content.fmt.push({\n    at: -1,\n    len: 0,\n    key: content.ent.length\n  });\n\n  const ex = {\n    tp: 'EX',\n    data: {\n      mime: attachmentDesc.mime,\n      val: attachmentDesc.data,\n      name: attachmentDesc.filename,\n      ref: attachmentDesc.refurl,\n      size: attachmentDesc.size | 0\n    }\n  }\n  if (attachmentDesc.urlPromise) {\n    ex.data._processing = true;\n    attachmentDesc.urlPromise.then(\n      url => {\n        ex.data.ref = url;\n        ex.data._processing = undefined;\n      },\n      _ => {\n        /* catch the error, otherwise it will appear in the console. */\n        ex.data._processing = undefined;\n      }\n    );\n  }\n  content.ent.push(ex);\n\n  return content;\n}\n\n/**\n * Wraps drafty document into a simple formatting style.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty|string} content - document or string to wrap into a style.\n * @param {string} style - two-letter style to wrap into.\n * @param {number} at - index where the style starts, default 0.\n * @param {number} len - length of the form content, default all of it.\n *\n * @return {Drafty} updated document.\n */\nDrafty.wrapInto = function(content, style, at, len) {\n  if (typeof content == 'string') {\n    content = {\n      txt: content\n    };\n  }\n  content.fmt = content.fmt || [];\n\n  content.fmt.push({\n    at: at || 0,\n    len: len || content.txt.length,\n    tp: style,\n  });\n\n  return content;\n}\n\n/**\n * Wraps content into an interactive form.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty|string} content - to wrap into a form.\n * @param {number} at - index where the forms starts.\n * @param {number} len - length of the form content.\n *\n * @return {Drafty} updated document.\n */\nDrafty.wrapAsForm = function(content, at, len) {\n  return Drafty.wrapInto(content, 'FM', at, len);\n}\n\n/**\n * Insert clickable button into Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty|string} content - Drafty document to insert button to or a string to be used as button text.\n * @param {number} at - location where the button is inserted.\n * @param {number} len - the length of the text to be used as button title.\n * @param {string} name - the button. Client should return it to the server when the button is clicked.\n * @param {string} actionType - the type of the button, one of 'url' or 'pub'.\n * @param {string} actionValue - the value to return on click:\n * @param {string} refUrl - the URL to go to when the 'url' button is clicked.\n *\n * @return {Drafty} updated document.\n */\nDrafty.insertButton = function(content, at, len, name, actionType, actionValue, refUrl) {\n  if (typeof content == 'string') {\n    content = {\n      txt: content\n    };\n  }\n\n  if (!content || !content.txt || content.txt.length < at + len) {\n    return null;\n  }\n\n  if (len <= 0 || ['url', 'pub'].indexOf(actionType) == -1) {\n    return null;\n  }\n  // Ensure refUrl is a string.\n  if (actionType == 'url' && !refUrl) {\n    return null;\n  }\n  refUrl = '' + refUrl;\n\n  content.ent = content.ent || [];\n  content.fmt = content.fmt || [];\n\n  content.fmt.push({\n    at: at | 0,\n    len: len,\n    key: content.ent.length\n  });\n  content.ent.push({\n    tp: 'BN',\n    data: {\n      act: actionType,\n      val: actionValue,\n      ref: refUrl,\n      name: name\n    }\n  });\n\n  return content;\n}\n\n/**\n * Append clickable button to Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty|string} content - Drafty document to insert button to or a string to be used as button text.\n * @param {string} title - the text to be used as button title.\n * @param {string} name - the button. Client should return it to the server when the button is clicked.\n * @param {string} actionType - the type of the button, one of 'url' or 'pub'.\n * @param {string} actionValue - the value to return on click:\n * @param {string} refUrl - the URL to go to when the 'url' button is clicked.\n *\n * @return {Drafty} updated document.\n */\nDrafty.appendButton = function(content, title, name, actionType, actionValue, refUrl) {\n  content = content || {\n    txt: ''\n  };\n  const at = content.txt.length;\n  content.txt += title;\n  return Drafty.insertButton(content, at, title.length, name, actionType, actionValue, refUrl);\n}\n\n/**\n * Attach a generic JS object. The object is attached as a json string.\n * Intended for representing a form response.\n *\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - Drafty document to attach file to.\n * @param {Object} data - data to convert to json string and attach.\n * @returns {Drafty} the same document as <code>content</code>.\n */\nDrafty.attachJSON = function(content, data) {\n  content = content || {\n    txt: ''\n  };\n  content.ent = content.ent || [];\n  content.fmt = content.fmt || [];\n\n  content.fmt.push({\n    at: -1,\n    len: 0,\n    key: content.ent.length\n  });\n\n  content.ent.push({\n    tp: 'EX',\n    data: {\n      mime: JSON_MIME_TYPE,\n      val: data\n    }\n  });\n\n  return content;\n}\n/**\n * Append line break to a Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - Drafty document to append linebreak to.\n * @returns {Drafty} the same document as <code>content</code>.\n */\nDrafty.appendLineBreak = function(content) {\n  content = content || {\n    txt: ''\n  };\n  content.fmt = content.fmt || [];\n  content.fmt.push({\n    at: content.txt.length,\n    len: 1,\n    tp: 'BR'\n  });\n  content.txt += ' ';\n\n  return content;\n}\n/**\n * Given Drafty document, convert it to HTML.\n * No attempt is made to strip pre-existing html markup.\n * This is potentially unsafe because <code>content.txt</code> may contain malicious HTML\n * markup.\n * @memberof Tinode.Drafty\n * @static\n *\n * @param {Drafty} doc - document to convert.\n *\n * @returns {string} HTML-representation of content.\n */\nDrafty.UNSAFE_toHTML = function(doc) {\n  const tree = draftyToTree(doc);\n  const htmlFormatter = function(type, data, values) {\n    const tag = DECORATORS[type];\n    let result = values ? values.join('') : '';\n    if (tag) {\n      result = tag.open(data) + result + tag.close(data);\n    }\n    return result;\n  };\n  return treeBottomUp(tree, htmlFormatter, 0);\n}\n\n/**\n * Callback for applying custom formatting to a Drafty document.\n * Called once for each style span.\n * @memberof Drafty\n * @static\n *\n * @callback Formatter\n * @param {string} style - style code such as \"ST\" or \"IM\".\n * @param {Object} data - entity's data.\n * @param {Object} values - possibly styled subspans contained in this style span.\n * @param {number} index - index of the element guaranteed to be unique.\n */\n\n/**\n * Convert Drafty document to a representation suitable for display.\n * The <code>context</code> may expose a function <code>getFormatter(style)</code>. If it's available\n * it will call it to obtain a <code>formatter</code> for a subtree of styles under the <code>style</code>.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty|Object} content - Drafty document to transform.\n * @param {Formatter} formatter - callback which formats individual elements.\n * @param {Object} context - context provided to formatter as <code>this</code>.\n *\n * @return {Object} transformed object\n */\nDrafty.format = function(original, formatter, context) {\n  return treeBottomUp(draftyToTree(original), formatter, 0, [], context);\n}\n\n/**\n * Shorten Drafty document making the drafty text no longer than the limit.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty|string} original - Drafty object to shorten.\n * @param {number} limit - length in characrets to shorten to.\n * @param {boolean} light - remove heavy data from entities.\n * @returns new shortened Drafty object leaving the original intact.\n */\nDrafty.shorten = function(original, limit, light) {\n  let tree = draftyToTree(original);\n  tree = shortenTree(tree, limit, '…');\n  if (tree && light) {\n    tree = lightEntity(tree);\n  }\n  return treeToDrafty({}, tree, []);\n}\n\n/**\n * Transform Drafty doc for forwarding: strip leading @mention and any leading line breaks or whitespace.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty|string} original - Drafty object to shorten.\n * @returns converted Drafty object leaving the original intact.\n */\nDrafty.forwardedContent = function(original) {\n  let tree = draftyToTree(original);\n  const rmMention = function(node) {\n    if (node.type == 'MN') {\n      if (!node.parent || !node.parent.type) {\n        return null;\n      }\n    }\n    return node;\n  }\n  // Strip leading mention.\n  tree = treeTopDown(tree, rmMention);\n  // Remove leading whitespace.\n  tree = lTrim(tree);\n  // Convert back to Drafty.\n  return treeToDrafty({}, tree, []);\n}\n\n/**\n * Prepare Drafty doc for wrapping into QQ as a reply:\n *  - Replace forwarding mention with symbol '➦' and remove data (UID).\n *  - Remove quoted text completely.\n *  - Replace line breaks with spaces.\n *  - Strip entities of heavy content.\n *  - Move attachments to the end of the document.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty|string} original - Drafty object to shorten.\n * @param {number} limit - length in characters to shorten to.\n * @returns converted Drafty object leaving the original intact.\n */\nDrafty.replyContent = function(original, limit) {\n  const convMNnQQnBR = function(node) {\n    if (node.type == 'QQ') {\n      return null;\n    } else if (node.type == 'MN') {\n      if ((!node.parent || !node.parent.type) && (node.text || '').startsWith('➦')) {\n        node.text = '➦';\n        delete node.children;\n        delete node.data;\n      }\n    } else if (node.type == 'BR') {\n      node.text = ' ';\n      delete node.type;\n      delete node.children;\n    }\n    return node;\n  }\n\n  let tree = draftyToTree(original);\n  if (!tree) {\n    return original;\n  }\n\n  // Strip leading mention.\n  tree = treeTopDown(tree, convMNnQQnBR);\n  // Move attachments to the end of the doc.\n  tree = attachmentsToEnd(tree, MAX_PREVIEW_ATTACHMENTS);\n  // Shorten the doc.\n  tree = shortenTree(tree, limit, '…');\n  // Strip heavy elements except IM.data['val'] and VD.data['preview'] (have to keep them to generate previews later).\n  const filter = node => {\n    switch (node.type) {\n      case 'IM':\n        return ['val'];\n      case 'VD':\n        return ['preview'];\n    }\n    return null;\n  };\n  tree = lightEntity(tree, filter);\n  // Convert back to Drafty.\n  return treeToDrafty({}, tree, []);\n}\n\n\n/**\n * Generate drafty preview:\n *  - Shorten the document.\n *  - Strip all heavy entity data leaving just inline styles and entity references.\n *  - Replace line breaks with spaces.\n *  - Replace content of QQ with a space.\n *  - Replace forwarding mention with symbol '➦'.\n * move all attachments to the end of the document and make them visible.\n * The <code>context</code> may expose a function <code>getFormatter(style)</code>. If it's available\n * it will call it to obtain a <code>formatter</code> for a subtree of styles under the <code>style</code>.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty|string} original - Drafty object to shorten.\n * @param {number} limit - length in characters to shorten to.\n * @param {boolean} forwarding - this a forwarding message preview.\n * @returns new shortened Drafty object leaving the original intact.\n */\nDrafty.preview = function(original, limit, forwarding) {\n  let tree = draftyToTree(original);\n\n  // Move attachments to the end.\n  tree = attachmentsToEnd(tree, MAX_PREVIEW_ATTACHMENTS);\n\n  // Convert leading mention to '➦' and replace QQ and BR with a space ' '.\n  const convMNnQQnBR = function(node) {\n    if (node.type == 'MN') {\n      if ((!node.parent || !node.parent.type) && (node.text || '').startsWith('➦')) {\n        node.text = '➦';\n        delete node.children;\n      }\n    } else if (node.type == 'QQ') {\n      node.text = ' ';\n      delete node.children;\n    } else if (node.type == 'BR') {\n      node.text = ' ';\n      delete node.children;\n      delete node.type;\n    }\n    return node;\n  }\n  tree = treeTopDown(tree, convMNnQQnBR);\n\n  tree = shortenTree(tree, limit, '…');\n  if (forwarding) {\n    // Keep some IM and VD data for preview.\n    const filter = {\n      IM: ['val'],\n      VD: ['preview']\n    };\n    tree = lightEntity(tree, node => {\n      return filter[node.type];\n    });\n  } else {\n    tree = lightEntity(tree);\n  }\n\n  // Convert back to Drafty.\n  return treeToDrafty({}, tree, []);\n}\n\n/**\n * Given Drafty document, convert it to plain text.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to convert to plain text.\n * @returns {string} plain-text representation of the drafty document.\n */\nDrafty.toPlainText = function(content) {\n  return typeof content == 'string' ? content : content.txt;\n}\n\n/**\n * Check if the document has no markup and no entities.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - content to check for presence of markup.\n * @returns <code>true</code> is content is plain text, <code>false</code> otherwise.\n */\nDrafty.isPlainText = function(content) {\n  return typeof content == 'string' || !(content.fmt || content.ent);\n}\n\n/**\n * Convert document to plain text with markdown. All elements which cannot\n * be represented in markdown are stripped.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to convert to plain text with markdown.\n */\nDrafty.toMarkdown = function(content) {\n  let tree = draftyToTree(content);\n  const mdFormatter = function(type, _, values) {\n    const def = FORMAT_TAGS[type];\n    let result = (values ? values.join('') : '');\n    if (def) {\n      if (def.isVoid) {\n        result = def.md_tag || '';\n      } else if (def.md_tag) {\n        result = def.md_tag + result + def.md_tag;\n      }\n    }\n    return result;\n  };\n  return treeBottomUp(tree, mdFormatter, 0);\n}\n\n/**\n * Checks if the object represets is a valid Drafty document.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - content to check for validity.\n * @returns <code>true</code> is content is valid, <code>false</code> otherwise.\n */\nDrafty.isValid = function(content) {\n  if (!content) {\n    return false;\n  }\n\n  const {\n    txt,\n    fmt,\n    ent\n  } = content;\n\n  if (!txt && txt !== '' && !fmt && !ent) {\n    return false;\n  }\n\n  const txt_type = typeof txt;\n  if (txt_type != 'string' && txt_type != 'undefined' && txt !== null) {\n    return false;\n  }\n\n  if (typeof fmt != 'undefined' && !Array.isArray(fmt) && fmt !== null) {\n    return false;\n  }\n\n  if (typeof ent != 'undefined' && !Array.isArray(ent) && ent !== null) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Check if the drafty document has attachments: style EX and outside of normal rendering flow,\n * i.e. <code>at = -1</code>.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to check for attachments.\n * @returns <code>true</code> if there are attachments.\n */\nDrafty.hasAttachments = function(content) {\n  if (!Array.isArray(content.fmt)) {\n    return false;\n  }\n  for (let i in content.fmt) {\n    const fmt = content.fmt[i];\n    if (fmt && fmt.at < 0) {\n      const ent = content.ent[fmt.key | 0];\n      return ent && ent.tp == 'EX' && ent.data;\n    }\n  }\n  return false;\n}\n\n/**\n * Callback for enumerating entities in a Drafty document.\n * Called once for each entity.\n * @memberof Drafty\n * @static\n *\n * @callback EntityCallback\n * @param {Object} data entity data.\n * @param {string} entity type.\n * @param {number} index entity's index in `content.ent`.\n *\n * @return 'true-ish' to stop processing, 'false-ish' otherwise.\n */\n\n/**\n * Enumerate attachments: style EX and outside of normal rendering flow, i.e. <code>at = -1</code>.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to process for attachments.\n * @param {EntityCallback} callback - callback to call for each attachment.\n * @param {Object} context - value of \"this\" for callback.\n */\nDrafty.attachments = function(content, callback, context) {\n  if (!Array.isArray(content.fmt)) {\n    return;\n  }\n  let count = 0;\n  for (let i in content.fmt) {\n    let fmt = content.fmt[i];\n    if (fmt && fmt.at < 0) {\n      const ent = content.ent[fmt.key | 0];\n      if (ent && ent.tp == 'EX' && ent.data) {\n        if (callback.call(context, ent.data, count++, 'EX')) {\n          break;\n        }\n      }\n    }\n  };\n}\n\n/**\n * Check if the drafty document has entities.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document to check for entities.\n * @returns <code>true</code> if there are entities.\n */\nDrafty.hasEntities = function(content) {\n  return content.ent && content.ent.length > 0;\n}\n\n/**\n * Enumerate entities. Enumeration stops if callback returns 'true'.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document with entities to enumerate.\n * @param {EntityCallback} callback - callback to call for each entity.\n * @param {Object} context - value of \"this\" for callback.\n *\n */\nDrafty.entities = function(content, callback, context) {\n  if (content.ent && content.ent.length > 0) {\n    for (let i in content.ent) {\n      if (content.ent[i]) {\n        if (callback.call(context, content.ent[i].data, i, content.ent[i].tp)) {\n          break;\n        }\n      }\n    }\n  }\n}\n\n/**\n * Callback for enumerating styles (inline formats) in a Drafty document.\n * Called once for each style.\n * @memberof Drafty\n * @static\n *\n * @callback StyleCallback\n * @param {string} tp - format type.\n * @param {number} at - starting position of the format in text.\n * @param {number} len - extent of the format in characters.\n * @param {number} key - index of the entity if format is a reference.\n * @param {number} index - style's index in `content.fmt`.\n *\n * @return 'true-ish' to stop processing, 'false-ish' otherwise.\n */\n\n/**\n * Enumerate styles (inline formats). Enumeration stops if callback returns 'true'.\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document with styles (formats) to enumerate.\n * @param {StyleCallback} callback - callback to call for each format.\n * @param {Object} context - value of \"this\" for callback.\n */\nDrafty.styles = function(content, callback, context) {\n  if (content.fmt && content.fmt.length > 0) {\n    for (let i in content.fmt) {\n      const fmt = content.fmt[i];\n      if (fmt) {\n        if (callback.call(context, fmt.tp, fmt.at, fmt.len, fmt.key, i)) {\n          break;\n        }\n      }\n    }\n  }\n}\n\n/**\n * Remove unrecognized fields from entity data\n * @memberof Drafty\n * @static\n *\n * @param {Drafty} content - document with entities to enumerate.\n * @returns content.\n */\nDrafty.sanitizeEntities = function(content) {\n  if (content && content.ent && content.ent.length > 0) {\n    for (let i in content.ent) {\n      const ent = content.ent[i];\n      if (ent && ent.data) {\n        const data = copyEntData(ent.data);\n        if (data) {\n          content.ent[i].data = data;\n        } else {\n          delete content.ent[i].data;\n        }\n      }\n    }\n  }\n  return content;\n}\n\n/**\n * Given the entity, get URL which can be used for downloading\n * entity data.\n * @memberof Drafty\n * @static\n *\n * @param {Object} entData - entity.data to get the URl from.\n * @returns {string} URL to download entity data or <code>null</code>.\n */\nDrafty.getDownloadUrl = function(entData) {\n  let url = null;\n  if (entData.mime != JSON_MIME_TYPE && entData.val) {\n    url = base64toObjectUrl(entData.val, entData.mime, Drafty.logger);\n  } else if (typeof entData.ref == 'string') {\n    url = entData.ref;\n  }\n  return url;\n}\n\n/**\n * Check if the entity data is not ready for sending, such as being uploaded to the server.\n * @memberof Drafty\n * @static\n *\n * @param {Object} entity.data to get the URl from.\n * @returns {boolean} true if upload is in progress, false otherwise.\n */\nDrafty.isProcessing = function(entData) {\n  return !!entData._processing;\n}\n\n/**\n * Given the entity, get URL which can be used for previewing\n * the entity.\n * @memberof Drafty\n * @static\n *\n * @param {Object} entity.data to get the URl from.\n *\n * @returns {string} url for previewing or null if no such url is available.\n */\nDrafty.getPreviewUrl = function(entData) {\n  return entData.val ? base64toObjectUrl(entData.val, entData.mime, Drafty.logger) : null;\n}\n\n/**\n * Get approximate size of the entity.\n * @memberof Drafty\n * @static\n *\n * @param {Object} entData - entity.data to get the size for.\n * @returns {number} size of entity data in bytes.\n */\nDrafty.getEntitySize = function(entData) {\n  // Either size hint or length of value. The value is base64 encoded,\n  // the actual object size is smaller than the encoded length.\n  return entData.size ? entData.size : entData.val ? (entData.val.length * 0.75) | 0 : 0;\n}\n\n/**\n * Get entity mime type.\n * @memberof Drafty\n * @static\n *\n * @param {Object} entData - entity.data to get the type for.\n * @returns {string} mime type of entity.\n */\nDrafty.getEntityMimeType = function(entData) {\n  return entData.mime || 'text/plain';\n}\n\n/**\n * Get HTML tag for a given two-letter style name.\n * @memberof Drafty\n * @static\n *\n * @param {string} style - two-letter style, like ST or LN.\n *\n * @returns {string} HTML tag name if style is found, {code: undefined} if style is falsish or not found.\n */\nDrafty.tagName = function(style) {\n  return FORMAT_TAGS[style] && FORMAT_TAGS[style].html_tag;\n}\n\n/**\n * For a given data bundle generate an object with HTML attributes,\n * for instance, given {url: \"http://www.example.com/\"} return\n * {href: \"http://www.example.com/\"}\n * @memberof Drafty\n * @static\n *\n * @param {string} style - two-letter style to generate attributes for.\n * @param {Object} data - data bundle to convert to attributes\n *\n * @returns {Object} object with HTML attributes.\n */\nDrafty.attrValue = function(style, data) {\n  if (data && DECORATORS[style]) {\n    return DECORATORS[style].props(data);\n  }\n\n  return undefined;\n}\n\n/**\n * Drafty MIME type.\n * @memberof Drafty\n * @static\n *\n * @returns {string} content-Type \"text/x-drafty\".\n */\nDrafty.getContentType = function() {\n  return DRAFTY_MIME_TYPE;\n}\n\n// =================\n// Utility methods.\n// =================\n\n// Take a string and defined earlier style spans, re-compose them into a tree where each leaf is\n// a same-style (including unstyled) string. I.e. 'hello *bold _italic_* and ~more~ world' ->\n// ('hello ', (b: 'bold ', (i: 'italic')), ' and ', (s: 'more'), ' world');\n//\n// This is needed in order to clear markup, i.e. 'hello *world*' -> 'hello world' and convert\n// ranges from markup-ed offsets to plain text offsets.\nfunction chunkify(line, start, end, spans) {\n  const chunks = [];\n\n  if (spans.length == 0) {\n    return [];\n  }\n\n  for (let i in spans) {\n    // Get the next chunk from the queue\n    const span = spans[i];\n\n    // Grab the initial unstyled chunk\n    if (span.at > start) {\n      chunks.push({\n        txt: line.slice(start, span.at)\n      });\n    }\n\n    // Grab the styled chunk. It may include subchunks.\n    const chunk = {\n      tp: span.tp\n    };\n    const chld = chunkify(line, span.at + 1, span.end, span.children);\n    if (chld.length > 0) {\n      chunk.children = chld;\n    } else {\n      chunk.txt = span.txt;\n    }\n    chunks.push(chunk);\n    start = span.end + 1; // '+1' is to skip the formatting character\n  }\n\n  // Grab the remaining unstyled chunk, after the last span\n  if (start < end) {\n    chunks.push({\n      txt: line.slice(start, end)\n    });\n  }\n\n  return chunks;\n}\n\n// Detect starts and ends of formatting spans. Unformatted spans are\n// ignored at this stage.\nfunction spannify(original, re_start, re_end, type) {\n  const result = [];\n  let index = 0;\n  let line = original.slice(0); // make a copy;\n\n  while (line.length > 0) {\n    // match[0]; // match, like '*abc*'\n    // match[1]; // match captured in parenthesis, like 'abc'\n    // match['index']; // offset where the match started.\n\n    // Find the opening token.\n    const start = re_start.exec(line);\n    if (start == null) {\n      break;\n    }\n\n    // Because javascript RegExp does not support lookbehind, the actual offset may not point\n    // at the markup character. Find it in the matched string.\n    let start_offset = start['index'] + start[0].lastIndexOf(start[1]);\n    // Clip the processed part of the string.\n    line = line.slice(start_offset + 1);\n    // start_offset is an offset within the clipped string. Convert to original index.\n    start_offset += index;\n    // Index now point to the beginning of 'line' within the 'original' string.\n    index = start_offset + 1;\n\n    // Find the matching closing token.\n    const end = re_end ? re_end.exec(line) : null;\n    if (end == null) {\n      break;\n    }\n    let end_offset = end['index'] + end[0].indexOf(end[1]);\n    // Clip the processed part of the string.\n    line = line.slice(end_offset + 1);\n    // Update offsets\n    end_offset += index;\n    // Index now points to the beginning of 'line' within the 'original' string.\n    index = end_offset + 1;\n\n    result.push({\n      txt: original.slice(start_offset + 1, end_offset),\n      children: [],\n      at: start_offset,\n      end: end_offset,\n      tp: type\n    });\n  }\n\n  return result;\n}\n\n// Convert linear array or spans into a tree representation.\n// Keep standalone and nested spans, throw away partially overlapping spans.\nfunction toSpanTree(spans) {\n  if (spans.length == 0) {\n    return [];\n  }\n\n  const tree = [spans[0]];\n  let last = spans[0];\n  for (let i = 1; i < spans.length; i++) {\n    // Keep spans which start after the end of the previous span or those which\n    // are complete within the previous span.\n    if (spans[i].at > last.end) {\n      // Span is completely outside of the previous span.\n      tree.push(spans[i]);\n      last = spans[i];\n    } else if (spans[i].end <= last.end) {\n      // Span is fully inside of the previous span. Push to subnode.\n      last.children.push(spans[i]);\n    }\n    // Span could partially overlap, ignoring it as invalid.\n  }\n\n  // Recursively rearrange the subnodes.\n  for (let i in tree) {\n    tree[i].children = toSpanTree(tree[i].children);\n  }\n\n  return tree;\n}\n\n// Convert drafty document to a tree.\nfunction draftyToTree(doc) {\n  if (!doc) {\n    return null;\n  }\n\n  doc = (typeof doc == 'string') ? {\n    txt: doc\n  } : doc;\n  let {\n    txt,\n    fmt,\n    ent\n  } = doc;\n\n  txt = txt || '';\n  if (!Array.isArray(ent)) {\n    ent = [];\n  }\n\n  if (!Array.isArray(fmt) || fmt.length == 0) {\n    if (ent.length == 0) {\n      return {\n        text: txt\n      };\n    }\n\n    // Handle special case when all values in fmt are 0 and fmt therefore is skipped.\n    fmt = [{\n      at: 0,\n      len: 0,\n      key: 0\n    }];\n  }\n\n  // Sanitize spans.\n  const spans = [];\n  const attachments = [];\n  fmt.forEach((span) => {\n    if (!span || typeof span != 'object') {\n      return;\n    }\n\n    if (!['undefined', 'number'].includes(typeof span.at)) {\n      // Present, but non-numeric 'at'.\n      return;\n    }\n    if (!['undefined', 'number'].includes(typeof span.len)) {\n      // Present, but non-numeric 'len'.\n      return;\n    }\n    let at = span.at | 0;\n    let len = span.len | 0;\n    if (len < 0) {\n      // Invalid span length.\n      return;\n    }\n\n    let key = span.key || 0;\n    if (ent.length > 0 && (typeof key != 'number' || key < 0 || key >= ent.length)) {\n      // Invalid key value.\n      return;\n    }\n\n    if (at <= -1) {\n      // Attachment. Store attachments separately.\n      attachments.push({\n        start: -1,\n        end: 0,\n        key: key\n      });\n      return;\n    } else if (at + len > txt.length) {\n      // Span is out of bounds.\n      return;\n    }\n\n    if (!span.tp) {\n      if (ent.length > 0 && (typeof ent[key] == 'object')) {\n        spans.push({\n          start: at,\n          end: at + len,\n          key: key\n        });\n      }\n    } else {\n      spans.push({\n        type: span.tp,\n        start: at,\n        end: at + len\n      });\n    }\n  });\n\n  // Sort spans first by start index (asc) then by length (desc), then by weight.\n  spans.sort((a, b) => {\n    let diff = a.start - b.start;\n    if (diff != 0) {\n      return diff;\n    }\n    diff = b.end - a.end;\n    if (diff != 0) {\n      return diff;\n    }\n    return FMT_WEIGHT.indexOf(b.type) - FMT_WEIGHT.indexOf(a.type);\n  });\n\n  // Move attachments to the end of the list.\n  if (attachments.length > 0) {\n    spans.push(...attachments);\n  }\n\n  spans.forEach((span) => {\n    if (ent.length > 0 && !span.type && ent[span.key] && typeof ent[span.key] == 'object') {\n      span.type = ent[span.key].tp;\n      span.data = ent[span.key].data;\n    }\n\n    // Is type still undefined? Hide the invalid element!\n    if (!span.type) {\n      span.type = 'HD';\n    }\n  });\n\n  let tree = spansToTree({}, txt, 0, txt.length, spans);\n\n  // Flatten tree nodes.\n  const flatten = function(node) {\n    if (Array.isArray(node.children) && node.children.length == 1) {\n      // Unwrap.\n      const child = node.children[0];\n      if (!node.type) {\n        const parent = node.parent;\n        node = child;\n        node.parent = parent;\n      } else if (!child.type && !child.children) {\n        node.text = child.text;\n        delete node.children;\n      }\n    }\n    return node;\n  }\n  tree = treeTopDown(tree, flatten);\n\n  return tree;\n}\n\n// Add tree node to a parent tree.\nfunction addNode(parent, n) {\n  if (!n) {\n    return parent;\n  }\n\n  if (!parent.children) {\n    parent.children = [];\n  }\n\n  // If text is present, move it to a subnode.\n  if (parent.text) {\n    parent.children.push({\n      text: parent.text,\n      parent: parent\n    });\n    delete parent.text;\n  }\n\n  n.parent = parent;\n  parent.children.push(n);\n\n  return parent;\n}\n\n// Returns a tree of nodes.\nfunction spansToTree(parent, text, start, end, spans) {\n  if (!spans || spans.length == 0) {\n    if (start < end) {\n      addNode(parent, {\n        text: text.substring(start, end)\n      });\n    }\n    return parent;\n  }\n\n  // Process subspans.\n  for (let i = 0; i < spans.length; i++) {\n    const span = spans[i];\n    if (span.start < 0 && span.type == 'EX') {\n      addNode(parent, {\n        type: span.type,\n        data: span.data,\n        key: span.key,\n        att: true\n      });\n      continue;\n    }\n\n    // Add un-styled range before the styled span starts.\n    if (start < span.start) {\n      addNode(parent, {\n        text: text.substring(start, span.start)\n      });\n      start = span.start;\n    }\n\n    // Get all spans which are within the current span.\n    const subspans = [];\n    while (i < spans.length - 1) {\n      const inner = spans[i + 1];\n      if (inner.start < 0) {\n        // Attachments are in the end. Stop.\n        break;\n      } else if (inner.start < span.end) {\n        if (inner.end <= span.end) {\n          const tag = FORMAT_TAGS[inner.tp] || {};\n          if (inner.start < inner.end || tag.isVoid) {\n            // Valid subspan: completely within the current span and\n            // either non-zero length or zero length is acceptable.\n            subspans.push(inner);\n          }\n        }\n        i++;\n        // Overlapping subspans are ignored.\n      } else {\n        // Past the end of the current span. Stop.\n        break;\n      }\n    }\n\n    addNode(parent, spansToTree({\n      type: span.type,\n      data: span.data,\n      key: span.key\n    }, text, start, span.end, subspans));\n    start = span.end;\n  }\n\n  // Add the last unformatted range.\n  if (start < end) {\n    addNode(parent, {\n      text: text.substring(start, end)\n    });\n  }\n\n  return parent;\n}\n\n// Append a tree to a Drafty doc.\nfunction treeToDrafty(doc, tree, keymap) {\n  if (!tree) {\n    return doc;\n  }\n\n  doc.txt = doc.txt || '';\n\n  // Checkpoint to measure length of the current tree node.\n  const start = doc.txt.length;\n\n  if (tree.text) {\n    doc.txt += tree.text;\n  } else if (Array.isArray(tree.children)) {\n    tree.children.forEach((c) => {\n      treeToDrafty(doc, c, keymap);\n    });\n  }\n\n  if (tree.type) {\n    const len = doc.txt.length - start;\n    doc.fmt = doc.fmt || [];\n    if (Object.keys(tree.data || {}).length > 0) {\n      doc.ent = doc.ent || [];\n      const newKey = (typeof keymap[tree.key] == 'undefined') ? doc.ent.length : keymap[tree.key];\n      keymap[tree.key] = newKey;\n      doc.ent[newKey] = {\n        tp: tree.type,\n        data: tree.data\n      };\n      if (tree.att) {\n        // Attachment.\n        doc.fmt.push({\n          at: -1,\n          len: 0,\n          key: newKey\n        });\n      } else {\n        doc.fmt.push({\n          at: start,\n          len: len,\n          key: newKey\n        });\n      }\n    } else {\n      doc.fmt.push({\n        tp: tree.type,\n        at: start,\n        len: len\n      });\n    }\n  }\n  return doc;\n}\n\n// Traverse the tree top down transforming the nodes: apply transformer to every tree node.\nfunction treeTopDown(src, transformer, context) {\n  if (!src) {\n    return null;\n  }\n\n  let dst = transformer.call(context, src);\n  if (!dst || !dst.children) {\n    return dst;\n  }\n\n  const children = [];\n  for (let i in dst.children) {\n    let n = dst.children[i];\n    if (n) {\n      n = treeTopDown(n, transformer, context);\n      if (n) {\n        children.push(n);\n      }\n    }\n  }\n\n  if (children.length == 0) {\n    dst.children = null;\n  } else {\n    dst.children = children;\n  }\n\n  return dst;\n}\n\n// Traverse the tree bottom-up: apply formatter to every node.\n// The formatter must maintain its state through context.\nfunction treeBottomUp(src, formatter, index, stack, context) {\n  if (!src) {\n    return null;\n  }\n\n  if (stack && src.type) {\n    stack.push(src.type);\n  }\n\n  let values = [];\n  for (let i in src.children) {\n    const n = treeBottomUp(src.children[i], formatter, i, stack, context);\n    if (n) {\n      values.push(n);\n    }\n  }\n  if (values.length == 0) {\n    if (src.text) {\n      values = [src.text];\n    } else {\n      values = null;\n    }\n  }\n\n  if (stack && src.type) {\n    stack.pop();\n  }\n\n  return formatter.call(context, src.type, src.data, values, index, stack);\n}\n\n// Clip tree to the provided limit.\nfunction shortenTree(tree, limit, tail) {\n  if (!tree) {\n    return null;\n  }\n\n  if (tail) {\n    limit -= tail.length;\n  }\n\n  const shortener = function(node) {\n    if (limit <= -1) {\n      // Limit -1 means the doc was already clipped.\n      return null;\n    }\n\n    if (node.att) {\n      // Attachments are unchanged.\n      return node;\n    }\n    if (limit == 0) {\n      node.text = tail;\n      limit = -1;\n    } else if (node.text) {\n      const len = node.text.length;\n      if (len > limit) {\n        node.text = node.text.substring(0, limit) + tail;\n        limit = -1;\n      } else {\n        limit -= len;\n      }\n    }\n    return node;\n  }\n\n  return treeTopDown(tree, shortener);\n}\n\n// Strip heavy entities from a tree.\nfunction lightEntity(tree, allow) {\n  const lightCopy = node => {\n    const data = copyEntData(node.data, true, allow ? allow(node) : null);\n    if (data) {\n      node.data = data;\n    } else {\n      delete node.data;\n    }\n    return node;\n  }\n  return treeTopDown(tree, lightCopy);\n}\n\n// Remove spaces and breaks on the left.\nfunction lTrim(tree) {\n  if (tree.type == 'BR') {\n    tree = null;\n  } else if (tree.text) {\n    if (!tree.type) {\n      tree.text = tree.text.trimStart();\n      if (!tree.text) {\n        tree = null;\n      }\n    }\n  } else if (!tree.type && tree.children && tree.children.length > 0) {\n    const c = lTrim(tree.children[0]);\n    if (c) {\n      tree.children[0] = c;\n    } else {\n      tree.children.shift();\n      if (!tree.type && tree.children.length == 0) {\n        tree = null;\n      }\n    }\n  }\n  return tree;\n}\n\n// Move attachments to the end. Attachments must be at the top level, no need to traverse the tree.\nfunction attachmentsToEnd(tree, limit) {\n  if (!tree) {\n    return null;\n  }\n\n  if (tree.att) {\n    tree.text = ' ';\n    delete tree.att;\n    delete tree.children;\n  } else if (tree.children) {\n    const attachments = [];\n    const children = [];\n    for (let i in tree.children) {\n      const c = tree.children[i];\n      if (c.att) {\n        if (attachments.length == limit) {\n          // Too many attachments to preview;\n          continue;\n        }\n        if (c.data['mime'] == JSON_MIME_TYPE) {\n          // JSON attachments are not shown in preview.\n          continue;\n        }\n\n        delete c.att;\n        delete c.children;\n        c.text = ' ';\n        attachments.push(c);\n      } else {\n        children.push(c);\n      }\n    }\n    tree.children = children.concat(attachments);\n  }\n  return tree;\n}\n\n// Get a list of entities from a text.\nfunction extractEntities(line) {\n  let match;\n  let extracted = [];\n  ENTITY_TYPES.forEach((entity) => {\n    while ((match = entity.re.exec(line)) !== null) {\n      extracted.push({\n        offset: match['index'],\n        len: match[0].length,\n        unique: match[0],\n        data: entity.pack(match[0]),\n        type: entity.name\n      });\n    }\n  });\n\n  if (extracted.length == 0) {\n    return extracted;\n  }\n\n  // Remove entities detected inside other entities, like #hashtag in a URL.\n  extracted.sort((a, b) => {\n    return a.offset - b.offset;\n  });\n\n  let idx = -1;\n  extracted = extracted.filter((el) => {\n    const result = (el.offset > idx);\n    idx = el.offset + el.len;\n    return result;\n  });\n\n  return extracted;\n}\n\n// Convert the chunks into format suitable for serialization.\nfunction draftify(chunks, startAt) {\n  let plain = '';\n  let ranges = [];\n  for (let i in chunks) {\n    const chunk = chunks[i];\n    if (!chunk.txt) {\n      const drafty = draftify(chunk.children, plain.length + startAt);\n      chunk.txt = drafty.txt;\n      ranges = ranges.concat(drafty.fmt);\n    }\n\n    if (chunk.tp) {\n      ranges.push({\n        at: plain.length + startAt,\n        len: chunk.txt.length,\n        tp: chunk.tp\n      });\n    }\n\n    plain += chunk.txt;\n  }\n  return {\n    txt: plain,\n    fmt: ranges\n  };\n}\n\n// Create a copy of entity data with (light=false) or without (light=true) the large payload.\n// The array 'allow' contains a list of fields exempt from stripping.\nfunction copyEntData(data, light, allow) {\n  if (data && Object.entries(data).length > 0) {\n    allow = allow || [];\n    const dc = {};\n    ALLOWED_ENT_FIELDS.forEach(key => {\n      if (data[key]) {\n        if (light && !allow.includes(key) &&\n          (typeof data[key] == 'string' || Array.isArray(data[key])) &&\n          data[key].length > MAX_PREVIEW_DATA_SIZE) {\n          return;\n        }\n        if (typeof data[key] == 'object') {\n          return;\n        }\n        dc[key] = data[key];\n      }\n    });\n\n    if (Object.entries(dc).length != 0) {\n      return dc;\n    }\n  }\n  return null;\n}\n\nif (typeof module != 'undefined') {\n  module.exports = Drafty;\n}\n","/**\n * @file Utilities for uploading and downloading files.\n *\n * @copyright 2015-2023 Tinode LLC.\n */\n'use strict';\n\nimport CommError from './comm-error.js';\nimport {\n  isUrlRelative,\n  jsonParseHelper\n} from './utils.js';\n\nlet XHRProvider;\n\nfunction addURLParam(relUrl, key, value) {\n  const url = new URL(relUrl, window.location.origin);\n  url.searchParams.append(key, value);\n  return url.toString().substring(window.location.origin.length);\n}\n\n/**\n * @class LargeFileHelper - utilities for uploading and downloading files out of band.\n * Don't instantiate this class directly. Use {Tinode.getLargeFileHelper} instead.\n * @memberof Tinode\n *\n * @param {Tinode} tinode - the main Tinode object.\n * @param {string} version - protocol version, i.e. '0'.\n */\nexport default class LargeFileHelper {\n  constructor(tinode, version) {\n    this._tinode = tinode;\n    this._version = version;\n\n    this._apiKey = tinode._apiKey;\n    this._authToken = tinode.getAuthToken();\n\n    // Ongoing requests.\n    this.xhr = [];\n  }\n\n  /**\n   * Start uploading the file to an endpoint at baseUrl.\n   *\n   * @memberof Tinode.LargeFileHelper#\n   *\n   * @param {string} baseUrl base URL of upload server.\n   * @param {File|Blob} data data to upload.\n   * @param {string} avatarFor topic name if the upload represents an avatar.\n   * @param {Callback} onProgress callback. Takes one {float} parameter 0..1\n   * @param {Callback} onSuccess callback. Called when the file is successfully uploaded.\n   * @param {Callback} onFailure callback. Called in case of a failure.\n   *\n   * @returns {Promise} resolved/rejected when the upload is completed/failed.\n   */\n  uploadWithBaseUrl(baseUrl, data, avatarFor, onProgress, onSuccess, onFailure) {\n    let url = `/v${this._version}/file/u/`;\n    if (baseUrl) {\n      let base = baseUrl;\n      if (base.endsWith('/')) {\n        // Removing trailing slash.\n        base = base.slice(0, -1);\n      }\n      if (base.startsWith('http://') || base.startsWith('https://')) {\n        url = base + url;\n      } else {\n        throw new Error(`Invalid base URL '${baseUrl}'`);\n      }\n    }\n\n    const instance = this;\n    const xhr = new XHRProvider();\n    this.xhr.push(xhr);\n\n    xhr.open('POST', url, true);\n    xhr.setRequestHeader('X-Tinode-APIKey', this._apiKey);\n    if (this._authToken) {\n      xhr.setRequestHeader('X-Tinode-Auth', `Token ${this._authToken.token}`);\n    }\n\n    let toResolve = null;\n    let toReject = null;\n\n    const result = new Promise((resolve, reject) => {\n      toResolve = resolve;\n      toReject = reject;\n    });\n\n    xhr.upload.onprogress = e => {\n      if (e.lengthComputable) {\n        if (onProgress) {\n          onProgress(e.loaded / e.total);\n        }\n        if (this.onProgress) {\n          this.onProgress(e.loaded / e.total);\n        }\n      }\n    };\n\n    xhr.onload = function() {\n      let pkt;\n      try {\n        pkt = JSON.parse(this.response, jsonParseHelper);\n      } catch (err) {\n        instance._tinode.logger(\"ERROR: Invalid server response in LargeFileHelper\", this.response);\n        pkt = {\n          ctrl: {\n            code: this.status,\n            text: this.statusText\n          }\n        };\n      }\n\n      if (this.status >= 200 && this.status < 300) {\n        if (toResolve) {\n          toResolve(pkt.ctrl.params.url);\n        }\n        if (onSuccess) {\n          onSuccess(pkt.ctrl);\n        }\n      } else if (this.status >= 400) {\n        if (toReject) {\n          toReject(new CommError(pkt.ctrl.text, pkt.ctrl.code));\n        }\n        if (onFailure) {\n          onFailure(pkt.ctrl);\n        }\n      } else {\n        instance._tinode.logger(\"ERROR: Unexpected server response status\", this.status, this.response);\n      }\n    };\n\n    xhr.onerror = function(e) {\n      if (toReject) {\n        toReject(e || new Error(\"failed\"));\n      }\n      if (onFailure) {\n        onFailure(null);\n      }\n    };\n\n    xhr.onabort = function(e) {\n      if (toReject) {\n        toReject(new Error(\"upload cancelled by user\"));\n      }\n      if (onFailure) {\n        onFailure(null);\n      }\n    };\n\n    try {\n      const form = new FormData();\n      form.append('file', data);\n      form.set('id', this._tinode.getNextUniqueId());\n      if (avatarFor) {\n        form.set('topic', avatarFor);\n      }\n      xhr.send(form);\n    } catch (err) {\n      if (toReject) {\n        toReject(err);\n      }\n      if (onFailure) {\n        onFailure(null);\n      }\n    }\n\n    return result;\n  }\n  /**\n   * Start uploading the file to default endpoint.\n   *\n   * @memberof Tinode.LargeFileHelper#\n   *\n   * @param {File|Blob} data to upload\n   * @param {string} avatarFor topic name if the upload represents an avatar.\n   * @param {Callback} onProgress callback. Takes one {float} parameter 0..1\n   * @param {Callback} onSuccess callback. Called when the file is successfully uploaded.\n   * @param {Callback} onFailure callback. Called in case of a failure.\n   *\n   * @returns {Promise} resolved/rejected when the upload is completed/failed.\n   */\n  upload(data, avatarFor, onProgress, onSuccess, onFailure) {\n    const baseUrl = (this._tinode._secure ? 'https://' : 'http://') + this._tinode._host;\n    return this.uploadWithBaseUrl(baseUrl, data, avatarFor, onProgress, onSuccess, onFailure);\n  }\n  /**\n   * Download the file from a given URL using GET request. This method works with the Tinode server only.\n   *\n   * @memberof Tinode.LargeFileHelper#\n   *\n   * @param {string} relativeUrl - URL to download the file from. Must be relative url, i.e. must not contain the host.\n   * @param {string=} filename - file name to use for the downloaded file.\n   *\n   * @returns {Promise} resolved/rejected when the download is completed/failed.\n   */\n  download(relativeUrl, filename, mimetype, onProgress, onError) {\n    if (!isUrlRelative(relativeUrl)) {\n      // As a security measure refuse to download from an absolute URL.\n      if (onError) {\n        onError(`The URL '${relativeUrl}' must be relative, not absolute`);\n      }\n      return;\n    }\n    if (!this._authToken) {\n      if (onError) {\n        onError(\"Must authenticate first\");\n      }\n      return;\n    }\n    const instance = this;\n\n    const xhr = new XHRProvider();\n    this.xhr.push(xhr);\n\n    // Add '&asatt=1' to URL to request 'Content-Disposition: attachment' response header.\n    relativeUrl = addURLParam(relativeUrl, 'asatt', '1');\n\n    // Get data as blob (stored by the browser as a temporary file).\n    xhr.open('GET', relativeUrl, true);\n    xhr.setRequestHeader('X-Tinode-APIKey', this._apiKey);\n    xhr.setRequestHeader('X-Tinode-Auth', 'Token ' + this._authToken.token);\n    xhr.responseType = 'blob';\n\n    xhr.onprogress = function(e) {\n      if (onProgress) {\n        // Passing e.loaded instead of e.loaded/e.total because e.total\n        // is always 0 with gzip compression enabled by the server.\n        onProgress(e.loaded);\n      }\n    };\n\n    let toResolve = null;\n    let toReject = null;\n\n    const result = new Promise((resolve, reject) => {\n      toResolve = resolve;\n      toReject = reject;\n    });\n\n    // The blob needs to be saved as file. There is no known way to\n    // save the blob as file other than to fake a click on an <a href... download=...>.\n    xhr.onload = function() {\n      if (this.status == 200) {\n        const link = document.createElement('a');\n        // URL.createObjectURL is not available in non-browser environment. This call will fail.\n        link.href = window.URL.createObjectURL(new Blob([this.response], {\n          type: mimetype\n        }));\n        link.style.display = 'none';\n        link.setAttribute('download', filename);\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        window.URL.revokeObjectURL(link.href);\n        if (toResolve) {\n          toResolve();\n        }\n      } else if (this.status >= 400 && toReject) {\n        // The this.responseText is undefined, must use this.response which is a blob.\n        // Need to convert this.response to JSON. The blob can only be accessed by the\n        // FileReader.\n        const reader = new FileReader();\n        reader.onload = function() {\n          try {\n            const pkt = JSON.parse(this.result, jsonParseHelper);\n            toReject(new CommError(pkt.ctrl.text, pkt.ctrl.code));\n          } catch (err) {\n            instance._tinode.logger(\"ERROR: Invalid server response in LargeFileHelper\", this.result);\n            toReject(err);\n          }\n        };\n        reader.readAsText(this.response);\n      }\n    };\n\n    xhr.onerror = function(e) {\n      if (toReject) {\n        toReject(new Error(\"failed\"));\n      }\n      if (onError) {\n        onError(e);\n      }\n    };\n\n    xhr.onabort = function() {\n      if (toReject) {\n        toReject(null);\n      }\n    };\n\n    try {\n      xhr.send();\n    } catch (err) {\n      if (toReject) {\n        toReject(err);\n      }\n      if (onError) {\n        onError(err);\n      }\n    }\n\n    return result;\n  }\n  /**\n   * Try to cancel all ongoing uploads or downloads.\n   * @memberof Tinode.LargeFileHelper#\n   */\n  cancel() {\n    this.xhr.forEach(req => {\n      if (req.readyState < 4) {\n        req.abort();\n      }\n    });\n  }\n  /**\n   * To use LargeFileHelper in a non browser context, supply XMLHttpRequest provider.\n   * @static\n   * @memberof LargeFileHelper\n   * @param xhrProvider XMLHttpRequest provider, e.g. for node <code>require('xhr')</code>.\n   */\n  static setNetworkProvider(xhrProvider) {\n    XHRProvider = xhrProvider;\n  }\n}\n","/**\n * @file Helper class for constructing {@link Tinode.GetQuery}.\n *\n * @copyright 2015-2022 Tinode LLC.\n */\n'use strict';\n\n/**\n * Helper class for constructing {@link Tinode.GetQuery}.\n *\n * @class MetaGetBuilder\n * @memberof Tinode\n *\n * @param {Tinode.Topic} parent topic which instantiated this builder.\n */\nexport default class MetaGetBuilder {\n  constructor(parent) {\n    this.topic = parent;\n    this.what = {};\n  }\n\n  // Get timestamp of the most recent desc update.\n  #get_desc_ims() {\n    return this.topic._deleted ? undefined : this.topic.updated;\n  }\n\n  // Get timestamp of the most recent subs update.\n  #get_subs_ims() {\n    if (this.topic.isP2PType()) {\n      return this.#get_desc_ims();\n    }\n    return this.topic._deleted ? undefined : this.topic._lastSubsUpdate;\n  }\n  /**\n   * Add query parameters to fetch messages within explicit limits.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {number=} since - messages newer than this (inclusive);\n   * @param {number=} before - older than this (exclusive)\n   * @param {number=} limit - number of messages to fetch\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withData(since, before, limit) {\n    this.what['data'] = {\n      since: since,\n      before: before,\n      limit: limit\n    };\n    return this;\n  }\n  /**\n   * Add query parameters to fetch messages newer than the latest saved message.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {number=} limit - number of messages to fetch\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withLaterData(limit) {\n    return this.withData(this.topic._maxSeq > 0 ? this.topic._maxSeq + 1 : undefined, undefined, limit);\n  }\n  /**\n   * Add query parameters to fetch messages older than the earliest saved message.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {number=} limit - maximum number of messages to fetch.\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withEarlierData(limit) {\n    return this.withData(undefined, this.topic._minSeq > 0 ? this.topic._minSeq : undefined, limit);\n  }\n  /**\n   * Add query parameters to fetch topic description if it's newer than the given timestamp.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {Date=} ims - fetch messages newer than this timestamp.\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withDesc(ims) {\n    this.what['desc'] = {\n      ims: ims\n    };\n    return this;\n  }\n  /**\n   * Add query parameters to fetch topic description if it's newer than the last update.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withLaterDesc() {\n    return this.withDesc(this.#get_desc_ims());\n  }\n  /**\n   * Add query parameters to fetch subscriptions.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {Date=} ims - fetch subscriptions modified more recently than this timestamp\n   * @param {number=} limit - maximum number of subscriptions to fetch.\n   * @param {string=} userOrTopic - user ID or topic name to fetch for fetching one subscription.\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withSub(ims, limit, userOrTopic) {\n    const opts = {\n      ims: ims,\n      limit: limit\n    };\n    if (this.topic.getType() == 'me') {\n      opts.topic = userOrTopic;\n    } else {\n      opts.user = userOrTopic;\n    }\n    this.what['sub'] = opts;\n    return this;\n  }\n  /**\n   * Add query parameters to fetch a single subscription.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {Date=} ims - fetch subscriptions modified more recently than this timestamp\n   * @param {string=} userOrTopic - user ID or topic name to fetch for fetching one subscription.\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withOneSub(ims, userOrTopic) {\n    return this.withSub(ims, undefined, userOrTopic);\n  }\n  /**\n   * Add query parameters to fetch a single subscription if it's been updated since the last update.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {string=} userOrTopic - user ID or topic name to fetch for fetching one subscription.\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withLaterOneSub(userOrTopic) {\n    return this.withOneSub(this.topic._lastSubsUpdate, userOrTopic);\n  }\n  /**\n   * Add query parameters to fetch subscriptions updated since the last update.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {number=} limit - maximum number of subscriptions to fetch.\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withLaterSub(limit) {\n    return this.withSub(this.#get_subs_ims(), limit);\n  }\n  /**\n   * Add query parameters to fetch topic tags.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withTags() {\n    this.what['tags'] = true;\n    return this;\n  }\n  /**\n   * Add query parameters to fetch user's credentials. <code>'me'</code> topic only.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withCred() {\n    if (this.topic.getType() == 'me') {\n      this.what['cred'] = true;\n    } else {\n      this.topic._tinode.logger(\"ERROR: Invalid topic type for MetaGetBuilder:withCreds\", this.topic.getType());\n    }\n    return this;\n  }\n  /**\n   * Add query parameters to fetch deleted messages within explicit limits. Any/all parameters can be null.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {number=} since - ids of messages deleted since this 'del' id (inclusive)\n   * @param {number=} limit - number of deleted message ids to fetch\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withDel(since, limit) {\n    if (since || limit) {\n      this.what['del'] = {\n        since: since,\n        limit: limit\n      };\n    }\n    return this;\n  }\n  /**\n   * Add query parameters to fetch messages deleted after the saved <code>'del'</code> id.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @param {number=} limit - number of deleted message ids to fetch\n   *\n   * @returns {Tinode.MetaGetBuilder} <code>this</code> object.\n   */\n  withLaterDel(limit) {\n    // Specify 'since' only if we have already received some messages. If\n    // we have no locally cached messages then we don't care if any messages were deleted.\n    return this.withDel(this.topic._maxSeq > 0 ? this.topic._maxDel + 1 : undefined, limit);\n  }\n\n  /**\n   * Extract subquery: get an object that contains specified subquery.\n   * @memberof Tinode.MetaGetBuilder#\n   * @param {string} what - subquery to return: one of 'data', 'sub', 'desc', 'tags', 'cred', 'del'.\n   * @returns {Object} requested subquery or <code>undefined</code>.\n   */\n  extract(what) {\n    return this.what[what];\n  }\n\n  /**\n   * Construct parameters.\n   * @memberof Tinode.MetaGetBuilder#\n   *\n   * @returns {Tinode.GetQuery} Get query\n   */\n  build() {\n    const what = [];\n    let params = {};\n    ['data', 'sub', 'desc', 'tags', 'cred', 'del'].forEach((key) => {\n      if (this.what.hasOwnProperty(key)) {\n        what.push(key);\n        if (Object.getOwnPropertyNames(this.what[key]).length > 0) {\n          params[key] = this.what[key];\n        }\n      }\n    });\n    if (what.length > 0) {\n      params.what = what.join(' ');\n    } else {\n      params = undefined;\n    }\n    return params;\n  }\n}\n","/**\n * @file Topic management.\n *\n * @copyright 2015-2022 Tinode LLC.\n */\n'use strict';\n\nimport AccessMode from './access-mode.js';\nimport CBuffer from './cbuffer.js';\nimport CommError from './comm-error.js';\nimport * as Const from './config.js';\nimport Drafty from './drafty.js';\nimport MetaGetBuilder from './meta-builder.js';\nimport {\n  mergeObj,\n  mergeToCache,\n  normalizeArray\n} from './utils.js';\n\n/**\n * Topic is a class representing a logical communication channel.\n */\nexport class Topic {\n  /**\n   * @callback onData\n   * @param {Data} data - Data packet\n   */\n\n  /**\n   * Create topic.\n   * @param {string} name - Name of the topic to create.\n   * @param {Object=} callbacks - Object with various event callbacks.\n   * @param {onData} callbacks.onData - Callback which receives a <code>{data}</code> message.\n   * @param {callback} callbacks.onMeta - Callback which receives a <code>{meta}</code> message.\n   * @param {callback} callbacks.onPres - Callback which receives a <code>{pres}</code> message.\n   * @param {callback} callbacks.onInfo - Callback which receives an <code>{info}</code> message.\n   * @param {callback} callbacks.onMetaDesc - Callback which receives changes to topic desctioption {@link desc}.\n   * @param {callback} callbacks.onMetaSub - Called for a single subscription record change.\n   * @param {callback} callbacks.onSubsUpdated - Called after a batch of subscription changes have been recieved and cached.\n   * @param {callback} callbacks.onDeleteTopic - Called after the topic is deleted.\n   * @param {callback} callbacls.onAllMessagesReceived - Called when all requested <code>{data}</code> messages have been recived.\n   */\n  constructor(name, callbacks) {\n    // Parent Tinode object.\n    this._tinode = null;\n\n    // Server-provided data, locally immutable.\n    // topic name\n    this.name = name;\n    // Timestamp when the topic was created.\n    this.created = null;\n    // Timestamp when the topic was last updated.\n    this.updated = null;\n    // Timestamp of the last messages\n    this.touched = new Date(0);\n    // Access mode, see AccessMode\n    this.acs = new AccessMode(null);\n    // Per-topic private data (accessible by current user only).\n    this.private = null;\n    // Per-topic public data (accessible by all users).\n    this.public = null;\n    // Per-topic system-provided data (accessible by all users).\n    this.trusted = null;\n\n    // Locally cached data\n    // Subscribed users, for tracking read/recv/msg notifications.\n    this._users = {};\n\n    // Current value of locally issued seqId, used for pending messages.\n    this._queuedSeqId = Const.LOCAL_SEQID;\n\n    // The maximum known {data.seq} value.\n    this._maxSeq = 0;\n    // The minimum known {data.seq} value.\n    this._minSeq = 0;\n    // Indicator that the last request for earlier messages returned 0.\n    this._noEarlierMsgs = false;\n    // The maximum known deletion ID.\n    this._maxDel = 0;\n    // Timer object used to send 'recv' notifications.\n    this._recvNotificationTimer = null;\n\n    // User discovery tags\n    this._tags = [];\n    // Credentials such as email or phone number.\n    this._credentials = [];\n    // Message versions cache (e.g. for edited messages).\n    // Keys: original message seq ID.\n    // Values: CBuffers containing newer versions of the original message\n    // ordered by seq id.\n    this._messageVersions = {};\n    // Message cache, sorted by message seq values, from old to new.\n    this._messages = new CBuffer((a, b) => {\n      return a.seq - b.seq;\n    }, true);\n    // Boolean, true if the topic is currently live\n    this._attached = false;\n    // Timestap of the most recently updated subscription.\n    this._lastSubsUpdate = new Date(0);\n    // Topic created but not yet synced with the server. Used only during initialization.\n    this._new = true;\n    // The topic is deleted at the server, this is a local copy.\n    this._deleted = false;\n\n    // Timer used to trgger {leave} request after a delay.\n    this._delayedLeaveTimer = null;\n\n    // Callbacks\n    if (callbacks) {\n      this.onData = callbacks.onData;\n      this.onMeta = callbacks.onMeta;\n      this.onPres = callbacks.onPres;\n      this.onInfo = callbacks.onInfo;\n      // A single desc update;\n      this.onMetaDesc = callbacks.onMetaDesc;\n      // A single subscription record;\n      this.onMetaSub = callbacks.onMetaSub;\n      // All subscription records received;\n      this.onSubsUpdated = callbacks.onSubsUpdated;\n      this.onTagsUpdated = callbacks.onTagsUpdated;\n      this.onCredsUpdated = callbacks.onCredsUpdated;\n      this.onDeleteTopic = callbacks.onDeleteTopic;\n      this.onAllMessagesReceived = callbacks.onAllMessagesReceived;\n    }\n  }\n\n  // Static methods.\n\n  /**\n   * Determine topic type from topic's name: grp, p2p, me, fnd, sys.\n   *\n   * @param {string} name - Name of the topic to test.\n   * @returns {string} One of <code>\"me\"</code>, <code>\"fnd\"</code>, <code>\"sys\"</code>, <code>\"grp\"</code>,\n   *    <code>\"p2p\"</code> or <code>undefined</code>.\n   */\n  static topicType(name) {\n    const types = {\n      'me': Const.TOPIC_ME,\n      'fnd': Const.TOPIC_FND,\n      'grp': Const.TOPIC_GRP,\n      'new': Const.TOPIC_GRP,\n      'nch': Const.TOPIC_GRP,\n      'chn': Const.TOPIC_GRP,\n      'usr': Const.TOPIC_P2P,\n      'sys': Const.TOPIC_SYS\n    };\n    return types[(typeof name == 'string') ? name.substring(0, 3) : 'xxx'];\n  }\n\n  /**\n   * Check if the given topic name is a name of a 'me' topic.\n   *\n   * @param {string} name - Name of the topic to test.\n   * @returns {boolean} <code>true</code> if the name is a name of a 'me' topic, <code>false</code> otherwise.\n   */\n  static isMeTopicName(name) {\n    return Topic.topicType(name) == Const.TOPIC_ME;\n  }\n\n  /**\n   * Check if the given topic name is a name of a group topic.\n   * @static\n   *\n   * @param {string} name - Name of the topic to test.\n   * @returns {boolean} <code>true</code> if the name is a name of a group topic, <code>false</code> otherwise.\n   */\n  static isGroupTopicName(name) {\n    return Topic.topicType(name) == Const.TOPIC_GRP;\n  }\n\n  /**\n   * Check if the given topic name is a name of a p2p topic.\n   * @static\n   *\n   * @param {string} name - Name of the topic to test.\n   * @returns {boolean} <code>true</code> if the name is a name of a p2p topic, <code>false</code> otherwise.\n   */\n  static isP2PTopicName(name) {\n    return Topic.topicType(name) == Const.TOPIC_P2P;\n  }\n\n  /**\n   * Check if the given topic name is a name of a communication topic, i.e. P2P or group.\n   * @static\n   *\n   * @param {string} name - Name of the topic to test.\n   * @returns {boolean} <code>true</code> if the name is a name of a p2p or group topic, <code>false</code> otherwise.\n   */\n  static isCommTopicName(name) {\n    return Topic.isP2PTopicName(name) || Topic.isGroupTopicName(name);\n  }\n\n  /**\n   * Check if the topic name is a name of a new topic.\n   * @static\n   *\n   * @param {string} name - topic name to check.\n   * @returns {boolean} <code>true</code> if the name is a name of a new topic, <code>false</code> otherwise.\n   */\n  static isNewGroupTopicName(name) {\n    return (typeof name == 'string') &&\n      (name.substring(0, 3) == Const.TOPIC_NEW || name.substring(0, 3) == Const.TOPIC_NEW_CHAN);\n  }\n\n  /**\n   * Check if the topic name is a name of a channel.\n   * @static\n   *\n   * @param {string} name - topic name to check.\n   * @returns {boolean} <code>true</code> if the name is a name of a channel, <code>false</code> otherwise.\n   */\n  static isChannelTopicName(name) {\n    return (typeof name == 'string') &&\n      (name.substring(0, 3) == Const.TOPIC_CHAN || name.substring(0, 3) == Const.TOPIC_NEW_CHAN);\n  }\n\n  /**\n   * Check if the topic is subscribed.\n   * @returns {boolean} True is topic is attached/subscribed, false otherwise.\n   */\n  isSubscribed() {\n    return this._attached;\n  }\n\n  /**\n   * Request topic to subscribe. Wrapper for {@link Tinode#subscribe}.\n   *\n   * @param {Tinode.GetQuery=} getParams - get query parameters.\n   * @param {Tinode.SetParams=} setParams - set parameters.\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to the request.\n   */\n  subscribe(getParams, setParams) {\n    // Clear request to leave topic.\n    clearTimeout(this._delayedLeaveTimer);\n    this._delayedLeaveTimer = null;\n\n    // If the topic is already subscribed, return resolved promise\n    if (this._attached) {\n      return Promise.resolve(this);\n    }\n\n    // Send subscribe message, handle async response.\n    // If topic name is explicitly provided, use it. If no name, then it's a new group topic,\n    // use \"new\".\n    return this._tinode.subscribe(this.name || Const.TOPIC_NEW, getParams, setParams).then(ctrl => {\n      if (ctrl.code >= 300) {\n        // Do nothing if subscription status has not changed.\n        return ctrl;\n      }\n\n      this._attached = true;\n      this._deleted = false;\n      this.acs = (ctrl.params && ctrl.params.acs) ? ctrl.params.acs : this.acs;\n\n      // Set topic name for new topics and add it to cache.\n      if (this._new) {\n        delete this._new;\n\n        if (this.name != ctrl.topic) {\n          // Name may change new123456 -> grpAbCdEf. Remove from cache under the old name.\n          this._cacheDelSelf();\n          this.name = ctrl.topic;\n        }\n        this._cachePutSelf();\n\n        this.created = ctrl.ts;\n        this.updated = ctrl.ts;\n\n        if (this.name != Const.TOPIC_ME && this.name != Const.TOPIC_FND) {\n          // Add the new topic to the list of contacts maintained by the 'me' topic.\n          const me = this._tinode.getMeTopic();\n          if (me.onMetaSub) {\n            me.onMetaSub(this);\n          }\n          if (me.onSubsUpdated) {\n            me.onSubsUpdated([this.name], 1);\n          }\n        }\n\n        if (setParams && setParams.desc) {\n          setParams.desc._noForwarding = true;\n          this._processMetaDesc(setParams.desc);\n        }\n      }\n      return ctrl;\n    });\n  }\n\n  /**\n   * Create a draft of a message without sending it to the server.\n   * @memberof Tinode.Topic#\n   *\n   * @param {string | Object} data - Content to wrap in a draft.\n   * @param {boolean=} noEcho - If <code>true</code> server will not echo message back to originating\n   * session. Otherwise the server will send a copy of the message to sender.\n   *\n   * @returns {Object} message draft.\n   */\n  createMessage(data, noEcho) {\n    return this._tinode.createMessage(this.name, data, noEcho);\n  }\n\n  /**\n   * Immediately publish data to topic. Wrapper for {@link Tinode#publish}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {string | Object} data - Message to publish, either plain string or a Drafty object.\n   * @param {boolean=} noEcho - If <code>true</code> server will not echo message back to originating\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to the request.\n   */\n  publish(data, noEcho) {\n    return this.publishMessage(this.createMessage(data, noEcho));\n  }\n\n  /**\n   * Publish message created by {@link Tinode.Topic#createMessage}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {Object} pub - {data} object to publish. Must be created by {@link Tinode.Topic#createMessage}\n   *\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to the request.\n   */\n  publishMessage(pub) {\n    if (!this._attached) {\n      return Promise.reject(new Error(\"Cannot publish on inactive topic\"));\n    }\n    if (this._sending) {\n      return Promise.reject(new Error(\"The message is already being sent\"));\n    }\n\n    // Send data.\n    pub._sending = true;\n    pub._failed = false;\n\n    // Extract refereces to attachments and out of band image records.\n    let attachments = null;\n    if (Drafty.hasEntities(pub.content)) {\n      attachments = [];\n      Drafty.entities(pub.content, data => {\n        if (data) {\n          if (data.ref) {\n            attachments.push(data.ref);\n          }\n          if (data.preref) {\n            attachments.push(data.preref);\n          }\n        }\n      });\n      if (attachments.length == 0) {\n        attachments = null;\n      }\n    }\n\n    return this._tinode.publishMessage(pub, attachments).then(ctrl => {\n      pub._sending = false;\n      pub.ts = ctrl.ts;\n      this.swapMessageId(pub, ctrl.params.seq);\n      this._maybeUpdateMessageVersionsCache(pub);\n      this._routeData(pub);\n      return ctrl;\n    }).catch(err => {\n      this._tinode.logger(\"WARNING: Message rejected by the server\", err);\n      pub._sending = false;\n      pub._failed = true;\n      if (this.onData) {\n        this.onData();\n      }\n    });\n  }\n\n  /**\n   * Add message to local message cache, send to the server when the promise is resolved.\n   * If promise is null or undefined, the message will be sent immediately.\n   * The message is sent when the\n   * The message should be created by {@link Tinode.Topic#createMessage}.\n   * This is probably not the final API.\n   * @memberof Tinode.Topic#\n   *\n   * @param {Object} pub - Message to use as a draft.\n   * @param {Promise} prom - Message will be sent when this promise is resolved, discarded if rejected.\n   *\n   * @returns {Promise} derived promise.\n   */\n  publishDraft(pub, prom) {\n    const seq = pub.seq || this._getQueuedSeqId();\n    if (!pub._noForwarding) {\n      // The 'seq', 'ts', and 'from' are added to mimic {data}. They are removed later\n      // before the message is sent.\n      pub._noForwarding = true;\n      pub.seq = seq;\n      pub.ts = new Date();\n      pub.from = this._tinode.getCurrentUserID();\n\n      // Don't need an echo message because the message is added to local cache right away.\n      pub.noecho = true;\n      // Add to cache.\n      this._messages.put(pub);\n      this._tinode._db.addMessage(pub);\n\n      if (this.onData) {\n        this.onData(pub);\n      }\n    }\n    // If promise is provided, send the queued message when it's resolved.\n    // If no promise is provided, create a resolved one and send immediately.\n    return (prom || Promise.resolve())\n      .then(_ => {\n        if (pub._cancelled) {\n          return {\n            code: 300,\n            text: \"cancelled\"\n          };\n        }\n        return this.publishMessage(pub);\n      }).catch(err => {\n        this._tinode.logger(\"WARNING: Message draft rejected\", err);\n        pub._sending = false;\n        pub._failed = true;\n        pub._fatal = err instanceof CommError ? (err.code >= 400 && err.code < 500) : false;\n        if (this.onData) {\n          this.onData();\n        }\n        // Rethrow to let caller know that the operation failed.\n        throw err;\n      });\n  }\n\n  /**\n   * Leave the topic, optionally unsibscribe. Leaving the topic means the topic will stop\n   * receiving updates from the server. Unsubscribing will terminate user's relationship with the topic.\n   * Wrapper for {@link Tinode#leave}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {boolean=} unsub - If true, unsubscribe, otherwise just leave.\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to the request.\n   */\n  leave(unsub) {\n    // It's possible to unsubscribe (unsub==true) from inactive topic.\n    if (!this._attached && !unsub) {\n      return Promise.reject(new Error(\"Cannot leave inactive topic\"));\n    }\n\n    // Send a 'leave' message, handle async response\n    return this._tinode.leave(this.name, unsub).then(ctrl => {\n      this._resetSub();\n      if (unsub) {\n        this._gone();\n      }\n      return ctrl;\n    });\n  }\n\n  /**\n   * Leave the topic, optionally unsibscribe after a delay. Leaving the topic means the topic will stop\n   * receiving updates from the server. Unsubscribing will terminate user's relationship with the topic.\n   * Wrapper for {@link Tinode#leave}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {boolean} unsub - If true, unsubscribe, otherwise just leave.\n   * @param {number} delay - time in milliseconds to delay leave request.\n   */\n  leaveDelayed(unsub, delay) {\n    clearTimeout(this._delayedLeaveTimer);\n    this._delayedLeaveTimer = setTimeout(_ => {\n      this._delayedLeaveTimer = null;\n      this.leave(unsub)\n    }, delay);\n  }\n\n  /**\n   * Request topic metadata from the server.\n   * @memberof Tinode.Topic#\n   *\n   * @param {Tinode.GetQuery} request parameters\n   *\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  getMeta(params) {\n    // Send {get} message, return promise.\n    return this._tinode.getMeta(this.name, params);\n  }\n\n  /**\n   * Request more messages from the server\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} limit number of messages to get.\n   * @param {boolean} forward if true, request newer messages.\n   */\n  getMessagesPage(limit, forward) {\n    let query = forward ?\n      this.startMetaQuery().withLaterData(limit) :\n      this.startMetaQuery().withEarlierData(limit);\n\n    // First try fetching from DB, then from the server.\n    return this._loadMessages(this._tinode._db, query.extract('data'))\n      .then((count) => {\n        if (count == limit) {\n          // Got enough messages from local cache.\n          return Promise.resolve({\n            topic: this.name,\n            code: 200,\n            params: {\n              count: count\n            }\n          });\n        }\n\n        // Reduce the count of requested messages.\n        limit -= count;\n        // Update query with new values loaded from DB.\n        query = forward ? this.startMetaQuery().withLaterData(limit) :\n          this.startMetaQuery().withEarlierData(limit);\n        let promise = this.getMeta(query.build());\n        if (!forward) {\n          promise = promise.then(ctrl => {\n            if (ctrl && ctrl.params && !ctrl.params.count) {\n              this._noEarlierMsgs = true;\n            }\n          });\n        }\n        return promise;\n      });\n  }\n  /**\n   * Update topic metadata.\n   * @memberof Tinode.Topic#\n   *\n   * @param {Tinode.SetParams} params parameters to update.\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  setMeta(params) {\n    if (params.tags) {\n      params.tags = normalizeArray(params.tags);\n    }\n    // Send Set message, handle async response.\n    return this._tinode.setMeta(this.name, params)\n      .then(ctrl => {\n        if (ctrl && ctrl.code >= 300) {\n          // Not modified\n          return ctrl;\n        }\n\n        if (params.sub) {\n          params.sub.topic = this.name;\n          if (ctrl.params && ctrl.params.acs) {\n            params.sub.acs = ctrl.params.acs;\n            params.sub.updated = ctrl.ts;\n          }\n          if (!params.sub.user) {\n            // This is a subscription update of the current user.\n            // Assign user ID otherwise the update will be ignored by _processMetaSubs.\n            params.sub.user = this._tinode.getCurrentUserID();\n            if (!params.desc) {\n              // Force update to topic's asc.\n              params.desc = {};\n            }\n          }\n          params.sub._noForwarding = true;\n          this._processMetaSubs([params.sub]);\n        }\n\n        if (params.desc) {\n          if (ctrl.params && ctrl.params.acs) {\n            params.desc.acs = ctrl.params.acs;\n            params.desc.updated = ctrl.ts;\n          }\n          this._processMetaDesc(params.desc);\n        }\n\n        if (params.tags) {\n          this._processMetaTags(params.tags);\n        }\n        if (params.cred) {\n          this._processMetaCreds([params.cred], true);\n        }\n\n        return ctrl;\n      });\n  }\n  /**\n   * Update access mode of the current user or of another topic subsriber.\n   * @memberof Tinode.Topic#\n   *\n   * @param {string} uid - UID of the user to update or null to update current user.\n   * @param {string} update - the update value, full or delta.\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  updateMode(uid, update) {\n    const user = uid ? this.subscriber(uid) : null;\n    const am = user ?\n      user.acs.updateGiven(update).getGiven() :\n      this.getAccessMode().updateWant(update).getWant();\n\n    return this.setMeta({\n      sub: {\n        user: uid,\n        mode: am\n      }\n    });\n  }\n  /**\n   * Create new topic subscription. Wrapper for {@link Tinode#setMeta}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {string} uid - ID of the user to invite\n   * @param {string=} mode - Access mode. <code>null</code> means to use default.\n   *\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  invite(uid, mode) {\n    return this.setMeta({\n      sub: {\n        user: uid,\n        mode: mode\n      }\n    });\n  }\n  /**\n   * Archive or un-archive the topic. Wrapper for {@link Tinode#setMeta}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {boolean} arch - true to archive the topic, false otherwise.\n   *\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  archive(arch) {\n    if (this.private && (!this.private.arch == !arch)) {\n      return Promise.resolve(arch);\n    }\n    return this.setMeta({\n      desc: {\n        private: {\n          arch: arch ? true : Const.DEL_CHAR\n        }\n      }\n    });\n  }\n  /**\n   * Delete messages. Hard-deleting messages requires Owner permission.\n   * Wrapper for {@link Tinode#delMessages}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {Tinode.DelRange[]} ranges - Ranges of message IDs to delete.\n   * @param {boolean=} hard - Hard or soft delete\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  delMessages(ranges, hard) {\n    if (!this._attached) {\n      return Promise.reject(new Error(\"Cannot delete messages in inactive topic\"));\n    }\n\n    // Sort ranges in accending order by low, the descending by hi.\n    ranges.sort((r1, r2) => {\n      if (r1.low < r2.low) {\n        return true;\n      }\n      if (r1.low == r2.low) {\n        return !r2.hi || (r1.hi >= r2.hi);\n      }\n      return false;\n    });\n\n    // Remove pending messages from ranges possibly clipping some ranges.\n    let tosend = ranges.reduce((out, r) => {\n      if (r.low < Const.LOCAL_SEQID) {\n        if (!r.hi || r.hi < Const.LOCAL_SEQID) {\n          out.push(r);\n        } else {\n          // Clip hi to max allowed value.\n          out.push({\n            low: r.low,\n            hi: this._maxSeq + 1\n          });\n        }\n      }\n      return out;\n    }, []);\n\n    // Send {del} message, return promise\n    let result;\n    if (tosend.length > 0) {\n      result = this._tinode.delMessages(this.name, tosend, hard);\n    } else {\n      result = Promise.resolve({\n        params: {\n          del: 0\n        }\n      });\n    }\n    // Update local cache.\n    return result.then(ctrl => {\n      if (ctrl.params.del > this._maxDel) {\n        this._maxDel = ctrl.params.del;\n      }\n\n      ranges.forEach((r) => {\n        if (r.hi) {\n          this.flushMessageRange(r.low, r.hi);\n        } else {\n          this.flushMessage(r.low);\n        }\n      });\n\n      if (this.onData) {\n        // Calling with no parameters to indicate the messages were deleted.\n        this.onData();\n      }\n      return ctrl;\n    });\n  }\n  /**\n   * Delete all messages. Hard-deleting messages requires Deleter permission.\n   * @memberof Tinode.Topic#\n   *\n   * @param {boolean} hardDel - true if messages should be hard-deleted.\n   *\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  delMessagesAll(hardDel) {\n    if (!this._maxSeq || this._maxSeq <= 0) {\n      // There are no messages to delete.\n      return Promise.resolve();\n    }\n    return this.delMessages([{\n      low: 1,\n      hi: this._maxSeq + 1,\n      _all: true\n    }], hardDel);\n  }\n\n  /**\n   * Delete multiple messages defined by their IDs. Hard-deleting messages requires Deleter permission.\n   * @memberof Tinode.Topic#\n   *\n   * @param {Array.<number>} list - list of seq IDs to delete.\n   * @param {boolean=} hardDel - true if messages should be hard-deleted.\n   *\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  delMessagesList(list, hardDel) {\n    // Sort the list in ascending order\n    list.sort((a, b) => a - b);\n    // Convert the array of IDs to ranges.\n    let ranges = list.reduce((out, id) => {\n      if (out.length == 0) {\n        // First element.\n        out.push({\n          low: id\n        });\n      } else {\n        let prev = out[out.length - 1];\n        if ((!prev.hi && (id != prev.low + 1)) || (id > prev.hi)) {\n          // New range.\n          out.push({\n            low: id\n          });\n        } else {\n          // Expand existing range.\n          prev.hi = prev.hi ? Math.max(prev.hi, id + 1) : id + 1;\n        }\n      }\n      return out;\n    }, []);\n    // Send {del} message, return promise\n    return this.delMessages(ranges, hardDel);\n  }\n\n  /**\n   * Delete original message and edited variants. Hard-deleting messages requires Deleter permission.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} seq - original seq ID of the message to delete.\n   * @param {boolean=} hardDel - true if messages should be hard-deleted.\n   *\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to the request.\n   */\n  delMessagesEdits(seq, hardDel) {\n    const list = [seq];\n    this.messageVersions(seq, msg => list.push(msg.seq));\n    // Send {del} message, return promise\n    return this.delMessagesList(list, hardDel);\n  }\n\n  /**\n   * Delete topic. Requires Owner permission. Wrapper for {@link Tinode#delTopic}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {boolean} hard - had-delete topic.\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to the request.\n   */\n  delTopic(hard) {\n    if (this._deleted) {\n      // The topic is already deleted at the server, just remove from DB.\n      this._gone();\n      return Promise.resolve(null);\n    }\n\n    return this._tinode.delTopic(this.name, hard).then(ctrl => {\n      this._deleted = true;\n      this._resetSub();\n      this._gone();\n      return ctrl;\n    });\n  }\n  /**\n   * Delete subscription. Requires Share permission. Wrapper for {@link Tinode#delSubscription}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {string} user - ID of the user to remove subscription for.\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  delSubscription(user) {\n    if (!this._attached) {\n      return Promise.reject(new Error(\"Cannot delete subscription in inactive topic\"));\n    }\n    // Send {del} message, return promise\n    return this._tinode.delSubscription(this.name, user).then(ctrl => {\n      // Remove the object from the subscription cache;\n      delete this._users[user];\n      // Notify listeners\n      if (this.onSubsUpdated) {\n        this.onSubsUpdated(Object.keys(this._users));\n      }\n      return ctrl;\n    });\n  }\n  /**\n   * Send a read/recv notification.\n   * @memberof Tinode.Topic#\n   *\n   * @param {string} what - what notification to send: <code>recv</code>, <code>read</code>.\n   * @param {number} seq - ID or the message read or received.\n   */\n  note(what, seq) {\n    if (!this._attached) {\n      // Cannot sending {note} on an inactive topic\".\n      return;\n    }\n\n    // Update local cache with the new count.\n    const user = this._users[this._tinode.getCurrentUserID()];\n    let update = false;\n    if (user) {\n      // Self-subscription is found.\n      if (!user[what] || user[what] < seq) {\n        user[what] = seq;\n        update = true;\n      }\n    } else {\n      // Self-subscription is not found.\n      update = (this[what] | 0) < seq;\n    }\n\n    if (update) {\n      // Send notification to the server.\n      this._tinode.note(this.name, what, seq);\n      // Update locally cached contact with the new count.\n      this._updateMyReadRecv(what, seq);\n\n      if (this.acs != null && !this.acs.isMuted()) {\n        const me = this._tinode.getMeTopic();\n        // Sent a notification to 'me' listeners.\n        me._refreshContact(what, this);\n      }\n    }\n  }\n\n  /**\n   * Send a 'recv' receipt. Wrapper for {@link Tinode#noteRecv}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} seq - ID of the message to aknowledge.\n   */\n  noteRecv(seq) {\n    this.note('recv', seq);\n  }\n  /**\n   * Send a 'read' receipt. Wrapper for {@link Tinode#noteRead}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} seq - ID of the message to aknowledge or 0/undefined to acknowledge the latest messages.\n   */\n  noteRead(seq) {\n    seq = seq || this._maxSeq;\n    if (seq > 0) {\n      this.note('read', seq);\n    }\n  }\n  /**\n   * Send a key-press notification. Wrapper for {@link Tinode#noteKeyPress}.\n   * @memberof Tinode.Topic#\n   */\n  noteKeyPress() {\n    if (this._attached) {\n      this._tinode.noteKeyPress(this.name);\n    } else {\n      this._tinode.logger(\"INFO: Cannot send notification in inactive topic\");\n    }\n  }\n  /**\n   * Send a notification than a video or audio message is . Wrapper for {@link Tinode#noteKeyPress}.\n   * @memberof Tinode.Topic#\n   * @param audioOnly - true if the recording is audio-only, false if it's a video recording.\n   */\n  noteRecording(audioOnly) {\n    if (this._attached) {\n      this._tinode.noteKeyPress(this.name, audioOnly ? 'kpa' : 'kpv');\n    } else {\n      this._tinode.logger(\"INFO: Cannot send notification in inactive topic\");\n    }\n  }\n\n  /**\n   * Send a {note what='call'}. Wrapper for {@link Tinode#videoCall}.\n   * @memberof Tinode#\n   *\n   * @param {string} evt - Call event.\n   * @param {int} seq - ID of the call message the event pertains to.\n   * @param {string} payload - Payload associated with this event (e.g. SDP string).\n   *\n   * @returns {Promise} Promise (for some call events) which will\n   *                    be resolved/rejected on receiving server reply\n   */\n  videoCall(evt, seq, payload) {\n    if (!this._attached && !['ringing', 'hang-up'].includes(evt)) {\n      // Cannot {call} on an inactive topic\".\n      return;\n    }\n    return this._tinode.videoCall(this.name, seq, evt, payload);\n  }\n\n  // Update cached read/recv/unread counts for the current user.\n  _updateMyReadRecv(what, seq, ts) {\n    let oldVal, doUpdate = false;\n\n    seq = seq | 0;\n    this.seq = this.seq | 0;\n    this.read = this.read | 0;\n    this.recv = this.recv | 0;\n    switch (what) {\n      case 'recv':\n        oldVal = this.recv;\n        this.recv = Math.max(this.recv, seq);\n        doUpdate = (oldVal != this.recv);\n        break;\n      case 'read':\n        oldVal = this.read;\n        this.read = Math.max(this.read, seq);\n        doUpdate = (oldVal != this.read);\n        break;\n      case 'msg':\n        oldVal = this.seq;\n        this.seq = Math.max(this.seq, seq);\n        if (!this.touched || this.touched < ts) {\n          this.touched = ts;\n        }\n        doUpdate = (oldVal != this.seq);\n        break;\n    }\n\n    // Sanity checks.\n    if (this.recv < this.read) {\n      this.recv = this.read;\n      doUpdate = true;\n    }\n    if (this.seq < this.recv) {\n      this.seq = this.recv;\n      if (!this.touched || this.touched < ts) {\n        this.touched = ts;\n      }\n      doUpdate = true;\n    }\n    this.unread = this.seq - this.read;\n    return doUpdate;\n  }\n  /**\n   * Get user description from global cache. The user does not need to be a\n   * subscriber of this topic.\n   * @memberof Tinode.Topic#\n   *\n   * @param {string} uid - ID of the user to fetch.\n   * @return {Object} user description or undefined.\n   */\n  userDesc(uid) {\n    // TODO: handle asynchronous requests\n    const user = this._cacheGetUser(uid);\n    if (user) {\n      return user; // Promise.resolve(user)\n    }\n  }\n  /**\n   * Get description of the p2p peer from subscription cache.\n   * @memberof Tinode.Topic#\n   *\n   * @return {Object} peer's description or undefined.\n   */\n  p2pPeerDesc() {\n    if (!this.isP2PType()) {\n      return undefined;\n    }\n    return this._users[this.name];\n  }\n  /**\n   * Iterate over cached subscribers. If callback is undefined, use this.onMetaSub.\n   * @memberof Tinode.Topic#\n   *\n   * @param {function} callback - Callback which will receive subscribers one by one.\n   * @param {Object=} context - Value of `this` inside the `callback`.\n   */\n  subscribers(callback, context) {\n    const cb = (callback || this.onMetaSub);\n    if (cb) {\n      for (let idx in this._users) {\n        cb.call(context, this._users[idx], idx, this._users);\n      }\n    }\n  }\n  /**\n   * Get a copy of cached tags.\n   * @memberof Tinode.Topic#\n   *\n   * @return {Array.<string>} a copy of tags\n   */\n  tags() {\n    // Return a copy.\n    return this._tags.slice(0);\n  }\n  /**\n   * Get cached subscription for the given user ID.\n   * @memberof Tinode.Topic#\n   *\n   * @param {string} uid - id of the user to query for\n   * @return user description or undefined.\n   */\n  subscriber(uid) {\n    return this._users[uid];\n  }\n  /**\n   * Iterate over versions of a message: call <code>callback</code> for each version (excluding original).\n   * If <code>callback</code> is undefined, does nothing.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} origSeq - seq ID of the original message.\n   * @param {Tinode.ForEachCallbackType} callback - Callback which will receive messages one by one. See {@link Tinode.CBuffer#forEach}\n   * @param {Object} context - Value of `this` inside the `callback`.\n   */\n  messageVersions(origSeq, callback, context) {\n    if (!callback) {\n      // No callback? We are done then.\n      return;\n    }\n    const versions = this._messageVersions[origSeq];\n    if (!versions) {\n      return;\n    }\n    versions.forEach(callback, undefined, undefined, context);\n  }\n  /**\n   * Iterate over cached messages: call <code>callback</code> for each message in the range [sinceIdx, beforeIdx).\n   * If <code>callback</code> is undefined, use <code>this.onData</code>.\n   * @memberof Tinode.Topic#\n   *\n   * @param {Tinode.ForEachCallbackType} callback - Callback which will receive messages one by one. See {@link Tinode.CBuffer#forEach}\n   * @param {number} sinceId - Optional seqId to start iterating from (inclusive).\n   * @param {number} beforeId - Optional seqId to stop iterating before it is reached (exclusive).\n   * @param {Object} context - Value of `this` inside the `callback`.\n   */\n  messages(callback, sinceId, beforeId, context) {\n    const cb = (callback || this.onData);\n    if (cb) {\n      const startIdx = typeof sinceId == 'number' ? this._messages.find({\n        seq: sinceId\n      }, true) : undefined;\n      const beforeIdx = typeof beforeId == 'number' ? this._messages.find({\n        seq: beforeId\n      }, true) : undefined;\n      if (startIdx != -1 && beforeIdx != -1) {\n        // Step 1. Filter out all replacement messages and\n        // save displayable messages in a temporary buffer.\n        let msgs = [];\n        this._messages.forEach((msg, unused1, unused2, i) => {\n          if (this._isReplacementMsg(msg)) {\n            // Skip replacements.\n            return;\n          }\n          // In case the massage was edited, replace timestamp of the version with the original's timestamp.\n          const latest = this.latestMsgVersion(msg.seq) || msg;\n          if (!latest._origTs) {\n            latest._origTs = latest.ts;\n            latest._origSeq = latest.seq;\n            latest.ts = msg.ts;\n            latest.seq = msg.seq;\n          }\n          msgs.push({\n            data: latest,\n            idx: i\n          });\n        }, startIdx, beforeIdx, {});\n        // Step 2. Loop over displayble messages invoking cb on each of them.\n        msgs.forEach((val, i) => {\n          cb.call(context, val.data,\n            (i > 0 ? msgs[i - 1].data : undefined),\n            (i < msgs.length - 1 ? msgs[i + 1].data : undefined), val.idx);\n        });\n      }\n    }\n  }\n  /**\n   * Get the message from cache by <code>seq</code>.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} seq - message seqId to search for.\n   * @returns {Object} the message with the given <code>seq</code> or <code>undefined</code>, if no such message is found.\n   */\n  findMessage(seq) {\n    const idx = this._messages.find({\n      seq: seq\n    });\n    if (idx >= 0) {\n      return this._messages.getAt(idx);\n    }\n    return undefined;\n  }\n  /**\n   * Get the most recent message from cache. This method counts all messages, including deleted ranges.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {Object} the most recent cached message or <code>undefined</code>, if no messages are cached.\n   */\n  latestMessage() {\n    return this._messages.getLast();\n  }\n  /**\n   * Get the latest version for message.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} seq - original seq ID of the message.\n   * @returns {Object} the latest version of the message or null if message not found.\n   */\n  latestMsgVersion(seq) {\n    const versions = this._messageVersions[seq];\n    return versions ? versions.getLast() : null;\n  }\n  /**\n   * Get the maximum cached seq ID.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {number} the greatest seq ID in cache.\n   */\n  maxMsgSeq() {\n    return this._maxSeq;\n  }\n  /**\n   * Get the minimum cached seq ID.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {number} the smallest seq ID in cache or 0.\n   */\n  minMsgSeq() {\n    return this._minSeq;\n  }\n  /**\n   * Get the maximum deletion ID.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {number} the greatest deletion ID.\n   */\n  maxClearId() {\n    return this._maxDel;\n  }\n  /**\n   * Get the number of messages in the cache.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {number} count of cached messages.\n   */\n  messageCount() {\n    return this._messages.length();\n  }\n  /**\n   * Iterate over cached unsent messages. Wraps {@link Tinode.Topic#messages}.\n   * @memberof Tinode.Topic#\n   *\n   * @param {function} callback - Callback which will receive messages one by one. See {@link Tinode.CBuffer#forEach}\n   * @param {Object} context - Value of <code>this</code> inside the <code>callback</code>.\n   */\n  queuedMessages(callback, context) {\n    if (!callback) {\n      throw new Error(\"Callback must be provided\");\n    }\n    this.messages(callback, Const.LOCAL_SEQID, undefined, context);\n  }\n  /**\n   * Get the number of topic subscribers who marked this message as either recv or read\n   * Current user is excluded from the count.\n   * @memberof Tinode.Topic#\n   *\n   * @param {string} what - what action to consider: received <code>\"recv\"</code> or read <code>\"read\"</code>.\n   * @param {number} seq - ID or the message read or received.\n   *\n   * @returns {number} the number of subscribers who marked the message with the given ID as read or received.\n   */\n  msgReceiptCount(what, seq) {\n    let count = 0;\n    if (seq > 0) {\n      const me = this._tinode.getCurrentUserID();\n      for (let idx in this._users) {\n        const user = this._users[idx];\n        if (user.user !== me && user[what] >= seq) {\n          count++;\n        }\n      }\n    }\n    return count;\n  }\n  /**\n   * Get the number of topic subscribers who marked this message (and all older messages) as read.\n   * The current user is excluded from the count.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} seq - message id to check.\n   * @returns {number} number of subscribers who claim to have received the message.\n   */\n  msgReadCount(seq) {\n    return this.msgReceiptCount('read', seq);\n  }\n  /**\n   * Get the number of topic subscribers who marked this message (and all older messages) as received.\n   * The current user is excluded from the count.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} seq - Message id to check.\n   * @returns {number} Number of subscribers who claim to have received the message.\n   */\n  msgRecvCount(seq) {\n    return this.msgReceiptCount('recv', seq);\n  }\n  /**\n   * Check if cached message IDs indicate that the server may have more messages.\n   * @memberof Tinode.Topic#\n   *\n   * @param {boolean} newer - if <code>true</code>, check for newer messages only.\n   */\n  msgHasMoreMessages(newer) {\n    return newer ? this.seq > this._maxSeq :\n      // _minSeq could be more than 1, but earlier messages could have been deleted.\n      (this._minSeq > 1 && !this._noEarlierMsgs);\n  }\n  /**\n   * Check if the given seq Id is id of the most recent message.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} seqId id of the message to check\n   */\n  isNewMessage(seqId) {\n    return this._maxSeq <= seqId;\n  }\n  /**\n   * Remove one message from local cache.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} seqId id of the message to remove from cache.\n   * @returns {Message} removed message or undefined if such message was not found.\n   */\n  flushMessage(seqId) {\n    const idx = this._messages.find({\n      seq: seqId\n    });\n    delete this._messageVersions[seqId];\n    if (idx >= 0) {\n      this._tinode._db.remMessages(this.name, seqId);\n      return this._messages.delAt(idx);\n    }\n    return undefined;\n  }\n  /**\n   * Remove a range of messages from the local cache.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} fromId seq ID of the first message to remove (inclusive).\n   * @param {number} untilId seqID of the last message to remove (exclusive).\n   *\n   * @returns {Message[]} array of removed messages (could be empty).\n   */\n  flushMessageRange(fromId, untilId) {\n    // Remove range from persistent cache.\n    this._tinode._db.remMessages(this.name, fromId, untilId);\n\n    // Remove all versions keyed by IDs in the range.\n    for (let i = fromId; i < untilId; i++) {\n      delete this._messageVersions[i];\n    }\n\n    // start, end: find insertion points (nearest == true).\n    const since = this._messages.find({\n      seq: fromId\n    }, true);\n    return since >= 0 ? this._messages.delRange(since, this._messages.find({\n      seq: untilId\n    }, true)) : [];\n  }\n  /**\n   * Update message's seqId.\n   * @memberof Tinode.Topic#\n   *\n   * @param {Object} pub message object.\n   * @param {number} newSeqId new seq id for pub.\n   */\n  swapMessageId(pub, newSeqId) {\n    const idx = this._messages.find(pub);\n    const numMessages = this._messages.length();\n    if (0 <= idx && idx < numMessages) {\n      // Remove message with the old seq ID.\n      this._messages.delAt(idx);\n      this._tinode._db.remMessages(this.name, pub.seq);\n      // Add message with the new seq ID.\n      pub.seq = newSeqId;\n      this._messages.put(pub);\n      this._tinode._db.addMessage(pub);\n    }\n  }\n  /**\n   * Attempt to stop message from being sent.\n   * @memberof Tinode.Topic#\n   *\n   * @param {number} seqId id of the message to stop sending and remove from cache.\n   *\n   * @returns {boolean} <code>true</code> if message was cancelled, <code>false</code> otherwise.\n   */\n  cancelSend(seqId) {\n    const idx = this._messages.find({\n      seq: seqId\n    });\n    if (idx >= 0) {\n      const msg = this._messages.getAt(idx);\n      const status = this.msgStatus(msg);\n      if (status == Const.MESSAGE_STATUS_QUEUED ||\n        status == Const.MESSAGE_STATUS_FAILED ||\n        status == Const.MESSAGE_STATUS_FATAL) {\n        this._tinode._db.remMessages(this.name, seqId);\n        msg._cancelled = true;\n        this._messages.delAt(idx);\n        if (this.onData) {\n          // Calling with no parameters to indicate the message was deleted.\n          this.onData();\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n  /**\n   * Get type of the topic: me, p2p, grp, fnd...\n   * @memberof Tinode.Topic#\n   *\n   * @returns {string} One of 'me', 'p2p', 'grp', 'fnd', 'sys' or <code>undefined</code>.\n   */\n  getType() {\n    return Topic.topicType(this.name);\n  }\n  /**\n   * Get current user's access mode of the topic.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {Tinode.AccessMode} - user's access mode\n   */\n  getAccessMode() {\n    return this.acs;\n  }\n  /**\n   * Set current user's access mode of the topic.\n   * @memberof Tinode.Topic#\n   *\n   * @param {AccessMode | Object} acs - access mode to set.\n   */\n  setAccessMode(acs) {\n    return this.acs = new AccessMode(acs);\n  }\n  /**\n   * Get topic's default access mode.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {Tinode.DefAcs} - access mode, such as {auth: `RWP`, anon: `N`}.\n   */\n  getDefaultAccess() {\n    return this.defacs;\n  }\n  /**\n   * Initialize new meta {@link Tinode.GetQuery} builder. The query is attched to the current topic.\n   * It will not work correctly if used with a different topic.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {Tinode.MetaGetBuilder} query attached to the current topic.\n   */\n  startMetaQuery() {\n    return new MetaGetBuilder(this);\n  }\n  /**\n   * Check if topic is archived, i.e. private.arch == true.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {boolean} - <code>true</code> if topic is archived, <code>false</code> otherwise.\n   */\n  isArchived() {\n    return this.private && !!this.private.arch;\n  }\n  /**\n   * Check if topic is a 'me' topic.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {boolean} - <code>true</code> if topic is a 'me' topic, <code>false</code> otherwise.\n   */\n  isMeType() {\n    return Topic.isMeTopicName(this.name);\n  }\n  /**\n   * Check if topic is a channel.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {boolean} - <code>true</code> if topic is a channel, <code>false</code> otherwise.\n   */\n  isChannelType() {\n    return Topic.isChannelTopicName(this.name);\n  }\n  /**\n   * Check if topic is a group topic.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {boolean} - <code>true</code> if topic is a group, <code>false</code> otherwise.\n   */\n  isGroupType() {\n    return Topic.isGroupTopicName(this.name);\n  }\n  /**\n   * Check if topic is a p2p topic.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {boolean} - <code>true</code> if topic is a p2p topic, <code>false</code> otherwise.\n   */\n  isP2PType() {\n    return Topic.isP2PTopicName(this.name);\n  }\n  /**\n   * Check if topic is a communication topic, i.e. a group or p2p topic.\n   * @memberof Tinode.Topic#\n   *\n   * @returns {boolean} - <code>true</code> if topic is a p2p or group topic, <code>false</code> otherwise.\n   */\n  isCommType() {\n    return Topic.isCommTopicName(this.name);\n  }\n  /**\n   * Get status (queued, sent, received etc) of a given message in the context\n   * of this topic.\n   * @memberof Tinode.Topic#\n   *\n   * @param {Message} msg - message to check for status.\n   * @param {boolean} upd - update chached message status.\n   *\n   * @returns message status constant.\n   */\n  msgStatus(msg, upd) {\n    let status = Const.MESSAGE_STATUS_NONE;\n    if (this._tinode.isMe(msg.from)) {\n      if (msg._sending) {\n        status = Const.MESSAGE_STATUS_SENDING;\n      } else if (msg._fatal || msg._cancelled) {\n        status = Const.MESSAGE_STATUS_FATAL;\n      } else if (msg._failed) {\n        status = Const.MESSAGE_STATUS_FAILED;\n      } else if (msg.seq >= Const.LOCAL_SEQID) {\n        status = Const.MESSAGE_STATUS_QUEUED;\n      } else if (this.msgReadCount(msg.seq) > 0) {\n        status = Const.MESSAGE_STATUS_READ;\n      } else if (this.msgRecvCount(msg.seq) > 0) {\n        status = Const.MESSAGE_STATUS_RECEIVED;\n      } else if (msg.seq > 0) {\n        status = Const.MESSAGE_STATUS_SENT;\n      }\n    } else {\n      status = Const.MESSAGE_STATUS_TO_ME;\n    }\n\n    if (upd && msg._status != status) {\n      msg._status = status;\n      this._tinode._db.updMessageStatus(this.name, msg.seq, status);\n    }\n\n    return status;\n  }\n\n  // Returns true if pub is meant to replace another message (e.g. original message was edited).\n  _isReplacementMsg(pub) {\n    return pub.head && pub.head.replace;\n  }\n\n  // If msg is a replacement for another message, save the msg in the message versions cache\n  // as a newer version for the message it's supposed to replace.\n  _maybeUpdateMessageVersionsCache(msg) {\n    if (!this._isReplacementMsg(msg)) {\n      // Check if this message is the original in the chain of edits and if so\n      // ensure all version have the same sender.\n      if (this._messageVersions[msg.seq]) {\n        // Remove versions with different 'from'.\n        this._messageVersions[msg.seq].filter(version => version.from == msg.from);\n        if (this._messageVersions[msg.seq].isEmpty()) {\n          delete this._messageVersions[msg.seq];\n        }\n      }\n      return;\n    }\n\n    const targetSeq = parseInt(msg.head.replace.split(':')[1]);\n    if (targetSeq > msg.seq) {\n      // Substitutes are supposed to have higher seq ids.\n      return;\n    }\n    const targetMsg = this.findMessage(targetSeq);\n    if (targetMsg && targetMsg.from != msg.from) {\n      // Substitute cannot change the sender.\n      return;\n    }\n    const versions = this._messageVersions[targetSeq] || new CBuffer((a, b) => {\n      return a.seq - b.seq;\n    }, true);\n    versions.put(msg);\n    this._messageVersions[targetSeq] = versions;\n  }\n\n  // Process data message\n  _routeData(data) {\n    if (data.content) {\n      if (!this.touched || this.touched < data.ts) {\n        this.touched = data.ts;\n        this._tinode._db.updTopic(this);\n      }\n    }\n\n    if (data.seq > this._maxSeq) {\n      this._maxSeq = data.seq;\n      this.msgStatus(data, true);\n      // Ackn receiving the message.\n      clearTimeout(this._recvNotificationTimer);\n      this._recvNotificationTimer = setTimeout(_ => {\n        this._recvNotificationTimer = null;\n        this.noteRecv(this._maxSeq);\n      }, Const.RECV_TIMEOUT);\n    }\n\n    if (data.seq < this._minSeq || this._minSeq == 0) {\n      this._minSeq = data.seq;\n    }\n\n    const outgoing = ((!this.isChannelType() && !data.from) || this._tinode.isMe(data.from));\n\n    if (data.head && data.head.webrtc && data.head.mime == Drafty.getContentType() && data.content) {\n      // Rewrite VC body with info from the headers.\n      data.content = Drafty.updateVideoCall(data.content, {\n        state: data.head.webrtc,\n        duration: data.head['webrtc-duration'],\n        incoming: !outgoing,\n      });\n    }\n\n    if (!data._noForwarding) {\n      this._messages.put(data);\n      this._tinode._db.addMessage(data);\n      this._maybeUpdateMessageVersionsCache(data);\n    }\n\n    if (this.onData) {\n      this.onData(data);\n    }\n\n    // Update locally cached contact with the new message count.\n    const what = outgoing ? 'read' : 'msg';\n    this._updateMyReadRecv(what, data.seq, data.ts);\n\n    if (!outgoing && data.from) {\n      // Mark messages as read by the sender.\n      this._routeInfo({\n        what: 'read',\n        from: data.from,\n        seq: data.seq,\n        _noForwarding: true\n      });\n    }\n\n    // Notify 'me' listeners of the change.\n    this._tinode.getMeTopic()._refreshContact(what, this);\n  }\n\n  // Process metadata message\n  _routeMeta(meta) {\n    if (meta.desc) {\n      this._processMetaDesc(meta.desc);\n    }\n    if (meta.sub && meta.sub.length > 0) {\n      this._processMetaSubs(meta.sub);\n    }\n    if (meta.del) {\n      this._processDelMessages(meta.del.clear, meta.del.delseq);\n    }\n    if (meta.tags) {\n      this._processMetaTags(meta.tags);\n    }\n    if (meta.cred) {\n      this._processMetaCreds(meta.cred);\n    }\n    if (this.onMeta) {\n      this.onMeta(meta);\n    }\n  }\n  // Process presence change message\n  _routePres(pres) {\n    let user, uid;\n    switch (pres.what) {\n      case 'del':\n        // Delete cached messages.\n        this._processDelMessages(pres.clear, pres.delseq);\n        break;\n      case 'on':\n      case 'off':\n        // Update online status of a subscription.\n        user = this._users[pres.src];\n        if (user) {\n          user.online = pres.what == 'on';\n        } else {\n          this._tinode.logger(\"WARNING: Presence update for an unknown user\", this.name, pres.src);\n        }\n        break;\n      case 'term':\n        // Attachment to topic is terminated probably due to cluster rehashing.\n        this._resetSub();\n        break;\n      case 'upd':\n        // A topic subscriber has updated his description.\n        // Issue {get sub} only if the current user has no p2p topics with the updated user (p2p name is not in cache).\n        // Otherwise 'me' will issue a {get desc} request.\n        if (pres.src && !this._tinode.isTopicCached(pres.src)) {\n          this.getMeta(this.startMetaQuery().withOneSub(undefined, pres.src).build());\n        }\n        break;\n      case 'acs':\n        uid = pres.src || this._tinode.getCurrentUserID();\n        user = this._users[uid];\n        if (!user) {\n          // Update for an unknown user: notification of a new subscription.\n          const acs = new AccessMode().updateAll(pres.dacs);\n          if (acs && acs.mode != AccessMode._NONE) {\n            user = this._cacheGetUser(uid);\n            if (!user) {\n              user = {\n                user: uid,\n                acs: acs\n              };\n              this.getMeta(this.startMetaQuery().withOneSub(undefined, uid).build());\n            } else {\n              user.acs = acs;\n            }\n            user.updated = new Date();\n            this._processMetaSubs([user]);\n          }\n        } else {\n          // Known user\n          user.acs.updateAll(pres.dacs);\n          // Update user's access mode.\n          this._processMetaSubs([{\n            user: uid,\n            updated: new Date(),\n            acs: user.acs\n          }]);\n        }\n        break;\n      default:\n        this._tinode.logger(\"INFO: Ignored presence update\", pres.what);\n    }\n\n    if (this.onPres) {\n      this.onPres(pres);\n    }\n  }\n  // Process {info} message\n  _routeInfo(info) {\n    switch (info.what) {\n      case 'recv':\n      case 'read':\n        const user = this._users[info.from];\n        if (user) {\n          user[info.what] = info.seq;\n          if (user.recv < user.read) {\n            user.recv = user.read;\n          }\n        }\n        const msg = this.latestMessage();\n        if (msg) {\n          this.msgStatus(msg, true);\n        }\n\n        // If this is an update from the current user, update the cache with the new count.\n        if (this._tinode.isMe(info.from) && !info._noForwarding) {\n          this._updateMyReadRecv(info.what, info.seq);\n        }\n\n        // Notify 'me' listener of the status change.\n        this._tinode.getMeTopic()._refreshContact(info.what, this);\n        break;\n      case 'kp':\n      case 'kpa':\n      case 'kpv':\n        // Typing or audio/video recording notification. Do nothing.\n        break;\n      case 'call':\n        // Do nothing here.\n        break;\n      default:\n        this._tinode.logger(\"INFO: Ignored info update\", info.what);\n    }\n\n    if (this.onInfo) {\n      this.onInfo(info);\n    }\n  }\n  // Called by Tinode when meta.desc packet is received.\n  // Called by 'me' topic on contact update (desc._noForwarding is true).\n  _processMetaDesc(desc) {\n    if (this.isP2PType()) {\n      // Synthetic desc may include defacs for p2p topics which is useless.\n      // Remove it.\n      delete desc.defacs;\n\n      // Update to p2p desc is the same as user update. Update cached user.\n      this._tinode._db.updUser(this.name, desc.public);\n    }\n\n    // Copy parameters from desc object to this topic.\n    mergeObj(this, desc);\n    // Update persistent cache.\n    this._tinode._db.updTopic(this);\n\n    // Notify 'me' listener, if available:\n    if (this.name !== Const.TOPIC_ME && !desc._noForwarding) {\n      const me = this._tinode.getMeTopic();\n      if (me.onMetaSub) {\n        me.onMetaSub(this);\n      }\n      if (me.onSubsUpdated) {\n        me.onSubsUpdated([this.name], 1);\n      }\n    }\n\n    if (this.onMetaDesc) {\n      this.onMetaDesc(this);\n    }\n  }\n  // Called by Tinode when meta.sub is recived or in response to received\n  // {ctrl} after setMeta-sub.\n  _processMetaSubs(subs) {\n    for (let idx in subs) {\n      const sub = subs[idx];\n\n      // Fill defaults.\n      sub.online = !!sub.online;\n      // Update timestamp of the most recent subscription update.\n      this._lastSubsUpdate = new Date(Math.max(this._lastSubsUpdate, sub.updated));\n\n      let user = null;\n      if (!sub.deleted) {\n        // If this is a change to user's own permissions, update them in topic too.\n        // Desc will update 'me' topic.\n        if (this._tinode.isMe(sub.user) && sub.acs) {\n          this._processMetaDesc({\n            updated: sub.updated,\n            touched: sub.touched,\n            acs: sub.acs\n          });\n        }\n        user = this._updateCachedUser(sub.user, sub);\n      } else {\n        // Subscription is deleted, remove it from topic (but leave in Users cache)\n        delete this._users[sub.user];\n        user = sub;\n      }\n\n      if (this.onMetaSub) {\n        this.onMetaSub(user);\n      }\n    }\n\n    if (this.onSubsUpdated) {\n      this.onSubsUpdated(Object.keys(this._users));\n    }\n  }\n  // Called by Tinode when meta.tags is recived.\n  _processMetaTags(tags) {\n    if (tags.length == 1 && tags[0] == Const.DEL_CHAR) {\n      tags = [];\n    }\n    this._tags = tags;\n    if (this.onTagsUpdated) {\n      this.onTagsUpdated(tags);\n    }\n  }\n  // Do nothing for topics other than 'me'\n  _processMetaCreds(creds) {}\n  // Delete cached messages and update cached transaction IDs\n  _processDelMessages(clear, delseq) {\n    this._maxDel = Math.max(clear, this._maxDel);\n    this.clear = Math.max(clear, this.clear);\n    const topic = this;\n    let count = 0;\n    if (Array.isArray(delseq)) {\n      delseq.forEach(function(range) {\n        if (!range.hi) {\n          count++;\n          topic.flushMessage(range.low);\n        } else {\n          for (let i = range.low; i < range.hi; i++) {\n            count++;\n            topic.flushMessage(i);\n          }\n        }\n      });\n    }\n\n    if (count > 0) {\n      // this._updateDeletedRanges();\n\n      if (this.onData) {\n        this.onData();\n      }\n    }\n  }\n  // Topic is informed that the entire response to {get what=data} has been received.\n  _allMessagesReceived(count) {\n\n    if (this.onAllMessagesReceived) {\n      this.onAllMessagesReceived(count);\n    }\n  }\n  // Reset subscribed state\n  _resetSub() {\n    this._attached = false;\n  }\n  // This topic is either deleted or unsubscribed from.\n  _gone() {\n    this._messages.reset();\n    this._tinode._db.remMessages(this.name);\n    this._users = {};\n    this.acs = new AccessMode(null);\n    this.private = null;\n    this.public = null;\n    this.trusted = null;\n    this._maxSeq = 0;\n    this._minSeq = 0;\n    this._attached = false;\n\n    const me = this._tinode.getMeTopic();\n    if (me) {\n      me._routePres({\n        _noForwarding: true,\n        what: 'gone',\n        topic: Const.TOPIC_ME,\n        src: this.name\n      });\n    }\n    if (this.onDeleteTopic) {\n      this.onDeleteTopic();\n    }\n  }\n  // Update global user cache and local subscribers cache.\n  // Don't call this method for non-subscribers.\n  _updateCachedUser(uid, obj) {\n    // Fetch user object from the global cache.\n    // This is a clone of the stored object\n    let cached = this._cacheGetUser(uid);\n    cached = mergeObj(cached || {}, obj);\n    // Save to global cache\n    this._cachePutUser(uid, cached);\n    // Save to the list of topic subsribers.\n    return mergeToCache(this._users, uid, cached);\n  }\n  // Get local seqId for a queued message.\n  _getQueuedSeqId() {\n    return this._queuedSeqId++;\n  }\n\n  // Load most recent messages from persistent cache.\n  _loadMessages(db, params) {\n    const {\n      since,\n      before,\n      limit\n    } = params || {};\n    return db.readMessages(this.name, {\n        since: since,\n        before: before,\n        limit: limit || Const.DEFAULT_MESSAGES_PAGE\n      })\n      .then(msgs => {\n        msgs.forEach((data) => {\n          if (data.seq > this._maxSeq) {\n            this._maxSeq = data.seq;\n          }\n          if (data.seq < this._minSeq || this._minSeq == 0) {\n            this._minSeq = data.seq;\n          }\n          this._messages.put(data);\n          this._maybeUpdateMessageVersionsCache(data);\n        });\n        return msgs.length;\n      });\n  }\n  // Push or {pres}: message received.\n  _updateReceived(seq, act) {\n    this.touched = new Date();\n    this.seq = seq | 0;\n    // Check if message is sent by the current user. If so it's been read already.\n    if (!act || this._tinode.isMe(act)) {\n      this.read = this.read ? Math.max(this.read, this.seq) : this.seq;\n      this.recv = this.recv ? Math.max(this.read, this.recv) : this.read;\n    }\n    this.unread = this.seq - (this.read | 0);\n    this._tinode._db.updTopic(this);\n  }\n}\n\n/**\n * @class TopicMe - special case of {@link Tinode.Topic} for\n * managing data of the current user, including contact list.\n * @extends Tinode.Topic\n * @memberof Tinode\n *\n * @param {TopicMe.Callbacks} callbacks - Callbacks to receive various events.\n */\nexport class TopicMe extends Topic {\n  onContactUpdate;\n\n  constructor(callbacks) {\n    super(Const.TOPIC_ME, callbacks);\n\n    // me-specific callbacks\n    if (callbacks) {\n      this.onContactUpdate = callbacks.onContactUpdate;\n    }\n  }\n\n  // Override the original Topic._processMetaDesc.\n  _processMetaDesc(desc) {\n    // Check if online contacts need to be turned off because P permission was removed.\n    const turnOff = (desc.acs && !desc.acs.isPresencer()) && (this.acs && this.acs.isPresencer());\n\n    // Copy parameters from desc object to this topic.\n    mergeObj(this, desc);\n    this._tinode._db.updTopic(this);\n    // Update current user's record in the global cache.\n    this._updateCachedUser(this._tinode._myUID, desc);\n\n    // 'P' permission was removed. All topics are offline now.\n    if (turnOff) {\n      this._tinode.mapTopics((cont) => {\n        if (cont.online) {\n          cont.online = false;\n          cont.seen = Object.assign(cont.seen || {}, {\n            when: new Date()\n          });\n          this._refreshContact('off', cont);\n        }\n      });\n    }\n\n    if (this.onMetaDesc) {\n      this.onMetaDesc(this);\n    }\n  }\n\n  // Override the original Topic._processMetaSubs\n  _processMetaSubs(subs) {\n    let updateCount = 0;\n    subs.forEach((sub) => {\n      const topicName = sub.topic;\n      // Don't show 'me' and 'fnd' topics in the list of contacts.\n      if (topicName == Const.TOPIC_FND || topicName == Const.TOPIC_ME) {\n        return;\n      }\n      sub.online = !!sub.online;\n\n      let cont = null;\n      if (sub.deleted) {\n        cont = sub;\n        this._tinode.cacheRemTopic(topicName);\n        this._tinode._db.remTopic(topicName);\n      } else {\n        // Ensure the values are defined and are integers.\n        if (typeof sub.seq != 'undefined') {\n          sub.seq = sub.seq | 0;\n          sub.recv = sub.recv | 0;\n          sub.read = sub.read | 0;\n          sub.unread = sub.seq - sub.read;\n        }\n\n        const topic = this._tinode.getTopic(topicName);\n        if (topic._new) {\n          delete topic._new;\n        }\n\n        cont = mergeObj(topic, sub);\n        this._tinode._db.updTopic(cont);\n\n        if (Topic.isP2PTopicName(topicName)) {\n          this._cachePutUser(topicName, cont);\n          this._tinode._db.updUser(topicName, cont.public);\n        }\n        // Notify topic of the update if it's an external update.\n        if (!sub._noForwarding && topic) {\n          sub._noForwarding = true;\n          topic._processMetaDesc(sub);\n        }\n      }\n\n      updateCount++;\n\n      if (this.onMetaSub) {\n        this.onMetaSub(cont);\n      }\n    });\n\n    if (this.onSubsUpdated && updateCount > 0) {\n      const keys = [];\n      subs.forEach((s) => {\n        keys.push(s.topic);\n      });\n      this.onSubsUpdated(keys, updateCount);\n    }\n  }\n\n  // Called by Tinode when meta.sub is recived.\n  _processMetaCreds(creds, upd) {\n    if (creds.length == 1 && creds[0] == Const.DEL_CHAR) {\n      creds = [];\n    }\n    if (upd) {\n      creds.forEach((cr) => {\n        if (cr.val) {\n          // Adding a credential.\n          let idx = this._credentials.findIndex((el) => {\n            return el.meth == cr.meth && el.val == cr.val;\n          });\n          if (idx < 0) {\n            // Not found.\n            if (!cr.done) {\n              // Unconfirmed credential replaces previous unconfirmed credential of the same method.\n              idx = this._credentials.findIndex((el) => {\n                return el.meth == cr.meth && !el.done;\n              });\n              if (idx >= 0) {\n                // Remove previous unconfirmed credential.\n                this._credentials.splice(idx, 1);\n              }\n            }\n            this._credentials.push(cr);\n          } else {\n            // Found. Maybe change 'done' status.\n            this._credentials[idx].done = cr.done;\n          }\n        } else if (cr.resp) {\n          // Handle credential confirmation.\n          const idx = this._credentials.findIndex((el) => {\n            return el.meth == cr.meth && !el.done;\n          });\n          if (idx >= 0) {\n            this._credentials[idx].done = true;\n          }\n        }\n      });\n    } else {\n      this._credentials = creds;\n    }\n    if (this.onCredsUpdated) {\n      this.onCredsUpdated(this._credentials);\n    }\n  }\n\n  // Process presence change message\n  _routePres(pres) {\n    if (pres.what == 'term') {\n      // The 'me' topic itself is detached. Mark as unsubscribed.\n      this._resetSub();\n      return;\n    }\n\n    if (pres.what == 'upd' && pres.src == Const.TOPIC_ME) {\n      // Update to me's description. Request updated value.\n      this.getMeta(this.startMetaQuery().withDesc().build());\n      return;\n    }\n\n    const cont = this._tinode.cacheGetTopic(pres.src);\n    if (cont) {\n      switch (pres.what) {\n        case 'on': // topic came online\n          cont.online = true;\n          break;\n        case 'off': // topic went offline\n          if (cont.online) {\n            cont.online = false;\n            cont.seen = Object.assign(cont.seen || {}, {\n              when: new Date()\n            });\n          }\n          break;\n        case 'msg': // new message received\n          cont._updateReceived(pres.seq, pres.act);\n          break;\n        case 'upd': // desc updated\n          // Request updated subscription.\n          this.getMeta(this.startMetaQuery().withLaterOneSub(pres.src).build());\n          break;\n        case 'acs': // access mode changed\n          // If 'tgt' is not set then this is an update to the permissions of the current user.\n          // Otherwise it's an update to group topic subscriber permissions while the topic is offline.\n          // Just gnore it then.\n          if (!pres.tgt) {\n            if (cont.acs) {\n              cont.acs.updateAll(pres.dacs);\n            } else {\n              cont.acs = new AccessMode().updateAll(pres.dacs);\n            }\n            cont.touched = new Date();\n          }\n          break;\n        case 'ua':\n          // user agent changed.\n          cont.seen = {\n            when: new Date(),\n            ua: pres.ua\n          };\n          break;\n        case 'recv':\n          // user's other session marked some messges as received.\n          pres.seq = pres.seq | 0;\n          cont.recv = cont.recv ? Math.max(cont.recv, pres.seq) : pres.seq;\n          break;\n        case 'read':\n          // user's other session marked some messages as read.\n          pres.seq = pres.seq | 0;\n          cont.read = cont.read ? Math.max(cont.read, pres.seq) : pres.seq;\n          cont.recv = cont.recv ? Math.max(cont.read, cont.recv) : cont.recv;\n          cont.unread = cont.seq - cont.read;\n          break;\n        case 'gone':\n          // topic deleted or unsubscribed from.\n          this._tinode.cacheRemTopic(pres.src);\n          if (!cont._deleted) {\n            cont._deleted = true;\n            cont._attached = false;\n            this._tinode._db.markTopicAsDeleted(pres.src, true);\n          } else {\n            this._tinode._db.remTopic(pres.src);\n          }\n          break;\n        case 'del':\n          // Update topic.del value.\n          break;\n        default:\n          this._tinode.logger(\"INFO: Unsupported presence update in 'me'\", pres.what);\n      }\n\n      this._refreshContact(pres.what, cont);\n    } else {\n      if (pres.what == 'acs') {\n        // New subscriptions and deleted/banned subscriptions have full\n        // access mode (no + or - in the dacs string). Changes to known subscriptions are sent as\n        // deltas, but they should not happen here.\n        const acs = new AccessMode(pres.dacs);\n        if (!acs || acs.mode == AccessMode._INVALID) {\n          this._tinode.logger(\"ERROR: Invalid access mode update\", pres.src, pres.dacs);\n          return;\n        } else if (acs.mode == AccessMode._NONE) {\n          this._tinode.logger(\"WARNING: Removing non-existent subscription\", pres.src, pres.dacs);\n          return;\n        } else {\n          // New subscription. Send request for the full description.\n          // Using .withOneSub (not .withLaterOneSub) to make sure IfModifiedSince is not set.\n          this.getMeta(this.startMetaQuery().withOneSub(undefined, pres.src).build());\n          // Create a dummy entry to catch online status update.\n          const dummy = this._tinode.getTopic(pres.src);\n          dummy.online = false;\n          dummy.acs = acs;\n          this._tinode._db.updTopic(dummy);\n        }\n      } else if (pres.what == 'tags') {\n        this.getMeta(this.startMetaQuery().withTags().build());\n      } else if (pres.what == 'msg') {\n        // Message received for un unknown (previously deleted) topic.\n        this.getMeta(this.startMetaQuery().withOneSub(undefined, pres.src).build());\n        // Create an entry to catch updates and messages.\n        const dummy = this._tinode.getTopic(pres.src);\n        dummy._deleted = false;\n        this._tinode._db.updTopic(dummy);\n      }\n\n      this._refreshContact(pres.what, cont);\n    }\n\n    if (this.onPres) {\n      this.onPres(pres);\n    }\n  }\n\n  // Contact is updated, execute callbacks.\n  _refreshContact(what, cont) {\n    if (this.onContactUpdate) {\n      this.onContactUpdate(what, cont);\n    }\n  }\n\n  /**\n   * Publishing to TopicMe is not supported. {@link Topic#publish} is overriden and thows an {Error} if called.\n   * @memberof Tinode.TopicMe#\n   * @throws {Error} Always throws an error.\n   */\n  publish() {\n    return Promise.reject(new Error(\"Publishing to 'me' is not supported\"));\n  }\n\n  /**\n   * Delete validation credential.\n   * @memberof Tinode.TopicMe#\n   *\n   * @param {string} topic - Name of the topic to delete\n   * @param {string} user - User ID to remove.\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  delCredential(method, value) {\n    if (!this._attached) {\n      return Promise.reject(new Error(\"Cannot delete credential in inactive 'me' topic\"));\n    }\n    // Send {del} message, return promise\n    return this._tinode.delCredential(method, value).then(ctrl => {\n      // Remove deleted credential from the cache.\n      const index = this._credentials.findIndex((el) => {\n        return el.meth == method && el.val == value;\n      });\n      if (index > -1) {\n        this._credentials.splice(index, 1);\n      }\n      // Notify listeners\n      if (this.onCredsUpdated) {\n        this.onCredsUpdated(this._credentials);\n      }\n      return ctrl;\n    });\n  }\n\n  /**\n   * @callback contactFilter\n   * @param {Object} contact to check for inclusion.\n   * @returns {boolean} <code>true</code> if contact should be processed, <code>false</code> to exclude it.\n   */\n  /**\n   * Iterate over cached contacts.\n   *\n   * @function\n   * @memberof Tinode.TopicMe#\n   * @param {TopicMe.ContactCallback} callback - Callback to call for each contact.\n   * @param {contactFilter=} filter - Optionally filter contacts; include all if filter is false-ish, otherwise\n   *      include those for which filter returns true-ish.\n   * @param {Object=} context - Context to use for calling the `callback`, i.e. the value of `this` inside the callback.\n   */\n  contacts(callback, filter, context) {\n    this._tinode.mapTopics((c, idx) => {\n      if (c.isCommType() && (!filter || filter(c))) {\n        callback.call(context, c, idx);\n      }\n    });\n  }\n\n  /**\n   * Get a contact from cache.\n   * @memberof Tinode.TopicMe#\n   *\n   * @param {string} name - Name of the contact to get, either a UID (for p2p topics) or a topic name.\n   * @returns {Tinode.Contact} - Contact or `undefined`.\n   */\n  getContact(name) {\n    return this._tinode.cacheGetTopic(name);\n  }\n\n  /**\n   * Get access mode of a given contact from cache.\n   * @memberof Tinode.TopicMe#\n   *\n   * @param {string} name - Name of the contact to get access mode for, either a UID (for p2p topics)\n   *        or a topic name; if missing, access mode for the 'me' topic itself.\n   * @returns {string} - access mode, such as `RWP`.\n   */\n  getAccessMode(name) {\n    if (name) {\n      const cont = this._tinode.cacheGetTopic(name);\n      return cont ? cont.acs : null;\n    }\n    return this.acs;\n  }\n\n  /**\n   * Check if contact is archived, i.e. contact.private.arch == true.\n   * @memberof Tinode.TopicMe#\n   *\n   * @param {string} name - Name of the contact to check archived status, either a UID (for p2p topics) or a topic name.\n   * @returns {boolean} - true if contact is archived, false otherwise.\n   */\n  isArchived(name) {\n    const cont = this._tinode.cacheGetTopic(name);\n    return cont && cont.private && !!cont.private.arch;\n  }\n\n  /**\n   * @typedef Tinode.Credential\n   * @memberof Tinode\n   * @type Object\n   * @property {string} meth - validation method such as 'email' or 'tel'.\n   * @property {string} val - credential value, i.e. 'jdoe@example.com' or '+17025551234'\n   * @property {boolean} done - true if credential is validated.\n   */\n  /**\n   * Get the user's credentials: email, phone, etc.\n   * @memberof Tinode.TopicMe#\n   *\n   * @returns {Tinode.Credential[]} - array of credentials.\n   */\n  getCredentials() {\n    return this._credentials;\n  }\n}\n\n/**\n * Special case of {@link Tinode.Topic} for searching for contacts and group topics\n * @extends Tinode.Topic\n *\n */\nexport class TopicFnd extends Topic {\n  // List of users and topics uid or topic_name -> Contact object)\n  _contacts = {};\n\n  /**\n   * Create TopicFnd.\n   *\n   * @param {TopicFnd.Callbacks} callbacks - Callbacks to receive various events.\n   */\n  constructor(callbacks) {\n    super(Const.TOPIC_FND, callbacks);\n  }\n\n  // Override the original Topic._processMetaSubs\n  _processMetaSubs(subs) {\n    let updateCount = Object.getOwnPropertyNames(this._contacts).length;\n    // Reset contact list.\n    this._contacts = {};\n    for (let idx in subs) {\n      let sub = subs[idx];\n      const indexBy = sub.topic ? sub.topic : sub.user;\n\n      sub = mergeToCache(this._contacts, indexBy, sub);\n      updateCount++;\n\n      if (this.onMetaSub) {\n        this.onMetaSub(sub);\n      }\n    }\n\n    if (updateCount > 0 && this.onSubsUpdated) {\n      this.onSubsUpdated(Object.keys(this._contacts));\n    }\n  }\n\n  /**\n   * Publishing to TopicFnd is not supported. {@link Topic#publish} is overriden and thows an {Error} if called.\n   * @memberof Tinode.TopicFnd#\n   * @throws {Error} Always throws an error.\n   */\n  publish() {\n    return Promise.reject(new Error(\"Publishing to 'fnd' is not supported\"));\n  }\n\n  /**\n   * setMeta to TopicFnd resets contact list in addition to sending the message.\n   * @memberof Tinode.TopicFnd#\n   * @param {Tinode.SetParams} params parameters to update.\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  setMeta(params) {\n    return Object.getPrototypeOf(TopicFnd.prototype).setMeta.call(this, params).then(_ => {\n      if (Object.keys(this._contacts).length > 0) {\n        this._contacts = {};\n        if (this.onSubsUpdated) {\n          this.onSubsUpdated([]);\n        }\n      }\n    });\n  }\n\n  /**\n   * Iterate over found contacts. If callback is undefined, use {@link this.onMetaSub}.\n   * @function\n   * @memberof Tinode.TopicFnd#\n   * @param {TopicFnd.ContactCallback} callback - Callback to call for each contact.\n   * @param {Object} context - Context to use for calling the `callback`, i.e. the value of `this` inside the callback.\n   */\n  contacts(callback, context) {\n    const cb = (callback || this.onMetaSub);\n    if (cb) {\n      for (let idx in this._contacts) {\n        cb.call(context, this._contacts[idx], idx, this._contacts);\n      }\n    }\n  }\n}\n","/**\n * @file Utilities used in multiple places.\n *\n * @copyright 2015-2022 Tinode LLC.\n */\n'use strict';\n\nimport AccessMode from './access-mode.js';\nimport {\n  DEL_CHAR\n} from './config.js';\n\n// Attempt to convert date and AccessMode strings to objects.\nexport function jsonParseHelper(key, val) {\n  // Try to convert string timestamps with optional milliseconds to Date,\n  // e.g. 2015-09-02T01:45:43[.123]Z\n  if (typeof val == 'string' && val.length >= 20 && val.length <= 24 && ['ts', 'touched', 'updated', 'created', 'when', 'deleted', 'expires'].includes(key)) {\n    const date = new Date(val);\n    if (!isNaN(date)) {\n      return date;\n    }\n  } else if (key === 'acs' && typeof val === 'object') {\n    return new AccessMode(val);\n  }\n  return val;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\nfunction isValidDate(d) {\n  return (d instanceof Date) && !isNaN(d) && (d.getTime() != 0);\n}\n\n// RFC3339 formater of Date\nexport function rfc3339DateString(d) {\n  if (!isValidDate(d)) {\n    return undefined;\n  }\n\n  const pad = function(val, sp) {\n    sp = sp || 2;\n    return '0'.repeat(sp - ('' + val).length) + val;\n  };\n\n  const millis = d.getUTCMilliseconds();\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) +\n    'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) +\n    (millis ? '.' + pad(millis, 3) : '') + 'Z';\n}\n\n// Recursively merge src's own properties to dst.\n// Ignore properties where ignore[property] is true.\n// Array and Date objects are shallow-copied.\nexport function mergeObj(dst, src, ignore) {\n  if (typeof src != 'object') {\n    if (src === undefined) {\n      return dst;\n    }\n    if (src === DEL_CHAR) {\n      return undefined;\n    }\n    return src;\n  }\n  // JS is crazy: typeof null is 'object'.\n  if (src === null) {\n    return src;\n  }\n\n  // Handle Date\n  if (src instanceof Date && !isNaN(src)) {\n    return (!dst || !(dst instanceof Date) || isNaN(dst) || dst < src) ? src : dst;\n  }\n\n  // Access mode\n  if (src instanceof AccessMode) {\n    return new AccessMode(src);\n  }\n\n  // Handle Array\n  if (src instanceof Array) {\n    return src;\n  }\n\n  if (!dst || dst === DEL_CHAR) {\n    dst = src.constructor();\n  }\n\n  for (let prop in src) {\n    if (src.hasOwnProperty(prop) && (!ignore || !ignore[prop]) && (prop != '_noForwarding')) {\n      try {\n        dst[prop] = mergeObj(dst[prop], src[prop]);\n      } catch (err) {\n        // FIXME: probably need to log something here.\n      }\n    }\n  }\n  return dst;\n}\n\n// Update object stored in a cache. Returns updated value.\nexport function mergeToCache(cache, key, newval, ignore) {\n  cache[key] = mergeObj(cache[key], newval, ignore);\n  return cache[key];\n}\n\n// Strips all values from an object of they evaluate to false or if their name starts with '_'.\n// Used on all outgoing object before serialization to string.\nexport function simplify(obj) {\n  Object.keys(obj).forEach((key) => {\n    if (key[0] == '_') {\n      // Strip fields like \"obj._key\".\n      delete obj[key];\n    } else if (!obj[key]) {\n      // Strip fields which evaluate to false.\n      delete obj[key];\n    } else if (Array.isArray(obj[key]) && obj[key].length == 0) {\n      // Strip empty arrays.\n      delete obj[key];\n    } else if (!obj[key]) {\n      // Strip fields which evaluate to false.\n      delete obj[key];\n    } else if (obj[key] instanceof Date) {\n      // Strip invalid or zero date.\n      if (!isValidDate(obj[key])) {\n        delete obj[key];\n      }\n    } else if (typeof obj[key] == 'object') {\n      simplify(obj[key]);\n      // Strip empty objects.\n      if (Object.getOwnPropertyNames(obj[key]).length == 0) {\n        delete obj[key];\n      }\n    }\n  });\n  return obj;\n};\n\n\n// Trim whitespace, strip empty and duplicate elements elements.\n// If the result is an empty array, add a single element \"\\u2421\" (Unicode Del character).\nexport function normalizeArray(arr) {\n  let out = [];\n  if (Array.isArray(arr)) {\n    // Trim, throw away very short and empty tags.\n    for (let i = 0, l = arr.length; i < l; i++) {\n      let t = arr[i];\n      if (t) {\n        t = t.trim().toLowerCase();\n        if (t.length > 1) {\n          out.push(t);\n        }\n      }\n    }\n    out.sort().filter(function(item, pos, ary) {\n      return !pos || item != ary[pos - 1];\n    });\n  }\n  if (out.length == 0) {\n    // Add single tag with a Unicode Del character, otherwise an ampty array\n    // is ambiguos. The Del tag will be stripped by the server.\n    out.push(DEL_CHAR);\n  }\n  return out;\n}\n","export const PACKAGE_VERSION = \"0.22.11\";\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * @module tinode-sdk\n *\n * @copyright 2015-2022 Tinode LLC.\n * @summary Javascript bindings for Tinode.\n * @license Apache 2.0\n * @version 0.20\n *\n * See <a href=\"https://github.com/tinode/webapp\">https://github.com/tinode/webapp</a> for real-life usage.\n *\n * @example\n * <head>\n * <script src=\".../tinode.js\"></script>\n * </head>\n *\n * <body>\n *  ...\n * <script>\n *  // Instantiate tinode.\n *  const tinode = new Tinode(config, _ => {\n *    // Called on init completion.\n *  });\n *  tinode.enableLogging(true);\n *  tinode.onDisconnect = err => {\n *    // Handle disconnect.\n *  };\n *  // Connect to the server.\n *  tinode.connect('https://example.com/').then(_ => {\n *    // Connected. Login now.\n *    return tinode.loginBasic(login, password);\n *  }).then(ctrl => {\n *    // Logged in fine, attach callbacks, subscribe to 'me'.\n *    const me = tinode.getMeTopic();\n *    me.onMetaDesc = function(meta) { ... };\n *    // Subscribe, fetch topic description and the list of contacts.\n *    me.subscribe({get: {desc: {}, sub: {}}});\n *  }).catch(err => {\n *    // Login or subscription failed, do something.\n *    ...\n *  });\n *  ...\n * </script>\n * </body>\n */\n'use strict';\n\n// NOTE TO DEVELOPERS:\n// Localizable strings should be double quoted \"строка на другом языке\",\n// non-localizable strings should be single quoted 'non-localized'.\n\nimport AccessMode from './access-mode.js';\nimport * as Const from './config.js';\nimport CommError from './comm-error.js';\nimport Connection from './connection.js';\nimport DBCache from './db.js';\nimport Drafty from './drafty.js';\nimport LargeFileHelper from './large-file.js';\nimport MetaGetBuilder from './meta-builder.js';\nimport {\n  Topic,\n  TopicMe,\n  TopicFnd\n} from './topic.js';\n\nimport {\n  isUrlRelative,\n  jsonParseHelper,\n  mergeObj,\n  rfc3339DateString,\n  simplify\n} from './utils.js';\n\n// Re-export AccessMode\nexport {\n  AccessMode\n};\n\nlet WebSocketProvider;\nif (typeof WebSocket != 'undefined') {\n  WebSocketProvider = WebSocket;\n}\n\nlet XHRProvider;\nif (typeof XMLHttpRequest != 'undefined') {\n  XHRProvider = XMLHttpRequest;\n}\n\nlet IndexedDBProvider;\nif (typeof indexedDB != 'undefined') {\n  IndexedDBProvider = indexedDB;\n}\n\n// Re-export Drafty.\nexport {\n  Drafty\n}\n\ninitForNonBrowserApp();\n\n// Utility functions\n\n// Polyfill for non-browser context, e.g. NodeJs.\nfunction initForNonBrowserApp() {\n  // Tinode requirement in native mode because react native doesn't provide Base64 method\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n  if (typeof btoa == 'undefined') {\n    global.btoa = function(input = '') {\n      let str = input;\n      let output = '';\n\n      for (let block = 0, charCode, i = 0, map = chars; str.charAt(i | 0) || (map = '=', i % 1); output += map.charAt(63 & block >> 8 - i % 1 * 8)) {\n\n        charCode = str.charCodeAt(i += 3 / 4);\n\n        if (charCode > 0xFF) {\n          throw new Error(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n        }\n        block = block << 8 | charCode;\n      }\n\n      return output;\n    };\n  }\n\n  if (typeof atob == 'undefined') {\n    global.atob = function(input = '') {\n      let str = input.replace(/=+$/, '');\n      let output = '';\n\n      if (str.length % 4 == 1) {\n        throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n      }\n      for (let bc = 0, bs = 0, buffer, i = 0; buffer = str.charAt(i++);\n\n        ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n          bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n      ) {\n        buffer = chars.indexOf(buffer);\n      }\n\n      return output;\n    };\n  }\n\n  if (typeof window == 'undefined') {\n    global.window = {\n      WebSocket: WebSocketProvider,\n      XMLHttpRequest: XHRProvider,\n      indexedDB: IndexedDBProvider,\n      URL: {\n        createObjectURL: function() {\n          throw new Error(\"Unable to use URL.createObjectURL in a non-browser application\");\n        }\n      }\n    }\n  }\n\n  Connection.setNetworkProviders(WebSocketProvider, XHRProvider);\n  LargeFileHelper.setNetworkProvider(XHRProvider);\n  DBCache.setDatabaseProvider(IndexedDBProvider);\n}\n\n// Detect find most useful network transport.\nfunction detectTransport() {\n  if (typeof window == 'object') {\n    if (window['WebSocket']) {\n      return 'ws';\n    } else if (window['XMLHttpRequest']) {\n      // The browser or node has no websockets, using long polling.\n      return 'lp';\n    }\n  }\n  return null;\n}\n\n// btoa replacement. Stock btoa fails on on non-Latin1 strings.\nfunction b64EncodeUnicode(str) {\n  // The encodeURIComponent percent-encodes UTF-8 string,\n  // then the percent encoding is converted into raw bytes which\n  // can be fed into btoa.\n  return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g,\n    function toSolidBytes(match, p1) {\n      return String.fromCharCode('0x' + p1);\n    }));\n}\n\n// JSON stringify helper - pre-processor for JSON.stringify\nfunction jsonBuildHelper(key, val) {\n  if (val instanceof Date) {\n    // Convert javascript Date objects to rfc3339 strings\n    val = rfc3339DateString(val);\n  } else if (val instanceof AccessMode) {\n    val = val.jsonHelper();\n  } else if (val === undefined || val === null || val === false ||\n    (Array.isArray(val) && val.length == 0) ||\n    ((typeof val == 'object') && (Object.keys(val).length == 0))) {\n    // strip out empty elements while serializing objects to JSON\n    return undefined;\n  }\n\n  return val;\n};\n\n// Trims very long strings (encoded images) to make logged packets more readable.\nfunction jsonLoggerHelper(key, val) {\n  if (typeof val == 'string' && val.length > 128) {\n    return '<' + val.length + ', bytes: ' + val.substring(0, 12) + '...' + val.substring(val.length - 12) + '>';\n  }\n  return jsonBuildHelper(key, val);\n};\n\n// Parse browser user agent to extract browser name and version.\nfunction getBrowserInfo(ua, product) {\n  ua = ua || '';\n  let reactnative = '';\n  // Check if this is a ReactNative app.\n  if (/reactnative/i.test(product)) {\n    reactnative = 'ReactNative; ';\n  }\n  let result;\n  // Remove useless string.\n  ua = ua.replace(' (KHTML, like Gecko)', '');\n  // Test for WebKit-based browser.\n  let m = ua.match(/(AppleWebKit\\/[.\\d]+)/i);\n  if (m) {\n    // List of common strings, from more useful to less useful.\n    // All unknown strings get the highest (-1) priority.\n    const priority = ['edg', 'chrome', 'safari', 'mobile', 'version'];\n    let tmp = ua.substr(m.index + m[0].length).split(' ');\n    let tokens = [];\n    let version; // 1.0 in Version/1.0 or undefined;\n    // Split string like 'Name/0.0.0' into ['Name', '0.0.0', 3] where the last element is the priority.\n    for (let i = 0; i < tmp.length; i++) {\n      let m2 = /([\\w.]+)[\\/]([\\.\\d]+)/.exec(tmp[i]);\n      if (m2) {\n        // Unknown values are highest priority (-1).\n        tokens.push([m2[1], m2[2], priority.findIndex((e) => {\n          return m2[1].toLowerCase().startsWith(e);\n        })]);\n        if (m2[1] == 'Version') {\n          version = m2[2];\n        }\n      }\n    }\n    // Sort by priority: more interesting is earlier than less interesting.\n    tokens.sort((a, b) => {\n      return a[2] - b[2];\n    });\n    if (tokens.length > 0) {\n      // Return the least common browser string and version.\n      if (tokens[0][0].toLowerCase().startsWith('edg')) {\n        tokens[0][0] = 'Edge';\n      } else if (tokens[0][0] == 'OPR') {\n        tokens[0][0] = 'Opera';\n      } else if (tokens[0][0] == 'Safari' && version) {\n        tokens[0][1] = version;\n      }\n      result = tokens[0][0] + '/' + tokens[0][1];\n    } else {\n      // Failed to ID the browser. Return the webkit version.\n      result = m[1];\n    }\n  } else if (/firefox/i.test(ua)) {\n    m = /Firefox\\/([.\\d]+)/g.exec(ua);\n    if (m) {\n      result = 'Firefox/' + m[1];\n    } else {\n      result = 'Firefox/?';\n    }\n  } else {\n    // Neither AppleWebKit nor Firefox. Try the last resort.\n    m = /([\\w.]+)\\/([.\\d]+)/.exec(ua);\n    if (m) {\n      result = m[1] + '/' + m[2];\n    } else {\n      m = ua.split(' ');\n      result = m[0];\n    }\n  }\n\n  // Shorten the version to one dot 'a.bb.ccc.d -> a.bb' at most.\n  m = result.split('/');\n  if (m.length > 1) {\n    const v = m[1].split('.');\n    const minor = v[1] ? '.' + v[1].substr(0, 2) : '';\n    result = `${m[0]}/${v[0]}${minor}`;\n  }\n  return reactnative + result;\n}\n\n/**\n * The main class for interacting with Tinode server.\n */\nexport class Tinode {\n  _host;\n  _secure;\n\n  _appName;\n\n  // API Key.\n  _apiKey;\n\n  // Name and version of the browser.\n  _browser = '';\n  _platform;\n  // Hardware\n  _hwos = 'undefined';\n  _humanLanguage = 'xx';\n\n  // Logging to console enabled\n  _loggingEnabled = false;\n  // When logging, trip long strings (base64-encoded images) for readability\n  _trimLongStrings = false;\n  // UID of the currently authenticated user.\n  _myUID = null;\n  // Status of connection: authenticated or not.\n  _authenticated = false;\n  // Login used in the last successful basic authentication\n  _login = null;\n  // Token which can be used for login instead of login/password.\n  _authToken = null;\n  // Counter of received packets\n  _inPacketCount = 0;\n  // Counter for generating unique message IDs\n  _messageId = Math.floor((Math.random() * 0xFFFF) + 0xFFFF);\n  // Information about the server, if connected\n  _serverInfo = null;\n  // Push notification token. Called deviceToken for consistency with the Android SDK.\n  _deviceToken = null;\n\n  // Cache of pending promises by message id.\n  _pendingPromises = {};\n  // The Timeout object returned by the reject expired promises setInterval.\n  _expirePromises = null;\n\n  // Websocket or long polling connection.\n  _connection = null;\n\n  // Use indexDB for caching topics and messages.\n  _persist = false;\n  // IndexedDB wrapper object.\n  _db = null;\n\n  // Tinode's cache of objects\n  _cache = {};\n\n  /**\n   * Create Tinode object.\n   *\n   * @param {Object} config - configuration parameters.\n   * @param {string} config.appName - Name of the calling application to be reported in the User Agent.\n   * @param {string} config.host - Host name and optional port number to connect to.\n   * @param {string} config.apiKey - API key generated by <code>keygen</code>.\n   * @param {string} config.transport - See {@link Tinode.Connection#transport}.\n   * @param {boolean} config.secure - Use Secure WebSocket if <code>true</code>.\n   * @param {string} config.platform - Optional platform identifier, one of <code>\"ios\"</code>, <code>\"web\"</code>, <code>\"android\"</code>.\n   * @param {boolen} config.persist - Use IndexedDB persistent storage.\n   * @param {function} onComplete - callback to call when initialization is completed.\n   */\n  constructor(config, onComplete) {\n    this._host = config.host;\n    this._secure = config.secure;\n\n    // Client-provided application name, format <Name>/<version number>\n    this._appName = config.appName || \"Undefined\";\n\n    // API Key.\n    this._apiKey = config.apiKey;\n\n    // Name and version of the browser.\n    this._platform = config.platform || 'web';\n    // Underlying OS.\n    if (typeof navigator != 'undefined') {\n      this._browser = getBrowserInfo(navigator.userAgent, navigator.product);\n      this._hwos = navigator.platform;\n      // This is the default language. It could be changed by client.\n      this._humanLanguage = navigator.language || 'en-US';\n    }\n\n    Connection.logger = this.logger;\n    Drafty.logger = this.logger;\n\n    // WebSocket or long polling network connection.\n    if (config.transport != 'lp' && config.transport != 'ws') {\n      config.transport = detectTransport();\n    }\n    this._connection = new Connection(config, Const.PROTOCOL_VERSION, /* autoreconnect */ true);\n    this._connection.onMessage = (data) => {\n      // Call the main message dispatcher.\n      this.#dispatchMessage(data);\n    }\n\n    // Ready to start sending.\n    this._connection.onOpen = _ => this.#connectionOpen();\n    this._connection.onDisconnect = (err, code) => this.#disconnected(err, code);\n\n    // Wrapper for the reconnect iterator callback.\n    this._connection.onAutoreconnectIteration = (timeout, promise) => {\n      if (this.onAutoreconnectIteration) {\n        this.onAutoreconnectIteration(timeout, promise);\n      }\n    }\n\n    this._persist = config.persist;\n    // Initialize object regardless. It simplifies the code.\n    this._db = new DBCache(err => {\n      this.logger('DB', err);\n    }, this.logger);\n\n    if (this._persist) {\n      // Create the persistent cache.\n      // Store promises to be resolved when messages load into memory.\n      const prom = [];\n      this._db.initDatabase().then(_ => {\n        // First load topics into memory.\n        return this._db.mapTopics((data) => {\n          let topic = this.#cacheGet('topic', data.name);\n          if (topic) {\n            return;\n          }\n          if (data.name == Const.TOPIC_ME) {\n            topic = new TopicMe();\n          } else if (data.name == Const.TOPIC_FND) {\n            topic = new TopicFnd();\n          } else {\n            topic = new Topic(data.name);\n          }\n          this._db.deserializeTopic(topic, data);\n          this.#attachCacheToTopic(topic);\n          topic._cachePutSelf();\n          // Topic loaded from DB is not new.\n          delete topic._new;\n          // Request to load messages and save the promise.\n          prom.push(topic._loadMessages(this._db));\n        });\n      }).then(_ => {\n        // Then load users.\n        return this._db.mapUsers((data) => {\n          this.#cachePut('user', data.uid, mergeObj({}, data.public));\n        });\n      }).then(_ => {\n        // Now wait for all messages to finish loading.\n        return Promise.all(prom);\n      }).then(_ => {\n        if (onComplete) {\n          onComplete();\n        }\n        this.logger(\"Persistent cache initialized.\");\n      }).catch(err => {\n        if (onComplete) {\n          onComplete(err);\n        }\n        this.logger(\"Failed to initialize persistent cache:\", err);\n      });\n    } else {\n      this._db.deleteDatabase().then(_ => {\n        if (onComplete) {\n          onComplete();\n        }\n      });\n    }\n  }\n\n  // Private methods.\n\n  // Console logger. Babel somehow fails to parse '...rest' parameter.\n  logger(str, ...args) {\n    if (this._loggingEnabled) {\n      const d = new Date();\n      const dateString = ('0' + d.getUTCHours()).slice(-2) + ':' +\n        ('0' + d.getUTCMinutes()).slice(-2) + ':' +\n        ('0' + d.getUTCSeconds()).slice(-2) + '.' +\n        ('00' + d.getUTCMilliseconds()).slice(-3);\n\n      console.log('[' + dateString + ']', str, args.join(' '));\n    }\n  }\n\n  // Generator of default promises for sent packets.\n  #makePromise(id) {\n    let promise = null;\n    if (id) {\n      promise = new Promise((resolve, reject) => {\n        // Stored callbacks will be called when the response packet with this Id arrives\n        this._pendingPromises[id] = {\n          'resolve': resolve,\n          'reject': reject,\n          'ts': new Date()\n        };\n      });\n    }\n    return promise;\n  };\n\n  // Resolve or reject a pending promise.\n  // Unresolved promises are stored in _pendingPromises.\n  #execPromise(id, code, onOK, errorText) {\n    const callbacks = this._pendingPromises[id];\n    if (callbacks) {\n      delete this._pendingPromises[id];\n      if (code >= 200 && code < 400) {\n        if (callbacks.resolve) {\n          callbacks.resolve(onOK);\n        }\n      } else if (callbacks.reject) {\n        callbacks.reject(new CommError(errorText, code));\n      }\n    }\n  }\n\n  // Send a packet. If packet id is provided return a promise.\n  #send(pkt, id) {\n    let promise;\n    if (id) {\n      promise = this.#makePromise(id);\n    }\n    pkt = simplify(pkt);\n    let msg = JSON.stringify(pkt);\n    this.logger(\"out: \" + (this._trimLongStrings ? JSON.stringify(pkt, jsonLoggerHelper) : msg));\n    try {\n      this._connection.sendText(msg);\n    } catch (err) {\n      // If sendText throws, wrap the error in a promise or rethrow.\n      if (id) {\n        this.#execPromise(id, Connection.NETWORK_ERROR, null, err.message);\n      } else {\n        throw err;\n      }\n    }\n    return promise;\n  }\n\n  // The main message dispatcher.\n  #dispatchMessage(data) {\n    // Skip empty response. This happens when LP times out.\n    if (!data)\n      return;\n\n    this._inPacketCount++;\n\n    // Send raw message to listener\n    if (this.onRawMessage) {\n      this.onRawMessage(data);\n    }\n\n    if (data === '0') {\n      // Server response to a network probe.\n      if (this.onNetworkProbe) {\n        this.onNetworkProbe();\n      }\n      // No processing is necessary.\n      return;\n    }\n\n    let pkt = JSON.parse(data, jsonParseHelper);\n    if (!pkt) {\n      this.logger(\"in: \" + data);\n      this.logger(\"ERROR: failed to parse data\");\n    } else {\n      this.logger(\"in: \" + (this._trimLongStrings ? JSON.stringify(pkt, jsonLoggerHelper) : data));\n\n      // Send complete packet to listener\n      if (this.onMessage) {\n        this.onMessage(pkt);\n      }\n\n      if (pkt.ctrl) {\n        // Handling {ctrl} message\n        if (this.onCtrlMessage) {\n          this.onCtrlMessage(pkt.ctrl);\n        }\n\n        // Resolve or reject a pending promise, if any\n        if (pkt.ctrl.id) {\n          this.#execPromise(pkt.ctrl.id, pkt.ctrl.code, pkt.ctrl, pkt.ctrl.text);\n        }\n        setTimeout(_ => {\n          if (pkt.ctrl.code == 205 && pkt.ctrl.text == 'evicted') {\n            // User evicted from topic.\n            const topic = this.#cacheGet('topic', pkt.ctrl.topic);\n            if (topic) {\n              topic._resetSub();\n              if (pkt.ctrl.params && pkt.ctrl.params.unsub) {\n                topic._gone();\n              }\n            }\n          } else if (pkt.ctrl.code < 300 && pkt.ctrl.params) {\n            if (pkt.ctrl.params.what == 'data') {\n              // code=208, all messages received: \"params\":{\"count\":11,\"what\":\"data\"},\n              const topic = this.#cacheGet('topic', pkt.ctrl.topic);\n              if (topic) {\n                topic._allMessagesReceived(pkt.ctrl.params.count);\n              }\n            } else if (pkt.ctrl.params.what == 'sub') {\n              // code=204, the topic has no (refreshed) subscriptions.\n              const topic = this.#cacheGet('topic', pkt.ctrl.topic);\n              if (topic) {\n                // Trigger topic.onSubsUpdated.\n                topic._processMetaSubs([]);\n              }\n            }\n          }\n        }, 0);\n      } else {\n        setTimeout(_ => {\n          if (pkt.meta) {\n            // Handling a {meta} message.\n            // Preferred API: Route meta to topic, if one is registered\n            const topic = this.#cacheGet('topic', pkt.meta.topic);\n            if (topic) {\n              topic._routeMeta(pkt.meta);\n            }\n\n            if (pkt.meta.id) {\n              this.#execPromise(pkt.meta.id, 200, pkt.meta, 'META');\n            }\n\n            // Secondary API: callback\n            if (this.onMetaMessage) {\n              this.onMetaMessage(pkt.meta);\n            }\n          } else if (pkt.data) {\n            // Handling {data} message\n            // Preferred API: Route data to topic, if one is registered\n            const topic = this.#cacheGet('topic', pkt.data.topic);\n            if (topic) {\n              topic._routeData(pkt.data);\n            }\n\n            // Secondary API: Call callback\n            if (this.onDataMessage) {\n              this.onDataMessage(pkt.data);\n            }\n          } else if (pkt.pres) {\n            // Handling {pres} message\n            // Preferred API: Route presence to topic, if one is registered\n            const topic = this.#cacheGet('topic', pkt.pres.topic);\n            if (topic) {\n              topic._routePres(pkt.pres);\n            }\n\n            // Secondary API - callback\n            if (this.onPresMessage) {\n              this.onPresMessage(pkt.pres);\n            }\n          } else if (pkt.info) {\n            // {info} message - read/received notifications and key presses\n            // Preferred API: Route {info}} to topic, if one is registered\n            const topic = this.#cacheGet('topic', pkt.info.topic);\n            if (topic) {\n              topic._routeInfo(pkt.info);\n            }\n\n            // Secondary API - callback\n            if (this.onInfoMessage) {\n              this.onInfoMessage(pkt.info);\n            }\n          } else {\n            this.logger(\"ERROR: Unknown packet received.\");\n          }\n        }, 0);\n      }\n    }\n  }\n\n  // Connection open, ready to start sending.\n  #connectionOpen() {\n    if (!this._expirePromises) {\n      // Reject promises which have not been resolved for too long.\n      this._expirePromises = setInterval(_ => {\n        const err = new CommError(\"timeout\", 504);\n        const expires = new Date(new Date().getTime() - Const.EXPIRE_PROMISES_TIMEOUT);\n        for (let id in this._pendingPromises) {\n          let callbacks = this._pendingPromises[id];\n          if (callbacks && callbacks.ts < expires) {\n            this.logger(\"Promise expired\", id);\n            delete this._pendingPromises[id];\n            if (callbacks.reject) {\n              callbacks.reject(err);\n            }\n          }\n        }\n      }, Const.EXPIRE_PROMISES_PERIOD);\n    }\n    this.hello();\n  }\n\n  #disconnected(err, code) {\n    this._inPacketCount = 0;\n    this._serverInfo = null;\n    this._authenticated = false;\n\n    if (this._expirePromises) {\n      clearInterval(this._expirePromises);\n      this._expirePromises = null;\n    }\n\n    // Mark all topics as unsubscribed\n    this.#cacheMap('topic', (topic, key) => {\n      topic._resetSub();\n    });\n\n    // Reject all pending promises\n    for (let key in this._pendingPromises) {\n      const callbacks = this._pendingPromises[key];\n      if (callbacks && callbacks.reject) {\n        callbacks.reject(err);\n      }\n    }\n    this._pendingPromises = {};\n\n    if (this.onDisconnect) {\n      this.onDisconnect(err);\n    }\n  }\n\n  // Get User Agent string\n  #getUserAgent() {\n    return this._appName + ' (' + (this._browser ? this._browser + '; ' : '') + this._hwos + '); ' + Const.LIBRARY;\n  }\n\n  // Generator of packets stubs\n  #initPacket(type, topic) {\n    switch (type) {\n      case 'hi':\n        return {\n          'hi': {\n            'id': this.getNextUniqueId(),\n            'ver': Const.VERSION,\n            'ua': this.#getUserAgent(),\n            'dev': this._deviceToken,\n            'lang': this._humanLanguage,\n            'platf': this._platform\n          }\n        };\n\n      case 'acc':\n        return {\n          'acc': {\n            'id': this.getNextUniqueId(),\n            'user': null,\n            'scheme': null,\n            'secret': null,\n            'tmpscheme': null,\n            'tmpsecret': null,\n            'login': false,\n            'tags': null,\n            'desc': {},\n            'cred': {}\n          }\n        };\n\n      case 'login':\n        return {\n          'login': {\n            'id': this.getNextUniqueId(),\n            'scheme': null,\n            'secret': null\n          }\n        };\n\n      case 'sub':\n        return {\n          'sub': {\n            'id': this.getNextUniqueId(),\n            'topic': topic,\n            'set': {},\n            'get': {}\n          }\n        };\n\n      case 'leave':\n        return {\n          'leave': {\n            'id': this.getNextUniqueId(),\n            'topic': topic,\n            'unsub': false\n          }\n        };\n\n      case 'pub':\n        return {\n          'pub': {\n            'id': this.getNextUniqueId(),\n            'topic': topic,\n            'noecho': false,\n            'head': null,\n            'content': {}\n          }\n        };\n\n      case 'get':\n        return {\n          'get': {\n            'id': this.getNextUniqueId(),\n            'topic': topic,\n            'what': null,\n            'desc': {},\n            'sub': {},\n            'data': {}\n          }\n        };\n\n      case 'set':\n        return {\n          'set': {\n            'id': this.getNextUniqueId(),\n            'topic': topic,\n            'desc': {},\n            'sub': {},\n            'tags': [],\n            'ephemeral': {}\n          }\n        };\n\n      case 'del':\n        return {\n          'del': {\n            'id': this.getNextUniqueId(),\n            'topic': topic,\n            'what': null,\n            'delseq': null,\n            'user': null,\n            'hard': false\n          }\n        };\n\n      case 'note':\n        return {\n          'note': {\n            // no id by design (except calls).\n            'topic': topic,\n            'what': null, // one of \"recv\", \"read\", \"kp\", \"call\"\n            'seq': undefined // the server-side message id acknowledged as received or read.\n          }\n        };\n\n      default:\n        throw new Error(`Unknown packet type requested: ${type}`);\n    }\n  }\n\n  // Cache management\n  #cachePut(type, name, obj) {\n    this._cache[type + ':' + name] = obj;\n  }\n  #cacheGet(type, name) {\n    return this._cache[type + ':' + name];\n  }\n  #cacheDel(type, name) {\n    delete this._cache[type + ':' + name];\n  }\n\n  // Enumerate all items in cache, call func for each item.\n  // Enumeration stops if func returns true.\n  #cacheMap(type, func, context) {\n    const key = type ? type + ':' : undefined;\n    for (let idx in this._cache) {\n      if (!key || idx.indexOf(key) == 0) {\n        if (func.call(context, this._cache[idx], idx)) {\n          break;\n        }\n      }\n    }\n  }\n\n  // Make limited cache management available to topic.\n  // Caching user.public only. Everything else is per-topic.\n  #attachCacheToTopic(topic) {\n    topic._tinode = this;\n\n    topic._cacheGetUser = (uid) => {\n      const pub = this.#cacheGet('user', uid);\n      if (pub) {\n        return {\n          user: uid,\n          public: mergeObj({}, pub)\n        };\n      }\n      return undefined;\n    };\n    topic._cachePutUser = (uid, user) => {\n      this.#cachePut('user', uid, mergeObj({}, user.public));\n    };\n    topic._cacheDelUser = (uid) => {\n      this.#cacheDel('user', uid);\n    };\n    topic._cachePutSelf = _ => {\n      this.#cachePut('topic', topic.name, topic);\n    };\n    topic._cacheDelSelf = _ => {\n      this.#cacheDel('topic', topic.name);\n    };\n  }\n\n  // On successful login save server-provided data.\n  #loginSuccessful(ctrl) {\n    if (!ctrl.params || !ctrl.params.user) {\n      return ctrl;\n    }\n    // This is a response to a successful login,\n    // extract UID and security token, save it in Tinode module\n    this._myUID = ctrl.params.user;\n    this._authenticated = (ctrl && ctrl.code >= 200 && ctrl.code < 300);\n    if (ctrl.params && ctrl.params.token && ctrl.params.expires) {\n      this._authToken = {\n        token: ctrl.params.token,\n        expires: ctrl.params.expires\n      };\n    } else {\n      this._authToken = null;\n    }\n\n    if (this.onLogin) {\n      this.onLogin(ctrl.code, ctrl.text);\n    }\n\n    return ctrl;\n  }\n\n  // Static methods.\n  /**\n   * Helper method to package account credential.\n   *\n   * @param {string | Credential} meth - validation method or object with validation data.\n   * @param {string=} val - validation value (e.g. email or phone number).\n   * @param {Object=} params - validation parameters.\n   * @param {string=} resp - validation response.\n   *\n   * @returns {Array.<Credential>} array with a single credential or <code>null</code> if no valid credentials were given.\n   */\n  static credential(meth, val, params, resp) {\n    if (typeof meth == 'object') {\n      ({\n        val,\n        params,\n        resp,\n        meth\n      } = meth);\n    }\n    if (meth && (val || resp)) {\n      return [{\n        'meth': meth,\n        'val': val,\n        'resp': resp,\n        'params': params\n      }];\n    }\n    return null;\n  }\n\n  /**\n   * Determine topic type from topic's name: grp, p2p, me, fnd, sys.\n   * @param {string} name - Name of the topic to test.\n   * @returns {string} One of <code>\"me\"</code>, <code>\"fnd\"</code>, <code>\"sys\"</code>, <code>\"grp\"</code>,\n   *    <code>\"p2p\"</code> or <code>undefined</code>.\n   */\n  static topicType(name) {\n    return Topic.topicType(name);\n  }\n\n  /**\n   * Check if the given topic name is a name of a 'me' topic.\n   * @param {string} name - Name of the topic to test.\n   * @returns {boolean} <code>true</code> if the name is a name of a 'me' topic, <code>false</code> otherwise.\n   */\n  static isMeTopicName(name) {\n    return Topic.isMeTopicName(name);\n  }\n  /**\n   * Check if the given topic name is a name of a group topic.\n   * @param {string} name - Name of the topic to test.\n   * @returns {boolean} <code>true</code> if the name is a name of a group topic, <code>false</code> otherwise.\n   */\n  static isGroupTopicName(name) {\n    return Topic.isGroupTopicName(name);\n  }\n  /**\n   * Check if the given topic name is a name of a p2p topic.\n   * @param {string} name - Name of the topic to test.\n   * @returns {boolean} <code>true</code> if the name is a name of a p2p topic, <code>false</code> otherwise.\n   */\n  static isP2PTopicName(name) {\n    return Topic.isP2PTopicName(name);\n  }\n  /**\n   * Check if the given topic name is a name of a communication topic, i.e. P2P or group.\n   * @param {string} name - Name of the topic to test.\n   * @returns {boolean} <code>true</code> if the name is a name of a p2p or group topic, <code>false</code> otherwise.\n   */\n  static isCommTopicName(name) {\n    return Topic.isCommTopicName(name);\n  }\n  /**\n   * Check if the topic name is a name of a new topic.\n   * @param {string} name - topic name to check.\n   * @returns {boolean} <code>true</code> if the name is a name of a new topic, <code>false</code> otherwise.\n   */\n  static isNewGroupTopicName(name) {\n    return Topic.isNewGroupTopicName(name);\n  }\n  /**\n   * Check if the topic name is a name of a channel.\n   * @param {string} name - topic name to check.\n   * @returns {boolean} <code>true</code> if the name is a name of a channel, <code>false</code> otherwise.\n   */\n  static isChannelTopicName(name) {\n    return Topic.isChannelTopicName(name);\n  }\n  /**\n   * Get information about the current version of this Tinode client library.\n   * @returns {string} semantic version of the library, e.g. <code>\"0.15.5-rc1\"</code>.\n   */\n  static getVersion() {\n    return Const.VERSION;\n  }\n  /**\n   * To use Tinode in a non browser context, supply WebSocket and XMLHttpRequest providers.\n   * @static\n   *\n   * @param wsProvider <code>WebSocket</code> provider, e.g. for nodeJS , <code>require('ws')</code>.\n   * @param xhrProvider <code>XMLHttpRequest</code> provider, e.g. for node <code>require('xhr')</code>.\n   */\n  static setNetworkProviders(wsProvider, xhrProvider) {\n    WebSocketProvider = wsProvider;\n    XHRProvider = xhrProvider;\n\n    Connection.setNetworkProviders(WebSocketProvider, XHRProvider);\n    LargeFileHelper.setNetworkProvider(XHRProvider);\n  }\n  /**\n   * To use Tinode in a non browser context, supply <code>indexedDB</code> provider.\n   * @static\n   *\n   * @param idbProvider <code>indexedDB</code> provider, e.g. for nodeJS , <code>require('fake-indexeddb')</code>.\n   */\n  static setDatabaseProvider(idbProvider) {\n    IndexedDBProvider = idbProvider;\n\n    DBCache.setDatabaseProvider(IndexedDBProvider);\n  }\n  /**\n   * Return information about the current name and version of this Tinode library.\n   * @static\n   *\n   * @returns {string} the name of the library and it's version.\n   */\n  static getLibrary() {\n    return Const.LIBRARY;\n  }\n  /**\n   * Check if the given string represents <code>NULL</code> value as defined by Tinode (<code>'\\u2421'</code>).\n   * @param {string} str - string to check for <code>NULL</code> value.\n   * @returns {boolean} <code>true</code> if string represents <code>NULL</code> value, <code>false</code> otherwise.\n   */\n  static isNullValue(str) {\n    return str === Const.DEL_CHAR;\n  }\n\n  // Instance methods.\n\n  // Generates unique message IDs\n  getNextUniqueId() {\n    return (this._messageId != 0) ? '' + this._messageId++ : undefined;\n  };\n\n  /**\n   * Connect to the server.\n   *\n   * @param {string} host_ - name of the host to connect to.\n   * @return {Promise} Promise resolved/rejected when the connection call completes:\n   *    <code>resolve()</code> is called without parameters, <code>reject()</code> receives the\n   *    <code>Error</code> as a single parameter.\n   */\n  connect(host_) {\n    return this._connection.connect(host_);\n  }\n\n  /**\n   * Attempt to reconnect to the server immediately.\n   *\n   * @param {string} force - if <code>true</code>, reconnect even if there is a connection already.\n   */\n  reconnect(force) {\n    this._connection.reconnect(force);\n  }\n\n  /**\n   * Disconnect from the server.\n   */\n  disconnect() {\n    this._connection.disconnect();\n  }\n\n  /**\n   * Clear persistent cache: remove IndexedDB.\n   *\n   * @return {Promise} Promise resolved/rejected when the operation is completed.\n   */\n  clearStorage() {\n    if (this._db.isReady()) {\n      return this._db.deleteDatabase();\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Initialize persistent cache: create IndexedDB cache.\n   *\n   * @return {Promise} Promise resolved/rejected when the operation is completed.\n   */\n  initStorage() {\n    if (!this._db.isReady()) {\n      return this._db.initDatabase();\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Send a network probe message to make sure the connection is alive.\n   */\n  networkProbe() {\n    this._connection.probe();\n  }\n\n  /**\n   * Check for live connection to server.\n   *\n   * @returns {boolean} <code>true</code> if there is a live connection, <code>false</code> otherwise.\n   */\n  isConnected() {\n    return this._connection.isConnected();\n  }\n\n  /**\n   * Check if connection is authenticated (last login was successful).\n   *\n   * @returns {boolean} <code>true</code> if authenticated, <code>false</code> otherwise.\n   */\n  isAuthenticated() {\n    return this._authenticated;\n  }\n\n  /**\n   * Add API key and auth token to the relative URL making it usable for getting data\n   * from the server in a simple <code>HTTP GET</code> request.\n   *\n   * @param {string} URL - URL to wrap.\n   * @returns {string} URL with appended API key and token, if valid token is present.\n   */\n  authorizeURL(url) {\n    if (typeof url != 'string') {\n      return url;\n    }\n\n    if (isUrlRelative(url)) {\n      // Fake base to make the relative URL parseable.\n      const base = 'scheme://host/';\n      const parsed = new URL(url, base);\n      if (this._apiKey) {\n        parsed.searchParams.append('apikey', this._apiKey);\n      }\n      if (this._authToken && this._authToken.token) {\n        parsed.searchParams.append('auth', 'token');\n        parsed.searchParams.append('secret', this._authToken.token);\n      }\n      // Convert back to string and strip fake base URL except for the root slash.\n      url = parsed.toString().substring(base.length - 1);\n    }\n    return url;\n  }\n\n  /**\n   * @typedef AccountParams\n   * @type {Object}\n   * @property {DefAcs=} defacs - Default access parameters for user's <code>me</code> topic.\n   * @property {Object=} public - Public application-defined data exposed on <code>me</code> topic.\n   * @property {Object=} private - Private application-defined data accessible on <code>me</code> topic.\n   * @property {Object=} trusted - Trusted user data which can be set by a root user only.\n   * @property {Array.<string>} tags - array of string tags for user discovery.\n   * @property {string} scheme - Temporary authentication scheme for password reset.\n   * @property {string} secret - Temporary authentication secret for password reset.\n   * @property {Array.<string>=} attachments - Array of references to out of band attachments used in account description.\n   */\n  /**\n   * @typedef DefAcs\n   * @type {Object}\n   * @property {string=} auth - Access mode for <code>me</code> for authenticated users.\n   * @property {string=} anon - Access mode for <code>me</code> for anonymous users.\n   */\n\n  /**\n   * Create or update an account.\n   *\n   * @param {string} uid - User id to update\n   * @param {string} scheme - Authentication scheme; <code>\"basic\"</code> and <code>\"anonymous\"</code> are the currently supported schemes.\n   * @param {string} secret - Authentication secret, assumed to be already base64 encoded.\n   * @param {boolean=} login - Use new account to authenticate current session\n   * @param {AccountParams=} params - User data to pass to the server.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected when server reply is received.\n   */\n  account(uid, scheme, secret, login, params) {\n    const pkt = this.#initPacket('acc');\n    pkt.acc.user = uid;\n    pkt.acc.scheme = scheme;\n    pkt.acc.secret = secret;\n    // Log in to the new account using selected scheme\n    pkt.acc.login = login;\n\n    if (params) {\n      pkt.acc.desc.defacs = params.defacs;\n      pkt.acc.desc.public = params.public;\n      pkt.acc.desc.private = params.private;\n      pkt.acc.desc.trusted = params.trusted;\n\n      pkt.acc.tags = params.tags;\n      pkt.acc.cred = params.cred;\n\n      pkt.acc.tmpscheme = params.scheme;\n      pkt.acc.tmpsecret = params.secret;\n\n      if (Array.isArray(params.attachments) && params.attachments.length > 0) {\n        pkt.extra = {\n          attachments: params.attachments.filter(ref => isUrlRelative(ref))\n        };\n      }\n    }\n\n    return this.#send(pkt, pkt.acc.id);\n  }\n\n  /**\n   * Create a new user. Wrapper for {@link Tinode#account}.\n   *\n   * @param {string} scheme - Authentication scheme; <code>\"basic\"</code> is the only currently supported scheme.\n   * @param {string} secret - Authentication.\n   * @param {boolean=} login - Use new account to authenticate current session\n   * @param {AccountParams=} params - User data to pass to the server.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected when server reply is received.\n   */\n  createAccount(scheme, secret, login, params) {\n    let promise = this.account(Const.USER_NEW, scheme, secret, login, params);\n    if (login) {\n      promise = promise.then(ctrl => this.#loginSuccessful(ctrl));\n    }\n    return promise;\n  }\n\n  /**\n   * Create user with <code>'basic'</code> authentication scheme and immediately\n   * use it for authentication. Wrapper for {@link Tinode#account}.\n   *\n   * @param {string} username - Login to use for the new account.\n   * @param {string} password - User's password.\n   * @param {AccountParams=} params - User data to pass to the server.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected when server reply is received.\n   */\n  createAccountBasic(username, password, params) {\n    // Make sure we are not using 'null' or 'undefined';\n    username = username || '';\n    password = password || '';\n    return this.createAccount('basic',\n      b64EncodeUnicode(username + ':' + password), true, params);\n  }\n\n  /**\n   * Update user's credentials for <code>'basic'</code> authentication scheme. Wrapper for {@link Tinode#account}.\n   *\n   * @param {string} uid - User ID to update.\n   * @param {string} username - Login to use for the new account.\n   * @param {string} password - User's password.\n   * @param {AccountParams=} params - data to pass to the server.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected when server reply is received.\n   */\n  updateAccountBasic(uid, username, password, params) {\n    // Make sure we are not using 'null' or 'undefined';\n    username = username || '';\n    password = password || '';\n    return this.account(uid, 'basic',\n      b64EncodeUnicode(username + ':' + password), false, params);\n  }\n\n  /**\n   * Send handshake to the server.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected when server reply is received.\n   */\n  hello() {\n    const pkt = this.#initPacket('hi');\n\n    return this.#send(pkt, pkt.hi.id)\n      .then(ctrl => {\n        // Reset backoff counter on successful connection.\n        this._connection.backoffReset();\n\n        // Server response contains server protocol version, build, constraints,\n        // session ID for long polling. Save them.\n        if (ctrl.params) {\n          this._serverInfo = ctrl.params;\n        }\n\n        if (this.onConnect) {\n          this.onConnect();\n        }\n\n        return ctrl;\n      }).catch(err => {\n        this._connection.reconnect(true);\n\n        if (this.onDisconnect) {\n          this.onDisconnect(err);\n        }\n      });\n  }\n\n  /**\n   * Set or refresh the push notifications/device token. If the client is connected,\n   * the deviceToken can be sent to the server.\n   *\n   * @param {string} dt - token obtained from the provider or <code>false</code>,\n   *    <code>null</code> or <code>undefined</code> to clear the token.\n   *\n   * @returns <code>true</code> if attempt was made to send the update to the server.\n   */\n  setDeviceToken(dt) {\n    let sent = false;\n    // Convert any falsish value to null.\n    dt = dt || null;\n    if (dt != this._deviceToken) {\n      this._deviceToken = dt;\n      if (this.isConnected() && this.isAuthenticated()) {\n        this.#send({\n          'hi': {\n            'dev': dt || Tinode.DEL_CHAR\n          }\n        });\n        sent = true;\n      }\n    }\n    return sent;\n  }\n\n  /**\n   * @typedef Credential\n   * @type {Object}\n   * @property {string} meth - validation method.\n   * @property {string} val - value to validate (e.g. email or phone number).\n   * @property {string} resp - validation response.\n   * @property {Object} params - validation parameters.\n   */\n  /**\n   * Authenticate current session.\n   *\n   * @param {string} scheme - Authentication scheme; <code>\"basic\"</code> is the only currently supported scheme.\n   * @param {string} secret - Authentication secret, assumed to be already base64 encoded.\n   * @param {Credential=} cred - credential confirmation, if required.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected when server reply is received.\n   */\n  login(scheme, secret, cred) {\n    const pkt = this.#initPacket('login');\n    pkt.login.scheme = scheme;\n    pkt.login.secret = secret;\n    pkt.login.cred = cred;\n\n    return this.#send(pkt, pkt.login.id)\n      .then(ctrl => this.#loginSuccessful(ctrl));\n  }\n\n  /**\n   * Wrapper for {@link Tinode#login} with basic authentication\n   *\n   * @param {string} uname - User name.\n   * @param {string} password  - Password.\n   * @param {Credential=} cred - credential confirmation, if required.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  loginBasic(uname, password, cred) {\n    return this.login('basic', b64EncodeUnicode(uname + ':' + password), cred)\n      .then(ctrl => {\n        this._login = uname;\n        return ctrl;\n      });\n  }\n\n  /**\n   * Wrapper for {@link Tinode#login} with token authentication\n   *\n   * @param {string} token - Token received in response to earlier login.\n   * @param {Credential=} cred - credential confirmation, if required.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  loginToken(token, cred) {\n    return this.login('token', token, cred);\n  }\n\n  /**\n   * Send a request for resetting an authentication secret.\n   *\n   * @param {string} scheme - authentication scheme to reset.\n   * @param {string} method - method to use for resetting the secret, such as \"email\" or \"tel\".\n   * @param {string} value - value of the credential to use, a specific email address or a phone number.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected on receiving the server reply.\n   */\n  requestResetAuthSecret(scheme, method, value) {\n    return this.login('reset', b64EncodeUnicode(scheme + ':' + method + ':' + value));\n  }\n\n  /**\n   * @typedef AuthToken\n   * @type {Object}\n   * @property {string} token - Token value.\n   * @property {Date} expires - Token expiration time.\n   */\n  /**\n   * Get stored authentication token.\n   *\n   * @returns {AuthToken} authentication token.\n   */\n  getAuthToken() {\n    if (this._authToken && (this._authToken.expires.getTime() > Date.now())) {\n      return this._authToken;\n    } else {\n      this._authToken = null;\n    }\n    return null;\n  }\n\n  /**\n   * Application may provide a saved authentication token.\n   *\n   * @param {AuthToken} token - authentication token.\n   */\n  setAuthToken(token) {\n    this._authToken = token;\n  }\n\n  /**\n   * @typedef SetParams\n   * @type {Object}\n   * @property {SetDesc=} desc - Topic initialization parameters when creating a new topic or a new subscription.\n   * @property {SetSub=} sub - Subscription initialization parameters.\n   * @property {Array.<string>=} attachments - URLs of out of band attachments used in parameters.\n   */\n  /**\n   * @typedef SetDesc\n   * @type {Object}\n   * @property {DefAcs=} defacs - Default access mode.\n   * @property {Object=} public - Free-form topic description, publically accessible.\n   * @property {Object=} private - Free-form topic description accessible only to the owner.\n   * @property {Object=} trusted - Trusted user data which can be set by a root user only.\n   */\n  /**\n   * @typedef SetSub\n   * @type {Object}\n   * @property {string=} user - UID of the user affected by the request. Default (empty) - current user.\n   * @property {string=} mode - User access mode, either requested or assigned dependent on context.\n   */\n  /**\n   * Send a topic subscription request.\n   *\n   * @param {string} topic - Name of the topic to subscribe to.\n   * @param {GetQuery=} getParams - Optional subscription metadata query\n   * @param {SetParams=} setParams - Optional initialization parameters\n   *\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  subscribe(topicName, getParams, setParams) {\n    const pkt = this.#initPacket('sub', topicName)\n    if (!topicName) {\n      topicName = Const.TOPIC_NEW;\n    }\n\n    pkt.sub.get = getParams;\n\n    if (setParams) {\n      if (setParams.sub) {\n        pkt.sub.set.sub = setParams.sub;\n      }\n\n      if (setParams.desc) {\n        const desc = setParams.desc;\n        if (Tinode.isNewGroupTopicName(topicName)) {\n          // Full set.desc params are used for new topics only\n          pkt.sub.set.desc = desc;\n        } else if (Tinode.isP2PTopicName(topicName) && desc.defacs) {\n          // Use optional default permissions only.\n          pkt.sub.set.desc = {\n            defacs: desc.defacs\n          };\n        }\n      }\n\n      // See if external objects were used in topic description.\n      if (Array.isArray(setParams.attachments) && setParams.attachments.length > 0) {\n        pkt.extra = {\n          attachments: setParams.attachments.filter(ref => isUrlRelative(ref))\n        };\n      }\n\n      if (setParams.tags) {\n        pkt.sub.set.tags = setParams.tags;\n      }\n    }\n    return this.#send(pkt, pkt.sub.id);\n  }\n\n  /**\n   * Detach and optionally unsubscribe from the topic\n   *\n   * @param {string} topic - Topic to detach from.\n   * @param {boolean} unsub - If <code>true</code>, detach and unsubscribe, otherwise just detach.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  leave(topic, unsub) {\n    const pkt = this.#initPacket('leave', topic);\n    pkt.leave.unsub = unsub;\n\n    return this.#send(pkt, pkt.leave.id);\n  }\n\n  /**\n   * Create message draft without sending it to the server.\n   *\n   * @param {string} topic - Name of the topic to publish to.\n   * @param {Object} content - Payload to publish.\n   * @param {boolean=} noEcho - If <code>true</code>, tell the server not to echo the message to the original session.\n   *\n   * @returns {Object} new message which can be sent to the server or otherwise used.\n   */\n  createMessage(topic, content, noEcho) {\n    const pkt = this.#initPacket('pub', topic);\n\n    let dft = typeof content == 'string' ? Drafty.parse(content) : content;\n    if (dft && !Drafty.isPlainText(dft)) {\n      pkt.pub.head = {\n        mime: Drafty.getContentType()\n      };\n      content = dft;\n    }\n    pkt.pub.noecho = noEcho;\n    pkt.pub.content = content;\n\n    return pkt.pub;\n  }\n\n  /**\n   * Publish {data} message to topic.\n   *\n   * @param {string} topicName - Name of the topic to publish to.\n   * @param {Object} content - Payload to publish.\n   * @param {boolean=} noEcho - If <code>true</code>, tell the server not to echo the message to the original session.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  publish(topicName, content, noEcho) {\n    return this.publishMessage(\n      this.createMessage(topicName, content, noEcho)\n    );\n  }\n\n  /**\n   * Publish message to topic. The message should be created by {@link Tinode#createMessage}.\n   *\n   * @param {Object} pub - Message to publish.\n   * @param {Array.<string>=} attachments - array of URLs with attachments.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  publishMessage(pub, attachments) {\n    // Make a shallow copy. Needed in order to clear locally-assigned temp values;\n    pub = Object.assign({}, pub);\n    pub.seq = undefined;\n    pub.from = undefined;\n    pub.ts = undefined;\n    const msg = {\n      pub: pub,\n    };\n    if (attachments) {\n      msg.extra = {\n        attachments: attachments.filter(ref => isUrlRelative(ref))\n      };\n    }\n    return this.#send(msg, pub.id);\n  }\n\n  /**\n   * Out of band notification: notify topic that an external (push) notification was recived by the client.\n   *\n   * @param {object} data - notification payload.\n   * @param {string} data.what - notification type, 'msg', 'read', 'sub'.\n   * @param {string} data.topic - name of the updated topic.\n   * @param {number=} data.seq - seq ID of the affected message.\n   * @param {string=} data.xfrom - UID of the sender.\n   * @param {object=} data.given - new subscription 'given', e.g. 'ASWP...'.\n   * @param {object=} data.want - new subscription 'want', e.g. 'RWJ...'.\n   */\n  oobNotification(data) {\n    this.logger('oob: ' + (this._trimLongStrings ? JSON.stringify(data, jsonLoggerHelper) : data));\n\n    switch (data.what) {\n      case 'msg':\n        if (!data.seq || data.seq < 1 || !data.topic) {\n          // Server sent invalid data.\n          break;\n        }\n\n        if (!this.isConnected()) {\n          // Let's ignore the message if there is no connection: no connection means there are no open\n          // tabs with Tinode.\n          break;\n        }\n\n        const topic = this.#cacheGet('topic', data.topic);\n        if (!topic) {\n          // TODO: check if there is a case when a message can arrive from an unknown topic.\n          break;\n        }\n\n        if (topic.isSubscribed()) {\n          // No need to fetch: topic is already subscribed and got data through normal channel.\n          break;\n        }\n\n        if (topic.maxMsgSeq() < data.seq) {\n          if (topic.isChannelType()) {\n            topic._updateReceived(data.seq, 'fake-uid');\n          }\n\n          // New message.\n          if (data.xfrom && !this.#cacheGet('user', data.xfrom)) {\n            // Message from unknown sender, fetch description from the server.\n            // Sending asynchronously without a subscription.\n            this.getMeta(data.xfrom, new MetaGetBuilder().withDesc().build()).catch(err => {\n              this.logger(\"Failed to get the name of a new sender\", err);\n            });\n          }\n\n          topic.subscribe(null).then(_ => {\n            return topic.getMeta(new MetaGetBuilder(topic).withLaterData(24).withLaterDel(24).build());\n          }).then(_ => {\n            // Allow data fetch to complete and get processed successfully.\n            topic.leaveDelayed(false, 1000);\n          }).catch(err => {\n            this.logger(\"On push data fetch failed\", err);\n          }).finally(_ => {\n            this.getMeTopic()._refreshContact('msg', topic);\n          });\n        }\n        break;\n\n      case 'read':\n        this.getMeTopic()._routePres({\n          what: 'read',\n          seq: data.seq\n        });\n        break;\n\n      case 'sub':\n        if (!this.isMe(data.xfrom)) {\n          // TODO: handle updates from other users.\n          break;\n        }\n\n        const mode = {\n          given: data.modeGiven,\n          want: data.modeWant\n        };\n        const acs = new AccessMode(mode);\n        const pres = (!acs.mode || acs.mode == AccessMode._NONE) ?\n          // Subscription deleted.\n          {\n            what: 'gone',\n            src: data.topic\n          } :\n          // New subscription or subscription updated.\n          {\n            what: 'acs',\n            src: data.topic,\n            dacs: mode\n          };\n        this.getMeTopic()._routePres(pres);\n        break;\n\n      default:\n        this.logger(\"Unknown push type ignored\", data.what);\n    }\n  }\n\n  /**\n   * @typedef GetQuery\n   * @type {Object}\n   * @property {GetOptsType=} desc - If provided (even if empty), fetch topic description.\n   * @property {GetOptsType=} sub - If provided (even if empty), fetch topic subscriptions.\n   * @property {GetDataType=} data - If provided (even if empty), get messages.\n   */\n\n  /**\n   * @typedef GetOptsType\n   * @type {Object}\n   * @property {Date=} ims - \"If modified since\", fetch data only it was was modified since stated date.\n   * @property {number=} limit - Maximum number of results to return. Ignored when querying topic description.\n   */\n\n  /**\n   * @typedef GetDataType\n   * @type {Object}\n   * @property {number=} since - Load messages with seq id equal or greater than this value.\n   * @property {number=} before - Load messages with seq id lower than this number.\n   * @property {number=} limit - Maximum number of results to return.\n   */\n\n  /**\n   * Request topic metadata\n   *\n   * @param {string} topic - Name of the topic to query.\n   * @param {GetQuery} params - Parameters of the query. Use {@link Tinode.MetaGetBuilder} to generate.\n   *\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  getMeta(topic, params) {\n    const pkt = this.#initPacket('get', topic);\n\n    pkt.get = mergeObj(pkt.get, params);\n\n    return this.#send(pkt, pkt.get.id);\n  }\n\n  /**\n   * Update topic's metadata: description, subscribtions.\n   *\n   * @param {string} topic - Topic to update.\n   * @param {SetParams} params - topic metadata to update.\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  setMeta(topic, params) {\n    const pkt = this.#initPacket('set', topic);\n    const what = [];\n\n    if (params) {\n      ['desc', 'sub', 'tags', 'cred', 'ephemeral'].forEach(function(key) {\n        if (params.hasOwnProperty(key)) {\n          what.push(key);\n          pkt.set[key] = params[key];\n        }\n      });\n\n      if (Array.isArray(params.attachments) && params.attachments.length > 0) {\n        pkt.extra = {\n          attachments: params.attachments.filter(ref => isUrlRelative(ref))\n        };\n      }\n    }\n\n    if (what.length == 0) {\n      return Promise.reject(new Error(\"Invalid {set} parameters\"));\n    }\n\n    return this.#send(pkt, pkt.set.id);\n  }\n\n  /**\n   * Range of message IDs to delete.\n   *\n   * @typedef DelRange\n   * @type {Object}\n   * @property {number} low - low end of the range, inclusive (closed).\n   * @property {number=} hi - high end of the range, exclusive (open).\n   */\n  /**\n   * Delete some or all messages in a topic.\n   *\n   * @param {string} topic - Topic name to delete messages from.\n   * @param {DelRange[]} list - Ranges of message IDs to delete.\n   * @param {boolean=} hard - Hard or soft delete\n   *\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  delMessages(topic, ranges, hard) {\n    const pkt = this.#initPacket('del', topic);\n\n    pkt.del.what = 'msg';\n    pkt.del.delseq = ranges;\n    pkt.del.hard = hard;\n\n    return this.#send(pkt, pkt.del.id);\n  }\n\n  /**\n   * Delete the topic alltogether. Requires Owner permission.\n   *\n   * @param {string} topicName - Name of the topic to delete\n   * @param {boolean} hard - hard-delete topic.\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  delTopic(topicName, hard) {\n    const pkt = this.#initPacket('del', topicName);\n    pkt.del.what = 'topic';\n    pkt.del.hard = hard;\n\n    return this.#send(pkt, pkt.del.id);\n  }\n\n  /**\n   * Delete subscription. Requires Share permission.\n   *\n   * @param {string} topicName - Name of the topic to delete\n   * @param {string} user - User ID to remove.\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  delSubscription(topicName, user) {\n    const pkt = this.#initPacket('del', topicName);\n    pkt.del.what = 'sub';\n    pkt.del.user = user;\n\n    return this.#send(pkt, pkt.del.id);\n  }\n\n  /**\n   * Delete credential. Always sent on <code>'me'</code> topic.\n   *\n   * @param {string} method - validation method such as <code>'email'</code> or <code>'tel'</code>.\n   * @param {string} value - validation value, i.e. <code>'alice@example.com'</code>.\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  delCredential(method, value) {\n    const pkt = this.#initPacket('del', Const.TOPIC_ME);\n    pkt.del.what = 'cred';\n    pkt.del.cred = {\n      meth: method,\n      val: value\n    };\n\n    return this.#send(pkt, pkt.del.id);\n  }\n\n  /**\n   * Request to delete account of the current user.\n   *\n   * @param {boolean} hard - hard-delete user.\n   * @returns {Promise} Promise which will be resolved/rejected on receiving server reply.\n   */\n  delCurrentUser(hard) {\n    const pkt = this.#initPacket('del', null);\n    pkt.del.what = 'user';\n    pkt.del.hard = hard;\n\n    return this.#send(pkt, pkt.del.id).then(_ => {\n      this._myUID = null;\n    });\n  }\n\n  /**\n   * Notify server that a message or messages were read or received. Does NOT return promise.\n   *\n   * @param {string} topicName - Name of the topic where the mesage is being aknowledged.\n   * @param {string} what - Action being aknowledged, either <code>\"read\"</code> or <code>\"recv\"</code>.\n   * @param {number} seq - Maximum id of the message being acknowledged.\n   */\n  note(topicName, what, seq) {\n    if (seq <= 0 || seq >= Const.LOCAL_SEQID) {\n      throw new Error(`Invalid message id ${seq}`);\n    }\n\n    const pkt = this.#initPacket('note', topicName);\n    pkt.note.what = what;\n    pkt.note.seq = seq;\n    this.#send(pkt);\n  }\n\n  /**\n   * Broadcast a key-press notification to topic subscribers. Used to show\n   * typing notifications \"user X is typing...\".\n   *\n   * @param {string} topicName - Name of the topic to broadcast to.\n   * @param {string=} type - notification to send, default is 'kp'.\n   */\n  noteKeyPress(topicName, type) {\n    const pkt = this.#initPacket('note', topicName);\n    pkt.note.what = type || 'kp';\n    this.#send(pkt);\n  }\n\n  /**\n   * Send a video call notification to topic subscribers (including dialing,\n   * hangup, etc.).\n   *\n   * @param {string} topicName - Name of the topic to broadcast to.\n   * @param {int} seq - ID of the call message the event pertains to.\n   * @param {string} evt - Call event.\n   * @param {string} payload - Payload associated with this event (e.g. SDP string).\n   *\n   * @returns {Promise} Promise (for some call events) which will\n   *                    be resolved/rejected on receiving server reply\n   */\n  videoCall(topicName, seq, evt, payload) {\n    const pkt = this.#initPacket('note', topicName);\n    pkt.note.seq = seq;\n    pkt.note.what = 'call';\n    pkt.note.event = evt;\n    pkt.note.payload = payload;\n    this.#send(pkt, pkt.note.id);\n  }\n\n  /**\n   * Get a named topic, either pull it from cache or create a new instance.\n   * There is a single instance of topic for each name.\n   *\n   * @param {string} topicName - Name of the topic to get.\n   *\n   * @returns {Topic} Requested or newly created topic or <code>undefined</code> if topic name is invalid.\n   */\n  getTopic(topicName) {\n    let topic = this.#cacheGet('topic', topicName);\n    if (!topic && topicName) {\n      if (topicName == Const.TOPIC_ME) {\n        topic = new TopicMe();\n      } else if (topicName == Const.TOPIC_FND) {\n        topic = new TopicFnd();\n      } else {\n        topic = new Topic(topicName);\n      }\n      // Cache management.\n      this.#attachCacheToTopic(topic);\n      topic._cachePutSelf();\n      // Don't save to DB here: a record will be added when the topic is subscribed.\n    }\n    return topic;\n  }\n\n  /**\n   * Get a named topic from cache.\n   *\n   * @param {string} topicName - Name of the topic to get.\n   *\n   * @returns {Topic} Requested topic or <code>undefined</code> if topic is not found in cache.\n   */\n  cacheGetTopic(topicName) {\n    return this.#cacheGet('topic', topicName);\n  }\n\n  /**\n   * Remove named topic from cache.\n   *\n   * @param {string} topicName - Name of the topic to remove from cache.\n   */\n  cacheRemTopic(topicName) {\n    this.#cacheDel('topic', topicName);\n  }\n\n  /**\n   * Iterate over cached topics.\n   *\n   * @param {Function} func - callback to call for each topic.\n   * @param {Object} context - 'this' inside the 'func'.\n   */\n  mapTopics(func, context) {\n    this.#cacheMap('topic', func, context);\n  }\n\n  /**\n   * Check if named topic is already present in cache.\n   *\n   * @param {string} topicName - Name of the topic to check.\n   * @returns {boolean} true if topic is found in cache, false otherwise.\n   */\n  isTopicCached(topicName) {\n    return !!this.#cacheGet('topic', topicName);\n  }\n\n  /**\n   * Generate unique name like <code>'new123456'</code> suitable for creating a new group topic.\n   *\n   * @param {boolean} isChan - if the topic is channel-enabled.\n   * @returns {string} name which can be used for creating a new group topic.\n   */\n  newGroupTopicName(isChan) {\n    return (isChan ? Const.TOPIC_NEW_CHAN : Const.TOPIC_NEW) + this.getNextUniqueId();\n  }\n\n  /**\n   * Instantiate <code>'me'</code> topic or get it from cache.\n   *\n   * @returns {TopicMe} Instance of <code>'me'</code> topic.\n   */\n  getMeTopic() {\n    return this.getTopic(Const.TOPIC_ME);\n  }\n\n  /**\n   * Instantiate <code>'fnd'</code> (find) topic or get it from cache.\n   *\n   * @returns {Topic} Instance of <code>'fnd'</code> topic.\n   */\n  getFndTopic() {\n    return this.getTopic(Const.TOPIC_FND);\n  }\n\n  /**\n   * Create a new {@link LargeFileHelper} instance\n   *\n   * @returns {LargeFileHelper} instance of a {@link Tinode.LargeFileHelper}.\n   */\n  getLargeFileHelper() {\n    return new LargeFileHelper(this, Const.PROTOCOL_VERSION);\n  }\n\n  /**\n   * Get the UID of the the current authenticated user.\n   *\n   * @returns {string} UID of the current user or <code>undefined</code> if the session is not yet\n   * authenticated or if there is no session.\n   */\n  getCurrentUserID() {\n    return this._myUID;\n  }\n\n  /**\n   * Check if the given user ID is equal to the current user's UID.\n   *\n   * @param {string} uid - UID to check.\n   *\n   * @returns {boolean} true if the given UID belongs to the current logged in user.\n   */\n  isMe(uid) {\n    return this._myUID === uid;\n  }\n\n  /**\n   * Get login used for last successful authentication.\n   *\n   * @returns {string} login last used successfully or <code>undefined</code>.\n   */\n  getCurrentLogin() {\n    return this._login;\n  }\n\n  /**\n   * Return information about the server: protocol version and build timestamp.\n   *\n   * @returns {Object} build and version of the server or <code>null</code> if there is no connection or\n   * if the first server response has not been received yet.\n   */\n  getServerInfo() {\n    return this._serverInfo;\n  }\n\n  /**\n   * Report a topic for abuse. Wrapper for {@link Tinode#publish}.\n   *\n   * @param {string} action - the only supported action is 'report'.\n   * @param {string} target - name of the topic being reported.\n   *\n   * @returns {Promise} Promise to be resolved/rejected when the server responds to request.\n   */\n  report(action, target) {\n    return this.publish(Const.TOPIC_SYS, Drafty.attachJSON(null, {\n      'action': action,\n      'target': target\n    }));\n  }\n\n  /**\n   * Return server-provided configuration value.\n   *\n   * @param {string} name of the value to return.\n   * @param {Object} defaultValue to return in case the parameter is not set or not found.\n   *\n   * @returns {Object} named value.\n   */\n  getServerParam(name, defaultValue) {\n    return this._serverInfo && this._serverInfo[name] || defaultValue;\n  }\n\n  /**\n   * Toggle console logging. Logging is off by default.\n   *\n   * @param {boolean} enabled - Set to <code>true</code> to enable logging to console.\n   * @param {boolean} trimLongStrings - Set to <code>true</code> to trim long strings.\n   */\n  enableLogging(enabled, trimLongStrings) {\n    this._loggingEnabled = enabled;\n    this._trimLongStrings = enabled && trimLongStrings;\n  }\n\n  /**\n   * Set UI language to report to the server. Must be called before <code>'hi'</code> is sent, otherwise it will not be used.\n   *\n   * @param {string} hl - human (UI) language, like <code>\"en_US\"</code> or <code>\"zh-Hans\"</code>.\n   */\n  setHumanLanguage(hl) {\n    if (hl) {\n      this._humanLanguage = hl;\n    }\n  }\n\n  /**\n   * Check if given topic is online.\n   *\n   * @param {string} name of the topic to test.\n   * @returns {boolean} true if topic is online, false otherwise.\n   */\n  isTopicOnline(name) {\n    const topic = this.#cacheGet('topic', name);\n    return topic && topic.online;\n  }\n\n  /**\n   * Get access mode for the given contact.\n   *\n   * @param {string} name of the topic to query.\n   * @returns {AccessMode} access mode if topic is found, null otherwise.\n   */\n  getTopicAccessMode(name) {\n    const topic = this.#cacheGet('topic', name);\n    return topic ? topic.acs : null;\n  }\n\n  /**\n   * Include message ID into all subsequest messages to server instructin it to send aknowledgemens.\n   * Required for promises to function. Default is <code>\"on\"</code>.\n   *\n   * @param {boolean} status - Turn aknowledgemens on or off.\n   * @deprecated\n   */\n  wantAkn(status) {\n    if (status) {\n      this._messageId = Math.floor((Math.random() * 0xFFFFFF) + 0xFFFFFF);\n    } else {\n      this._messageId = 0;\n    }\n  }\n\n  // Callbacks:\n  /**\n   * Callback to report when the websocket is opened. The callback has no parameters.\n   *\n   * @type {onWebsocketOpen}\n   */\n  onWebsocketOpen = undefined;\n\n  /**\n   * @typedef ServerParams\n   *\n   * @type {Object}\n   * @property {string} ver - Server version\n   * @property {string} build - Server build\n   * @property {string=} sid - Session ID, long polling connections only.\n   */\n\n  /**\n   * @callback onConnect\n   * @param {number} code - Result code\n   * @param {string} text - Text epxplaining the completion, i.e \"OK\" or an error message.\n   * @param {ServerParams} params - Parameters returned by the server.\n   */\n  /**\n   * Callback to report when connection with Tinode server is established.\n   * @type {onConnect}\n   */\n  onConnect = undefined;\n\n  /**\n   * Callback to report when connection is lost. The callback has no parameters.\n   * @type {onDisconnect}\n   */\n  onDisconnect = undefined;\n\n  /**\n   * @callback onLogin\n   * @param {number} code - NUmeric completion code, same as HTTP status codes.\n   * @param {string} text - Explanation of the completion code.\n   */\n  /**\n   * Callback to report login completion.\n   * @type {onLogin}\n   */\n  onLogin = undefined;\n\n  /**\n   * Callback to receive <code>{ctrl}</code> (control) messages.\n   * @type {onCtrlMessage}\n   */\n  onCtrlMessage = undefined;\n\n  /**\n   * Callback to recieve <code>{data}</code> (content) messages.\n   * @type {onDataMessage}\n   */\n  onDataMessage = undefined;\n\n  /**\n   * Callback to receive <code>{pres}</code> (presence) messages.\n   * @type {onPresMessage}\n   */\n  onPresMessage = undefined;\n\n  /**\n   * Callback to receive all messages as objects.\n   * @type {onMessage}\n   */\n  onMessage = undefined;\n\n  /**\n   * Callback to receive all messages as unparsed text.\n   * @type {onRawMessage}\n   */\n  onRawMessage = undefined;\n\n  /**\n   * Callback to receive server responses to network probes. See {@link Tinode#networkProbe}\n   * @type {onNetworkProbe}\n   */\n  onNetworkProbe = undefined;\n\n  /**\n   * Callback to be notified when exponential backoff is iterating.\n   * @type {onAutoreconnectIteration}\n   */\n  onAutoreconnectIteration = undefined;\n};\n\n// Exported constants\nTinode.MESSAGE_STATUS_NONE = Const.MESSAGE_STATUS_NONE;\nTinode.MESSAGE_STATUS_QUEUED = Const.MESSAGE_STATUS_QUEUED;\nTinode.MESSAGE_STATUS_SENDING = Const.MESSAGE_STATUS_SENDING;\nTinode.MESSAGE_STATUS_FAILED = Const.MESSAGE_STATUS_FAILED;\nTinode.MESSAGE_STATUS_FATAL = Const.MESSAGE_STATUS_FATAL;\nTinode.MESSAGE_STATUS_SENT = Const.MESSAGE_STATUS_SENT;\nTinode.MESSAGE_STATUS_RECEIVED = Const.MESSAGE_STATUS_RECEIVED;\nTinode.MESSAGE_STATUS_READ = Const.MESSAGE_STATUS_READ;\nTinode.MESSAGE_STATUS_TO_ME = Const.MESSAGE_STATUS_TO_ME;\n\n// Unicode [del] symbol.\nTinode.DEL_CHAR = Const.DEL_CHAR;\n\n// Names of keys to server-provided configuration limits.\nTinode.MAX_MESSAGE_SIZE = 'maxMessageSize';\nTinode.MAX_SUBSCRIBER_COUNT = 'maxSubscriberCount';\nTinode.MAX_TAG_COUNT = 'maxTagCount';\nTinode.MAX_FILE_UPLOAD_SIZE = 'maxFileUploadSize';\nTinode.REQ_CRED_VALIDATORS = 'reqCred';\n"],"names":["AccessMode","constructor","acs","given","decode","want","mode","checkFlag","#checkFlag","val","side","flag","includes","Error","str","_BITMASK","_NONE","bitmask","_JOIN","_READ","_WRITE","_PRES","_APPROVE","_SHARE","_DELETE","_OWNER","m0","i","length","bit","charAt","toUpperCase","encode","_INVALID","res","update","upd","action","val0","parts","split","diff","a1","a2","toString","jsonHelper","setMode","m","updateMode","u","getMode","setGiven","g","updateGiven","getGiven","setWant","w","updateWant","getWant","getMissing","getExcessive","updateAll","isOwner","isPresencer","isMuted","isJoiner","isReader","isWriter","isApprover","isAdmin","isSharer","isDeleter","CBuffer","comparator","undefined","unique","buffer","compare_","unique_","a","b","findNearest","#findNearest","elem","arr","exact","start","end","pivot","found","idx","insertSorted","#insertSorted","count","splice","getAt","at","getLast","put","insert","arguments","Array","isArray","delAt","r","delRange","since","before","reset","forEach","callback","startIdx","beforeIdx","context","call","find","nearest","filter","isEmpty","CommError","message","code","name","PACKAGE_VERSION","PROTOCOL_VERSION","VERSION","LIBRARY","TOPIC_NEW","TOPIC_NEW_CHAN","TOPIC_ME","TOPIC_FND","TOPIC_SYS","TOPIC_CHAN","TOPIC_GRP","TOPIC_P2P","USER_NEW","LOCAL_SEQID","MESSAGE_STATUS_NONE","MESSAGE_STATUS_QUEUED","MESSAGE_STATUS_SENDING","MESSAGE_STATUS_FAILED","MESSAGE_STATUS_FATAL","MESSAGE_STATUS_SENT","MESSAGE_STATUS_RECEIVED","MESSAGE_STATUS_READ","MESSAGE_STATUS_TO_ME","EXPIRE_PROMISES_TIMEOUT","EXPIRE_PROMISES_PERIOD","RECV_TIMEOUT","DEFAULT_MESSAGES_PAGE","DEL_CHAR","jsonParseHelper","WebSocketProvider","XHRProvider","NETWORK_ERROR","NETWORK_ERROR_TEXT","NETWORK_USER","NETWORK_USER_TEXT","_BOFF_BASE","_BOFF_MAX_ITER","_BOFF_JITTER","makeBaseUrl","host","protocol","version","apiKey","url","Connection","log","_","boffTimer","boffIteration","boffClosed","socket","secure","autoreconnect","initialized","config","version_","autoreconnect_","transport","init_lp","init_ws","setNetworkProviders","wsProvider","xhrProvider","logger","l","connect","host_","force","Promise","reject","reconnect","disconnect","sendText","msg","isConnected","probe","backoffReset","boffReset","boffReconnect","#boffReconnect","clearTimeout","timeout","Math","pow","random","onAutoreconnectIteration","setTimeout","prom","catch","boffStop","#boffStop","#boffReset","#init_lp","XDR_UNSENT","XDR_OPENED","XDR_HEADERS_RECEIVED","XDR_LOADING","XDR_DONE","_lpURL","_poller","_sender","lp_sender","url_","sender","onreadystatechange","evt","readyState","status","open","lp_poller","resolve","poller","promiseCompleted","pkt","JSON","parse","responseText","ctrl","params","sid","send","onOpen","onMessage","onDisconnect","text","abort","err","#init_ws","OPEN","close","conn","onerror","onopen","onclose","onmessage","data","DB_VERSION","DB_NAME","IDBProvider","DB","onError","db","disabled","mapObjects","#mapObjects","source","trx","transaction","event","target","error","objectStore","getAll","onsuccess","result","topic","initDatabase","req","onupgradeneeded","createObjectStore","keyPath","deleteDatabase","onblocked","isReady","updTopic","oncomplete","get","serializeTopic","commit","markTopicAsDeleted","deleted","_deleted","remTopic","delete","IDBKeyRange","only","bound","Number","MAX_SAFE_INTEGER","mapTopics","deserializeTopic","src","updUser","uid","pub","public","remUser","mapUsers","getUser","user","updSubscription","topicName","sub","serializeSubscription","mapSubscriptions","addMessage","add","serializeMessage","updMessageStatus","seq","_status","remMessages","from","to","range","readMessages","query","limit","openCursor","cursor","value","push","continue","topic_fields","#deserializeTopic","f","hasOwnProperty","tags","_tags","setAccessMode","read","unread","max","#serializeTopic","dst","getAccessMode","#serializeSubscription","fields","#serializeMessage","setDatabaseProvider","idbProvider","MAX_FORM_ELEMENTS","MAX_PREVIEW_ATTACHMENTS","MAX_PREVIEW_DATA_SIZE","JSON_MIME_TYPE","DRAFTY_MIME_TYPE","ALLOWED_ENT_FIELDS","INLINE_STYLES","FMT_WEIGHT","ENTITY_TYPES","dataName","pack","test","re","slice","FORMAT_TAGS","AU","html_tag","md_tag","isVoid","BN","BR","CO","DL","EM","EX","FM","HD","HL","HT","IM","LN","MN","RW","QQ","ST","VC","VD","base64toObjectUrl","b64","contentType","bin","atob","buf","ArrayBuffer","Uint8Array","charCodeAt","URL","createObjectURL","Blob","type","base64toDataUrl","DECORATORS","props","href","id","act","ref","mime","Drafty","duration","size","tmpPreviewUrl","_tempPreview","previewUrl","downloadUrl","width","height","title","alt","state","preview","premime","poster","preref","txt","fmt","ent","init","plainText","content","lines","entityMap","entityIndex","blx","line","spans","entities","tag","concat","spannify","block","sort","toSpanTree","chunks","chunkify","drafty","draftify","extractEntities","ranges","entity","index","tp","offset","len","key","map","s","append","first","second","insertImage","imageDesc","ex","refurl","bits","filename","urlPromise","_processing","then","insertVideo","videoDesc","urls","insertAudio","audioDesc","videoCall","audioOnly","aonly","updateVideoCall","Object","assign","quote","header","body","appendLineBreak","mention","appendLink","linkData","appendImage","appendAudio","attachFile","attachmentDesc","wrapInto","style","wrapAsForm","insertButton","actionType","actionValue","refUrl","indexOf","appendButton","attachJSON","UNSAFE_toHTML","doc","tree","draftyToTree","htmlFormatter","values","join","treeBottomUp","format","original","formatter","shorten","light","shortenTree","lightEntity","treeToDrafty","forwardedContent","rmMention","node","parent","treeTopDown","lTrim","replyContent","convMNnQQnBR","startsWith","children","attachmentsToEnd","forwarding","toPlainText","isPlainText","toMarkdown","mdFormatter","def","isValid","txt_type","hasAttachments","attachments","hasEntities","styles","sanitizeEntities","copyEntData","getDownloadUrl","entData","isProcessing","getPreviewUrl","getEntitySize","getEntityMimeType","tagName","attrValue","getContentType","span","chunk","chld","re_start","re_end","exec","start_offset","lastIndexOf","end_offset","last","spansToTree","flatten","child","addNode","n","substring","att","subspans","inner","keymap","c","keys","newKey","transformer","stack","pop","tail","shortener","allow","lightCopy","trimStart","shift","match","extracted","el","startAt","plain","entries","dc","module","exports","isUrlRelative","addURLParam","relUrl","window","location","origin","searchParams","LargeFileHelper","tinode","_tinode","_version","_apiKey","_authToken","getAuthToken","xhr","uploadWithBaseUrl","baseUrl","avatarFor","onProgress","onSuccess","onFailure","base","endsWith","instance","setRequestHeader","token","toResolve","toReject","upload","onprogress","e","lengthComputable","loaded","total","onload","response","statusText","onabort","form","FormData","set","getNextUniqueId","_secure","_host","download","relativeUrl","mimetype","responseType","link","document","createElement","display","setAttribute","appendChild","click","removeChild","revokeObjectURL","reader","FileReader","readAsText","cancel","setNetworkProvider","MetaGetBuilder","what","get_desc_ims","#get_desc_ims","updated","get_subs_ims","#get_subs_ims","isP2PType","_lastSubsUpdate","withData","withLaterData","_maxSeq","withEarlierData","_minSeq","withDesc","ims","withLaterDesc","withSub","userOrTopic","opts","getType","withOneSub","withLaterOneSub","withLaterSub","withTags","withCred","withDel","withLaterDel","_maxDel","extract","build","getOwnPropertyNames","Const","mergeObj","mergeToCache","normalizeArray","Topic","callbacks","created","touched","Date","private","trusted","_users","_queuedSeqId","_noEarlierMsgs","_recvNotificationTimer","_credentials","_messageVersions","_messages","_attached","_new","_delayedLeaveTimer","onData","onMeta","onPres","onInfo","onMetaDesc","onMetaSub","onSubsUpdated","onTagsUpdated","onCredsUpdated","onDeleteTopic","onAllMessagesReceived","topicType","types","isMeTopicName","isGroupTopicName","isP2PTopicName","isCommTopicName","isNewGroupTopicName","isChannelTopicName","isSubscribed","subscribe","getParams","setParams","_cacheDelSelf","_cachePutSelf","ts","me","getMeTopic","desc","_noForwarding","_processMetaDesc","createMessage","noEcho","publish","publishMessage","_sending","_failed","swapMessageId","_maybeUpdateMessageVersionsCache","_routeData","publishDraft","_getQueuedSeqId","getCurrentUserID","noecho","_db","_cancelled","_fatal","leave","unsub","_resetSub","_gone","leaveDelayed","delay","getMeta","getMessagesPage","forward","startMetaQuery","_loadMessages","promise","setMeta","_processMetaSubs","_processMetaTags","cred","_processMetaCreds","subscriber","am","invite","archive","arch","delMessages","hard","r1","r2","low","hi","tosend","reduce","out","del","flushMessageRange","flushMessage","delMessagesAll","hardDel","_all","delMessagesList","list","prev","delMessagesEdits","messageVersions","delTopic","delSubscription","note","_updateMyReadRecv","_refreshContact","noteRecv","noteRead","noteKeyPress","noteRecording","payload","oldVal","doUpdate","recv","userDesc","_cacheGetUser","p2pPeerDesc","subscribers","cb","origSeq","versions","messages","sinceId","beforeId","msgs","unused1","unused2","_isReplacementMsg","latest","latestMsgVersion","_origTs","_origSeq","findMessage","latestMessage","maxMsgSeq","minMsgSeq","maxClearId","messageCount","queuedMessages","msgReceiptCount","msgReadCount","msgRecvCount","msgHasMoreMessages","newer","isNewMessage","seqId","fromId","untilId","newSeqId","numMessages","cancelSend","msgStatus","getDefaultAccess","defacs","isArchived","isMeType","isChannelType","isGroupType","isCommType","isMe","head","replace","targetSeq","parseInt","targetMsg","outgoing","webrtc","incoming","_routeInfo","_routeMeta","meta","_processDelMessages","clear","delseq","_routePres","pres","online","isTopicCached","dacs","info","subs","_updateCachedUser","creds","_allMessagesReceived","obj","cached","_cachePutUser","_updateReceived","TopicMe","onContactUpdate","turnOff","_myUID","cont","seen","when","updateCount","cacheRemTopic","getTopic","cr","findIndex","meth","done","resp","cacheGetTopic","tgt","ua","dummy","delCredential","method","contacts","getContact","getCredentials","TopicFnd","_contacts","indexBy","getPrototypeOf","prototype","date","isNaN","isValidDate","d","getTime","rfc3339DateString","pad","sp","repeat","millis","getUTCMilliseconds","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","ignore","prop","cache","newval","simplify","t","trim","toLowerCase","item","pos","ary","DBCache","WebSocket","XMLHttpRequest","IndexedDBProvider","indexedDB","initForNonBrowserApp","chars","btoa","global","input","output","charCode","bc","bs","String","fromCharCode","detectTransport","b64EncodeUnicode","encodeURIComponent","toSolidBytes","p1","jsonBuildHelper","jsonLoggerHelper","getBrowserInfo","product","reactnative","priority","tmp","substr","tokens","m2","v","minor","Tinode","_appName","_browser","_platform","_hwos","_humanLanguage","_loggingEnabled","_trimLongStrings","_authenticated","_login","_inPacketCount","_messageId","floor","_serverInfo","_deviceToken","_pendingPromises","_expirePromises","_connection","_persist","_cache","onComplete","appName","platform","navigator","userAgent","language","dispatchMessage","connectionOpen","disconnected","persist","cacheGet","attachCacheToTopic","cachePut","all","dateString","_len","args","_key","console","makePromise","#makePromise","execPromise","#execPromise","onOK","errorText","#send","stringify","#dispatchMessage","onRawMessage","onNetworkProbe","onCtrlMessage","onMetaMessage","onDataMessage","onPresMessage","onInfoMessage","#connectionOpen","setInterval","expires","hello","#disconnected","clearInterval","cacheMap","getUserAgent","#getUserAgent","initPacket","#initPacket","#cachePut","#cacheGet","cacheDel","#cacheDel","#cacheMap","func","#attachCacheToTopic","_cacheDelUser","loginSuccessful","#loginSuccessful","onLogin","credential","getVersion","getLibrary","isNullValue","clearStorage","initStorage","networkProbe","isAuthenticated","authorizeURL","parsed","account","scheme","secret","login","acc","tmpscheme","tmpsecret","extra","createAccount","createAccountBasic","username","password","updateAccountBasic","onConnect","setDeviceToken","dt","sent","loginBasic","uname","loginToken","requestResetAuthSecret","now","setAuthToken","dft","oobNotification","xfrom","finally","modeGiven","modeWant","delCurrentUser","newGroupTopicName","isChan","getFndTopic","getLargeFileHelper","getCurrentLogin","getServerInfo","report","getServerParam","defaultValue","enableLogging","enabled","trimLongStrings","setHumanLanguage","hl","isTopicOnline","getTopicAccessMode","wantAkn","onWebsocketOpen","MAX_MESSAGE_SIZE","MAX_SUBSCRIBER_COUNT","MAX_TAG_COUNT","MAX_FILE_UPLOAD_SIZE","REQ_CRED_VALIDATORS"],"sourceRoot":""}
